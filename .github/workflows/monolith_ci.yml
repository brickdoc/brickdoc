# https://help.github.com/en/actions/reference/workflow-syntax-for-github-actions#jobsjob_idsteps
---
name: Monolith Application CI
concurrency:
  group: monolith-ci-${{ github.ref }}
  cancel-in-progress: true
on:
  pull_request:
    # Make sure same as push
    paths-ignore:
      - .github/**
      - '!.github/workflow/monolith_ci.yml'
      - .husky/**
      - packages/eslint-plugin-brickdoc/**
      - gems/rubocop-brickdoc/**
      - '**/LICENSE'
      - '**/NOTICE'
      - '**/VERSION'
  push:
    # Make sure same as pull_request
    paths-ignore:
      - .github/**
      - '!.github/workflow/monolith_ci.yml'
      - .husky/**
      - packages/eslint-plugin-brickdoc/**
      - gems/rubocop-brickdoc/**
      - '**/LICENSE'
      - '**/NOTICE'
      - '**/VERSION'
    branches:
      - master
      - main

env:
  POSTGRES_PASS: '123456'
  REDIS_URL: redis://127.0.0.1:6379
  SECURITY_REVERSIBLE_INT_PRIME: 1911469727
  SECURITY_REVERSIBLE_INT_RANDOM: 1996136202
  SECURITY_REVERSIBLE_INT_INVERSE: 2083710303
  UNSPLASH_API_ACCESS_KEY: ${{ secrets.UNSPLASH_API_ACCESS_KEY }}
  UNSPLASH_API_SECRET: ${{ secrets.UNSPLASH_API_SECRET }}
  IFRAMELY_API_ACCESS_KEY: ${{ secrets.IFRAMELY_API_ACCESS_KEY }}
  PDFJS_EXPRESS_LICENSE: ${{ secrets.PDFJS_EXPRESS_LICENSE }}
  SENTRY_DSN: ${{ secrets.SENTRY_DSN }}
  # GitHub-hosted runner have 7 gb RAM.
  # 5250mb === 7gb * 0.75
  NODE_OPTIONS: '--max-old-space-size=5950'

jobs:
  jest:
    name: Jest Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the codebase
        uses: actions/checkout@v2
        with:
          fetch-depth: 2 # To retrieve the preceding commit.
      - name: Get changed ES files
        id: changed-es-files
        uses: tj-actions/changed-files@v17.2
        with:
          files: |
            yarn.lock
            **/*.ts
            **/*.tsx
            **/*.js
            **/*.jsx
      - name: Setup NodeJS
        uses: actions/setup-node@v3
        if: steps.changed-es-files.outputs.any_changed == 'true'
        with:
          node-version: 16
          cache: yarn
      - name: Run yarn install
        run: yarn install --immutable
        if: steps.changed-es-files.outputs.any_changed == 'true'
        env:
          CYPRESS_INSTALL_BINARY: '0'
      - name: Run Jest tests
        if: steps.changed-es-files.outputs.any_changed == 'true'
        run: yarn test:jest --silent
      - name: Publish Jest test reports
        if: always() && steps.changed-es-files.outputs.any_changed == 'true'
        uses: mikepenz/action-junit-report@v2
        with:
          report_paths: junit-reports/jest.xml
          check_name: Jest Test Report
      - name: Publish Jest code coverage reports
        if: steps.changed-es-files.outputs.any_changed == 'true'
        uses: codecov/codecov-action@v2
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          flags: frontend-unit
  cache_dist:
    name: Cache Frontend Dist
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the codebase
        uses: actions/checkout@v2
      - name: Setup NodeJS
        uses: actions/setup-node@v3
        with:
          node-version: 16
          cache: yarn
      - name: Check Cypress binary cache
        id: cache-cypress-binary
        uses: actions/cache@v2
        with:
          path: |
            ~/.cache/Cypress
          key: cypress-binary-${{ runner.os }}-${{ hashFiles('yarn.lock') }}
      - name: install cypress
        uses: cypress-io/github-action@v2
        if: steps.cache-cypress-binary.outputs.cache-hit != 'true'
        with:
          # just perform install
          runTests: false
      - name: Run yarn install without cypress
        run: yarn install --immutable
        env:
          CYPRESS_INSTALL_BINARY: '0'
      - name: Install Dependencies
        run: sudo apt-get update && sudo apt-get install libsodium23 rustc
      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 3.0.2
          bundler-cache: true # runs 'bundle install' and caches installed gems automatically
      - name: Dist Russian doll caching
        id: cache-dist-doll
        uses: actions/cache@v2
        with:
          path: public
          key: ${{ github.ref }}-public-doll
      - name: Cache Dist
        id: cache-dist
        uses: actions/cache@v2
        with:
          path: public
          key: ${{ github.sha }}-public
      - name: build frontend dist
        run: yarn dist:prod
  rspec_and_dump_schema:
    name: Rails RSpec & Schema Dump
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_DB: 'brickdoc_test'
          POSTGRES_USER: 'postgres'
          POSTGRES_PASSWORD: '123456'
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
      redis:
        image: redis:latest
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - name: Checkout the codebase
        uses: actions/checkout@v2
        with:
          fetch-depth: 2 # To retrieve the preceding commit.
      - name: Get changed Ruby files
        id: changed-ruby-files
        uses: tj-actions/changed-files@v17.2
        with:
          files: |
            Gemfile.lock
            **/*.rb
            **/*.gemspec
      - name: Install Dependencies
        if: steps.changed-ruby-files.outputs.any_changed == 'true'
        run: sudo apt-get update && sudo apt-get install libsodium23 rustc
      - name: Setup Ruby
        if: steps.changed-ruby-files.outputs.any_changed == 'true'
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 3.0.2
          bundler-cache: true # runs 'bundle install' and caches installed gems automatically
      - name: Run DB migrations
        if: steps.changed-ruby-files.outputs.any_changed == 'true'
        run: bundle exec rails db:prepare
        env:
          RAILS_ENV: test
      - name: Run RSpec tests
        if: steps.changed-ruby-files.outputs.any_changed == 'true'
        env:
          RAILS_ENV: test
        run: bundle exec rspec --format RspecJunitFormatter --out junit-reports/rspec.xml
      - name: Run RSpec setting tests
        if: steps.changed-ruby-files.outputs.any_changed == 'true'
        env:
          RAILS_ENV: test
        run: cd gems/brickdoc_settings && bundle && bundle exec rspec --format RspecJunitFormatter --out ../../junit-reports/rspec_setting.xml && cd ../..
      - name: Publish RSpec test reports
        if: always() && steps.changed-ruby-files.outputs.any_changed == 'true'
        uses: mikepenz/action-junit-report@v2
        with:
          report_paths: junit-reports/rspec.xml
          check_name: Rails RSpec Test Report
      - name: Publish RSpec setting test reports
        if: always() && steps.changed-ruby-files.outputs.any_changed == 'true'
        uses: mikepenz/action-junit-report@v2
        with:
          report_paths: junit-reports/rspec_setting.xml
          check_name: Rails RSpec Test Setting Report
      - name: Publish RSpec code coverage reports
        if: steps.changed-ruby-files.outputs.any_changed == 'true'
        uses: codecov/codecov-action@v2
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          flags: backend-unit
      - name: Get changed database migrations
        id: changed-db-migrations
        uses: tj-actions/changed-files@v17.2
        with:
          files: |
            db\/migrate
      - name: Get changed GraphQL type definitions
        id: changed-gql-typeds
        uses: tj-actions/changed-files@v17.2
        with:
          files: |
            app\/graphql
            lib\/brick_graphql
            graphql.ts$
      - name: Dump the graphql schema & GRPC schema
        if: steps.changed-gql-typeds.outputs.any_changed == 'true'
        run: yarn install --immutable && yarn graphql && yarn grpc
      - name: Dump the database schema
        if: steps.changed-db-migrations.outputs.any_changed == 'true'
        run: bundle exec rails db:prepare db:schema:dump
      - name: Add and commit everything
        uses: EndBug/add-and-commit@v8.0.2
        if: github.ref != 'refs/heads/master'
        env:
          HUSKY: 0
        with:
          default_author: github_actions
          message: 'chore: bump schemas and dists'
          add: 'app lib packages spec config db frontends'
  running_e2e:
    name: E2E Test
    runs-on: ubuntu-latest
    needs: cache_dist
    strategy:
      matrix:
        # run 3 copies of the current job in parallel
        containers: [1, 2, 3]
    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_DB: 'brickdoc_test'
          POSTGRES_USER: 'postgres'
          POSTGRES_PASSWORD: '123456'
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
      redis:
        image: redis:latest
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    env:
      CYPRESS: 1
      RAILS_ENV: test
    steps:
      - name: Checkout the codebase
        uses: actions/checkout@v2
      - name: Setup NodeJS
        uses: actions/setup-node@v3
        with:
          node-version: 16
          cache: yarn
      - name: Run yarn install without cypress
        run: yarn install --immutable
        env:
          CYPRESS_INSTALL_BINARY: '0'
      - name: Restore Cypress binary cache
        uses: actions/cache@v2
        with:
          path: |
            ~/.cache/Cypress
          key: cypress-binary-${{ runner.os }}-${{ hashFiles('yarn.lock') }}
      - name: Install Dependencies
        run: sudo apt-get update && sudo apt-get install libsodium23 rustc
      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 3.0.2
          bundler-cache: true # runs 'bundle install' and caches installed gems automatically
      - name: Create Log dir & Run DB migrations
        run: mkdir -p log && bundle exec rails db:prepare
      - name: Cache Dist
        id: cache-dist
        uses: actions/cache@v2
        with:
          path: public
          key: ${{ github.sha }}-public
      - name: build dist
        if: steps.cache-dist.outputs.cache-hit != 'true'
        run: yarn dist:prod
      # - name: Ensure the server is running
      #   run: curl http://localhost:3000/accounts/sign_in -I
      - name: Run Cypress tests
        uses: cypress-io/github-action@v2
        with:
          start: bundle exec rails s
          parallel: true
          browser: chrome
          install: false
          record: true
          config: '{"reporter":"cypress-multi-reporters","reporterOptions":{"configFile":"cypress/ciReporterConfig.json"}}'
          tag: ${{ github.event_name }}
        env:
          CYPRESS_COVERAGE: 1
          CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_RECORD_KEY }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          # See https://github.com/cypress-io/github-action/issues/124#issuecomment-653180260
          COMMIT_INFO_MESSAGE: ${{ github.event.pull_request.title }}
      - name: Publish Cypress test reports
        if: always()
        uses: mikepenz/action-junit-report@v2
        with:
          report_paths: junit-reports/cypress/*.xml
          check_name: Cypress Test Report
      - name: Publish Cypress code coverage reports
        uses: codecov/codecov-action@v2
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          flags: frontend-e2e
      - name: Publish Rails code coverage reports during Cypress tests
        uses: codecov/codecov-action@v2
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          flags: backend-e2e
      - name: Upload Rails log (when failed)
        if: failure()
        uses: actions/upload-artifact@v2
        with:
          name: cypress-rails-logs
          retention-days: 3
          path: log/
      - name: Upload cypress screenshots (when failed)
        if: failure()
        uses: actions/upload-artifact@v2
        with:
          name: cypress-screenshots
          if-no-files-found: ignore
          retention-days: 3
          path: cypress/screenshots/
      - name: Upload build artifacts
        if: always()
        uses: actions/upload-artifact@v2
        with:
          name: cypress-videos
          if-no-files-found: ignore
          retention-days: 3
          path: cypress/videos/
