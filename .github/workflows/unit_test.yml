name: Unit Test
concurrency:
  group: monolith-ci-${{ github.ref }}
  cancel-in-progress: true
on:
  pull_request:
  push:
    branches:
      - master
      - main
env:
  YARN_CHECKSUM_BEHAVIOR: update
  TURBO_TOKEN: ${{ secrets.TURBO_TOKEN }}
  TURBO_TEAM: brickdoc
  REDIS_URL: redis://localhost:6379
  DATABASE_URL_BASE: postgres://postgres:just4testing@localhost:5432
jobs:
  jest:
    name: Jest
    runs-on: ubuntu-latest
    timeout-minutes: 20
    steps:
      - name: Checkout the codebase
        uses: actions/checkout@v3
      - name: Setup NodeJS
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: yarn
      - name: Run yarn install
        run: yarn install --immutable
      - name: Run Jest tests
        run: yarn test:jest
        env:
          NODE_OPTIONS: '--max-old-space-size=5950'
      - name: Publish Jest test reports
        if: always()
        uses: mikepenz/action-junit-report@v3.0.3
        with:
          report_paths: '**/junit-reports/jest.xml'
          check_name: Jest Test Report
      - name: Publish Jest code coverage reports
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          flags: frontend-unit
  rspec:
    name: Rspec
    runs-on: ubuntu-latest
    services:
      # image version suggestion same as tools/helm-charts/brickdoc
      postgres:
        image: postgres:14-alpine
        env:
          POSTGRES_DB: 'brickdoc_next_test'
          POSTGRES_USER: 'postgres'
          POSTGRES_PASSWORD: 'just4testing'
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
      redis:
        image: redis:7-alpine
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - name: Checkout the codebase
        uses: actions/checkout@v2
        with:
          fetch-depth: 2 # To retrieve the preceding commit.
      - name: Get changed ruby files
        id: changed-ruby-or-rust-files
        uses: tj-actions/changed-files@v20
        with:
          files: |
            .(rb|rs)$
            Gemfile.lock
            Cargo.lock
      - name: Install Dependencies
        run: sudo apt-get update && sudo apt-get install libsodium23
      - name: Setup Rust
        uses: actions-rs/toolchain@v1
        if: steps.changed-ruby-or-rust-files.outputs.any_changed == 'true'
        with:
          toolchain: stable
      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        if: steps.changed-ruby-or-rust-files.outputs.any_changed == 'true'
        with:
          ruby-version: 3.1.2
          working-directory: 'apps/server-monolith'
          bundler-cache: true # runs 'bundle install' and caches installed gems automatically
      - name: Run bundle install for native build
        run: bundle install
        if: steps.changed-ruby-or-rust-files.outputs.any_changed == 'true'
      - name: Run DB migrations
        if: steps.changed-ruby-or-rust-files.outputs.any_changed == 'true'
        run: yarn server bundle exec rails db:prepare
        env:
          RAILS_ENV: test
      - name: Run RSpec tests
        if: steps.changed-ruby-or-rust-files.outputs.any_changed == 'true'
        env:
          RAILS_ENV: test
        run: yarn server bundle exec rspec --format RspecJunitFormatter --out junit-reports/rspec.xml
      - name: Publish RSpec test reports
        if: always() && steps.changed-ruby-or-rust-files.outputs.any_changed == 'true'
        uses: mikepenz/action-junit-report@v2
        with:
          report_paths: junit-reports/rspec.xml
          check_name: Rails RSpec Test Report
      - name: Publish RSpec setting test reports
        if: always() && steps.changed-ruby-or-rust-files.outputs.any_changed == 'true'
        uses: mikepenz/action-junit-report@v2
        with:
          report_paths: junit-reports/rspec_setting.xml
          check_name: Rails RSpec Test Setting Report
      - name: Publish RSpec code coverage reports
        if: steps.changed-ruby-or-rust-files.outputs.any_changed == 'true'
        uses: codecov/codecov-action@v2
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          flags: backend-unit
      - name: Get changed database migrations
        id: changed-db-migrations
        uses: tj-actions/changed-files@v20
        with:
          files: |
            apps\/server-monolith\/db\/migrate
      - name: Get changed GraphQL type definitions
        id: changed-gql-typeds
        uses: tj-actions/changed-files@v20
        with:
          files: |
            apps\/server-monolith\/app\/graphql
            apps\/server-monolith\/lib\/brick_graphql
            graphql.ts$
      - name: Dump the graphql schema
        if: steps.changed-gql-typeds.outputs.any_changed == 'true'
        run: yarn install --immutable && yarn graphql
      - name: Dump the database schema
        if: steps.changed-db-migrations.outputs.any_changed == 'true'
        run: yarn server bundle exec rails db:prepare db:schema:dump
      - name: Add and commit everything
        uses: EndBug/add-and-commit@v9.0.0
        if: github.ref != 'refs/heads/master' && github.ref != 'refs/heads/main'
        env:
          HUSKY: 0
        with:
          default_author: github_actions
          message: 'chore: bump schemas and dists'
          add: 'apps packages'
