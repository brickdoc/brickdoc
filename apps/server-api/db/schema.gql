# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

"""Hashed IntID Scalar"""
scalar HashedID

"""
The `JSONObject` scalar type represents JSON objects as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf).
"""
scalar JSONObject

"""Locale"""
type Locale {
  """Locale language's description of local"""
  describe: String!

  """English name of Language"""
  language: String!

  """Locale tag"""
  tag: String!
}

"""Brickdoc Server Instance Metadata"""
type Metadata {
  """Some settings are exposed to the client."""
  exposedSettings: JSONObject

  """Supported locales"""
  supportedLocales: [Locale!]!

  """Supported IANA timezones"""
  supportedTimezones: [String!]!
}

type Mutation {
  """Logout current user."""
  logout: Boolean!

  """Update user appearance."""
  userAppearanceUpdate(input: UserAppearanceUpdateInput!): Boolean!
}

"""
In Brickdoc, Pod is an abstract table used to represent tenants, which can be either users or spaces. A data pod is a place for storing documents, with mechanisms for controlling who can access what.
"""
interface Pod {
  """Avatar URL"""
  avatarUrl: URL

  """BIO"""
  bio: String

  """Identifies the date and time when the object was created."""
  createdAt: DateTime!

  """Hashed Unique ID"""
  id: HashedID!

  """Display Name"""
  name: String!

  """
  Slug is a unique name to identify the object, but users could customize it
  """
  slug: String!

  """Identifies the date and time when the object was last updated."""
  updatedAt: DateTime!
}

type Query {
  """Get information about current user."""
  currentUser: User!

  """Return information about current Brickdoc server instance."""
  metadata: Metadata!

  """Query user appearance."""
  userAppearance: UserAppearance!
}

"""
A field whose value conforms to the standard URL format as specified in RFC3986: https://www.ietf.org/rfc/rfc3986.txt
"""
scalar URL

"""
A user is an individual's account on Brickdoc that owns spaces and can make new content.
"""
type User implements Pod {
  """Avatar URL"""
  avatarUrl: URL

  """BIO"""
  bio: String

  """Identifies the date and time when the object was created."""
  createdAt: DateTime!

  """Hashed Unique ID"""
  id: HashedID!

  """User is initialized"""
  isInitialized: Boolean!

  """User locked at"""
  lockedAt: DateTime

  """Display Name"""
  name: String!

  """
  Slug is a unique name to identify the object, but users could customize it
  """
  slug: String!

  """Identifies the date and time when the object was last updated."""
  updatedAt: DateTime!
}

"""User appearance object"""
type UserAppearance {
  """locale"""
  locale: String!

  """timezone"""
  timezone: String!
}

"""User appearance update input"""
input UserAppearanceUpdateInput {
  """locale"""
  locale: String!

  """timezone"""
  timezone: String!
}