name: Create Monolith Application Pull Request Preview Env
concurrency:
  group: monolith-preview-env-${{ github.ref }}
  cancel-in-progress: true
on:
  pull_request:
    types: [opened, synchronize]
    paths-ignore:
      - '.husky/**'
      - 'bin/**'
      - 'packages/less-vars-loader/**'
      - 'packages/eslint-plugin-brickdoc/**'
      - 'gems/rubocop-brickdoc/**'
      - '**/*.md'
      - 'packages/**/Dockerfile'
      - '**/.git*'
      - '**/crowdin.yml'
      - '**/LICENSE'
      - '**/NOTICE'
      - '**/VERSION'
env:
  image: ghcr.io/brickdoc/brickdoc:pr.${{github.event.pull_request.number}}
  domain: pr-${{ github.event.pull_request.number }}.brickdoc.dev
jobs:
  build:
    name: 'Build and Push Docker Image'
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout the codebase
        uses: actions/checkout@v2
      - name: Setup NodeJS
        uses: actions/setup-node@v2
        with:
          node-version: 16
          cache: yarn
      - run: yarn install --immutable
        env:
          CYPRESS_INSTALL_BINARY: '0'
      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 3.0.2
          bundler-cache: true # runs 'bundle install' and caches installed gems automatically
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: brickdocCE-pr-${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            brickdocCE-pr-${{ runner.os }}-buildx-
      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          build-args: |
            "RAILS_ENV=cicd"
          tags: ${{ env.image }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new
        # Temp fix
        # https://github.com/docker/build-push-action/issues/252
        # https://github.com/moby/buildkit/issues/1896
      - name: Move cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache
  deploy:
    name: 'Deployment to BAE'
    environment:
      name: pr_preview
      url: ${{ env.domain }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Uninstall History Release
        uses: brickdoc/app-engine@v1.beta3
        with:
          name: brickdoc-preview-pr${{ github.event.pull_request.number }}
          task: 'remove'
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_GLOBAL_CORP_AK }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_GLOBAL_CORP_SECRET }}
      - name: Checkout the codebase
        uses: actions/checkout@v2
      - name: Deployment to App Engine
        uses: brickdoc/app-engine@v1.beta3
        with:
          name: brickdoc-preview-pr${{ github.event.pull_request.number }}
          image: ${{ env.image }}
          host: ${{ env.domain }}
          chart: ${{ github.workspace }}/templates/helm-charts/brickdoc
          extraArgs: '--set previewEnv=true --timeout 10m --cleanup-on-fail'
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_GLOBAL_CORP_AK }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_GLOBAL_CORP_SECRET }}
          APP_ENV_HOST: ${{ env.domain }}
          APP_ENV_SENTRY_DSN: ${{ secrets.SENTRY_DSN }}
          APP_ENV_AWS_REGION: us-east-1
          APP_ENV_AWS_PUBLIC_BUCKET: brickdoc-trunk-public
          APP_ENV_AWS_PRIVATE_BUCKET: brickdoc-trunk-private
          APP_SECRET_SECRET_KEY_SEED: ${{ secrets.PR_SECRET_KEY_SEED }}
          APP_SECRET_UNSPLASH_API_ACCESS_KEY: ${{ secrets.UNSPLASH_API_ACCESS_KEY }}
          APP_SECRET_UNSPLASH_API_SECRET: ${{ secrets.UNSPLASH_API_SECRET }}
      - name: Find Comment
        uses: peter-evans/find-comment@v1
        id: fc
        with:
          issue-number: ${{ github.event.pull_request.number }}
          comment-author: 'github-actions[bot]'
          body-includes: This pull request is automatically built and testable in
      - name: Create or update comment
        uses: peter-evans/create-or-update-comment@v1
        with:
          comment-id: ${{ steps.fc.outputs.comment-id }}
          issue-number: ${{ github.event.pull_request.number }}
          body: |
            This pull request is automatically built and testable in [${{ env.domain }}](https://${{ env.domain }}).
            ## Devtools
            * [Mailer Mock](https://${{ env.domain }}/devtools/mailer)
            * [Pod Logs](https://console.aws.amazon.com/cloudwatch/home?region=us-east-1#logsV2:logs-insights$3FqueryDetail$3D$257E$2528end$257E0$257Estart$257E-10800$257EtimeType$257E$2527RELATIVE$257Eunit$257E$2527seconds$257EeditorString$257E$2527fields*20*40timestamp*2c*20log*2c*20ispresent*28kubernetes.pod_name*29*20as*20haskubernetes_pod_name*0a*7c*20filter*20haskubernetes_pod_name*20and*20kubernetes.pod_name*20like*20*2fbrickdoc-preview-pr${{ github.event.pull_request.number }}-brickdoc-ce*2f*0a*7c*20sort*20*40timestamp*20desc*0a*7c*20limit*20100$257EisLiveTail$257Efalse$257EqueryId$257E$25270.7634460475768581$257Esource$257E$2528$257E$2527*2faws*2fcontainerinsights*2fglobal-corp-kube*2fapplication$2529$2529)
          edit-mode: replace
