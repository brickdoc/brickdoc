name: Create Monolith Application Pull Request Preview Env

on:
  pull_request:
    types: [opend, synchronize]
    paths-ignore:
      - '.husky/**'
      - 'bin/**'
      - 'packages/less-vars-loader/**'
      - 'packages/rubocop-brickdoc/**'
      - 'packages/eslint-plugin-brickdoc/**'
      - '**/*.md'
      - 'packages/**/Dockerfile'
      - '**/.git*'
      - '**/crowdin.yml'
      - '**/LICENSE'
      - '**/NOTICE'
      - '**/VERSION'
env:
  image: ghcr.io/brickdoc/brickdoc:pr.${{github.event.pull_request.number}}
  domain: pr-${{ github.event.pull_request.number }}.brickdoc.dev
jobs:
  cancel:
    # Cancel any previous CI runs to save GH Actions minutes
    name: 'Cancel Previous Runs'
    runs-on: ubuntu-latest
    timeout-minutes: 3
    steps:
      - uses: styfle/cancel-workflow-action@0.9.1
        with:
          access_token: ${{ github.token }}
  build:
    name: 'Build and Push Docker Image'
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout the codebase
        uses: actions/checkout@v2
      - name: Setup NodeJS
        uses: actions/setup-node@v2
        with:
          node-version: 16
          cache: yarn
      - run: yarn install --immutable
      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 3.0
          bundler-cache: true # runs 'bundle install' and caches installed gems automatically
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: brickdocCE-pr-${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            brickdocCE-pr-${{ runner.os }}-buildx-
      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          build-args: |
            "RAILS_ENV=cicd"
          tags: ${{ env.image }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new
        # Temp fix
        # https://github.com/docker/build-push-action/issues/252
        # https://github.com/moby/buildkit/issues/1896
      - name: Move cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache
  deploy:
    name: 'Deployment to BAE'
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Uninstall History Release
        uses: brickdoc/app-engine@v1.beta3
        with:
          name: brickdoc-preview-pr${{ github.event.pull_request.number }}
          task: 'remove'
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_GLOBAL_CORP_AK }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_GLOBAL_CORP_SECRET }}
      - name: Checkout the codebase
        uses: actions/checkout@v2
      - name: Deployment to App Engine
        uses: brickdoc/app-engine@v1.beta3
        with:
          name: brickdoc-preview-pr${{ github.event.pull_request.number }}
          image: ${{ env.image }}
          host: ${{ env.domain }}
          chart: ${{ github.workspace }}/templates/helm-charts/brickdoc
          extraArgs: '--set previewEnv=true --timeout 10m --cleanup-on-fail'
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_GLOBAL_CORP_AK }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_GLOBAL_CORP_SECRET }}
          APP_SECRET_SECRET_KEY_BASE: ${{ secrets.previewEnvSecretKey }}
      - name: Find Comment
        uses: peter-evans/find-comment@v1
        id: fc
        with:
          issue-number: ${{ github.event.pull_request.number }}
          comment-author: 'github-actions[bot]'
          body-includes: This pull request is automatically built and testable in
      - name: Create or update comment
        uses: peter-evans/create-or-update-comment@v1
        with:
          comment-id: ${{ steps.fc.outputs.comment-id }}
          issue-number: ${{ github.event.pull_request.number }}
          body: |
            This pull request is automatically built and testable in [${{ env.domain }}](https://${{ env.domain }}).
            ## Devtools
            * [Mailer Mock](https://${{ env.domain }}/devtools/mailer)
            * [Logs](https://console.aws.amazon.com/cloudwatch/home?region=us-east-1#container-insights:infrastructure)
          edit-mode: replace
