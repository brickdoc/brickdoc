// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Complete [dot equal different namespaceId] = 1 + varvarabcvar. 1`] = `
Array [
  Object {
    "code": "NumberLiteral",
    "errors": Array [],
    "name": "1",
    "render": undefined,
    "spaceAfter": false,
    "spaceBefore": false,
    "type": "number",
  },
  Object {
    "code": "Plus",
    "errors": Array [],
    "name": "+",
    "render": undefined,
    "spaceAfter": true,
    "spaceBefore": true,
    "type": "number",
  },
  Object {
    "code": "Variable",
    "errors": Array [],
    "name": "#57622108-1337-4edd-833a-2557835bcfe0@481b6dd1-e668-4477-9e47-cfe5cb1239d0",
    "namespaceId": "57622108-1337-4edd-833a-2557835bcfe0",
    "render": [Function],
    "spaceAfter": false,
    "spaceBefore": false,
    "type": "number",
  },
  Object {
    "code": "Dot",
    "errors": Array [
      Object {
        "message": "Missing expression",
        "type": "syntax",
      },
      Object {
        "message": "Parse error: \\"\\"",
        "type": "parse",
      },
    ],
    "name": ".",
    "render": undefined,
    "spaceAfter": false,
    "spaceBefore": false,
    "type": "any",
  },
]
`;

exports[`Complete [dot equal same namespaceId] = 1 + varvarabcvar. 1`] = `
Array [
  Object {
    "code": "NumberLiteral",
    "errors": Array [],
    "name": "1",
    "render": undefined,
    "spaceAfter": false,
    "spaceBefore": false,
    "type": "number",
  },
  Object {
    "code": "Plus",
    "errors": Array [],
    "name": "+",
    "render": undefined,
    "spaceAfter": true,
    "spaceBefore": true,
    "type": "number",
  },
  Object {
    "code": "Variable",
    "errors": Array [],
    "name": "#57622108-1337-4edd-833a-2557835bcfe0@481b6dd1-e668-4477-9e47-cfe5cb1239d0",
    "namespaceId": "57622108-1337-4edd-833a-2557835bcfe0",
    "render": [Function],
    "spaceAfter": false,
    "spaceBefore": false,
    "type": "number",
  },
  Object {
    "code": "Dot",
    "errors": Array [
      Object {
        "message": "Missing expression",
        "type": "syntax",
      },
      Object {
        "message": "Parse error: \\"\\"",
        "type": "parse",
      },
    ],
    "name": ".",
    "render": undefined,
    "spaceAfter": false,
    "spaceBefore": false,
    "type": "any",
  },
]
`;

exports[`Complete [var equal different namespaceId] =varvarabcvar 1`] = `
Array [
  Object {
    "code": "Variable",
    "errors": Array [],
    "name": "#57622108-1337-4edd-833a-2557835bcfe0@481b6dd1-e668-4477-9e47-cfe5cb1239d0",
    "namespaceId": "57622108-1337-4edd-833a-2557835bcfe0",
    "render": [Function],
    "spaceAfter": false,
    "spaceBefore": false,
    "type": "number",
  },
]
`;

exports[`Complete [var equal same namespaceId] =varvarabcvar 1`] = `
Array [
  Object {
    "code": "Variable",
    "errors": Array [],
    "name": "#57622108-1337-4edd-833a-2557835bcfe0@481b6dd1-e668-4477-9e47-cfe5cb1239d0",
    "namespaceId": "57622108-1337-4edd-833a-2557835bcfe0",
    "render": [Function],
    "spaceAfter": false,
    "spaceBefore": false,
    "type": "number",
  },
]
`;

exports[`Complete [var include different namespaceId] =1+arvar 1`] = `
Array [
  Object {
    "code": "NumberLiteral",
    "errors": Array [],
    "name": "1",
    "render": undefined,
    "spaceAfter": false,
    "spaceBefore": false,
    "type": "number",
  },
  Object {
    "code": "Plus",
    "errors": Array [],
    "name": "+",
    "render": undefined,
    "spaceAfter": true,
    "spaceBefore": true,
    "type": "number",
  },
  Object {
    "code": "Function",
    "errors": Array [
      Object {
        "message": "Unknown function arvar",
        "type": "syntax",
      },
      Object {
        "message": "TODO mismatch token FunctionCall",
        "type": "parse",
      },
    ],
    "name": "arvar",
    "render": undefined,
    "spaceAfter": false,
    "spaceBefore": false,
    "type": "any",
  },
]
`;

exports[`Complete [var include same namespaceId] =1+arvar 1`] = `
Array [
  Object {
    "code": "NumberLiteral",
    "errors": Array [],
    "name": "1",
    "render": undefined,
    "spaceAfter": false,
    "spaceBefore": false,
    "type": "number",
  },
  Object {
    "code": "Plus",
    "errors": Array [],
    "name": "+",
    "render": undefined,
    "spaceAfter": true,
    "spaceBefore": true,
    "type": "number",
  },
  Object {
    "code": "Function",
    "errors": Array [
      Object {
        "message": "Unknown function arvar",
        "type": "syntax",
      },
      Object {
        "message": "TODO mismatch token FunctionCall",
        "type": "parse",
      },
    ],
    "name": "arvar",
    "render": undefined,
    "spaceAfter": false,
    "spaceBefore": false,
    "type": "any",
  },
]
`;

exports[`Complete [var startWith same namespace] = 1 + var 1`] = `
Array [
  Object {
    "code": "NumberLiteral",
    "errors": Array [],
    "name": "1",
    "render": undefined,
    "spaceAfter": false,
    "spaceBefore": false,
    "type": "number",
  },
  Object {
    "code": "Plus",
    "errors": Array [],
    "name": "+",
    "render": undefined,
    "spaceAfter": true,
    "spaceBefore": true,
    "type": "number",
  },
  Object {
    "code": "Function",
    "errors": Array [
      Object {
        "message": "Unknown function var",
        "type": "syntax",
      },
      Object {
        "message": "TODO mismatch token FunctionCall",
        "type": "parse",
      },
    ],
    "name": "var",
    "render": undefined,
    "spaceAfter": false,
    "spaceBefore": false,
    "type": "any",
  },
]
`;
