// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Simple test case TODO [Predicate check type] =>=true // => ✗ 1`] = `
Array [
  Object {
    "attrs": undefined,
    "code": "Equal",
    "display": "=",
    "errors": Array [],
    "type": "any",
  },
  Object {
    "attrs": undefined,
    "code": "GreaterThanEqual",
    "display": ">=",
    "errors": Array [],
    "type": "any",
  },
  Object {
    "attrs": undefined,
    "code": "BooleanLiteral",
    "display": "true",
    "errors": Array [
      Object {
        "message": "Expected number but got boolean",
        "type": "type",
      },
    ],
    "type": "boolean",
  },
]
`;

exports[`Simple test case TODO [Predicate check type] =>=true // => ✗ 2`] = `
Object {
  "children": Object {
    "Equal": Array [
      Object {
        "endColumn": 1,
        "endLine": 1,
        "endOffset": 0,
        "image": "=",
        "startColumn": 1,
        "startLine": 1,
        "startOffset": 0,
        "tokenType": Object {
          "CATEGORIES": Array [
            Object {
              "CATEGORIES": Array [],
              "PATTERN": /NOT_APPLICABLE/,
              "categoryMatches": Array [
                20,
                21,
                23,
                24,
              ],
              "categoryMatchesMap": Object {
                "20": true,
                "21": true,
                "23": true,
                "24": true,
              },
              "isParent": true,
              "name": "EqualCompareOperator",
              "tokenTypeIdx": 3,
            },
          ],
          "PATTERN": /=/,
          "categoryMatches": Array [],
          "categoryMatchesMap": Object {},
          "isParent": false,
          "name": "Equal",
          "tokenTypeIdx": 20,
        },
        "tokenTypeIdx": 20,
      },
    ],
    "expression": Array [
      Object {
        "children": Object {
          "lhs": Array [
            Object {
              "children": Object {
                "lhs": Array [
                  Object {
                    "children": Object {
                      "lhs": Array [
                        Object {
                          "children": Object {
                            "lhs": Array [
                              Object {
                                "children": Object {
                                  "lhs": Array [
                                    Object {
                                      "children": Object {
                                        "lhs": Array [
                                          Object {
                                            "children": Object {
                                              "lhs": Array [
                                                Object {
                                                  "children": Object {
                                                    "lhs": Array [
                                                      Object {
                                                        "children": Object {
                                                          "lhs": Array [
                                                            Object {
                                                              "children": Object {
                                                                "lhs": Array [
                                                                  Object {
                                                                    "children": Object {
                                                                      "lhs": Array [
                                                                        Object {
                                                                          "children": Object {
                                                                            "lhs": Array [
                                                                              Object {
                                                                                "children": Object {
                                                                                  "predicateExpression": Array [
                                                                                    Object {
                                                                                      "children": Object {
                                                                                        "CompareOperator": Array [
                                                                                          Object {
                                                                                            "endColumn": 3,
                                                                                            "endLine": 1,
                                                                                            "endOffset": 2,
                                                                                            "image": ">=",
                                                                                            "startColumn": 2,
                                                                                            "startLine": 1,
                                                                                            "startOffset": 1,
                                                                                            "tokenType": Object {
                                                                                              "CATEGORIES": Array [
                                                                                                Object {
                                                                                                  "CATEGORIES": Array [],
                                                                                                  "PATTERN": /NOT_APPLICABLE/,
                                                                                                  "categoryMatches": Array [
                                                                                                    19,
                                                                                                    22,
                                                                                                    25,
                                                                                                    26,
                                                                                                  ],
                                                                                                  "categoryMatchesMap": Object {
                                                                                                    "19": true,
                                                                                                    "22": true,
                                                                                                    "25": true,
                                                                                                    "26": true,
                                                                                                  },
                                                                                                  "isParent": true,
                                                                                                  "name": "CompareOperator",
                                                                                                  "tokenTypeIdx": 4,
                                                                                                },
                                                                                              ],
                                                                                              "PATTERN": />=/,
                                                                                              "categoryMatches": Array [],
                                                                                              "categoryMatchesMap": Object {},
                                                                                              "isParent": false,
                                                                                              "name": "GreaterThanEqual",
                                                                                              "tokenTypeIdx": 25,
                                                                                            },
                                                                                            "tokenTypeIdx": 25,
                                                                                          },
                                                                                        ],
                                                                                        "simpleAtomicExpression": Array [
                                                                                          Object {
                                                                                            "children": Object {
                                                                                              "constantExpression": Array [
                                                                                                Object {
                                                                                                  "children": Object {
                                                                                                    "BooleanLiteralExpression": Array [
                                                                                                      Object {
                                                                                                        "children": Object {
                                                                                                          "BooleanLiteral": Array [
                                                                                                            Object {
                                                                                                              "endColumn": 7,
                                                                                                              "endLine": 1,
                                                                                                              "endOffset": 6,
                                                                                                              "image": "true",
                                                                                                              "startColumn": 4,
                                                                                                              "startLine": 1,
                                                                                                              "startOffset": 3,
                                                                                                              "tokenType": Object {
                                                                                                                "CATEGORIES": Array [],
                                                                                                                "PATTERN": /\\(\\?:true\\|false\\)\\(\\?!\\[\\^,"'\\\\\`&#@:!\\\\\\$%\\\\\\^<>/\\?\\*=\\.;~\\|\\[\\(\\)\\{\\}\\+\\\\\\\\\\\\-\\\\\\]\\\\s\\]\\)/i,
                                                                                                                "categoryMatches": Array [],
                                                                                                                "categoryMatchesMap": Object {},
                                                                                                                "isParent": false,
                                                                                                                "name": "BooleanLiteral",
                                                                                                                "tokenTypeIdx": 48,
                                                                                                              },
                                                                                                              "tokenTypeIdx": 48,
                                                                                                            },
                                                                                                          ],
                                                                                                        },
                                                                                                        "name": "BooleanLiteralExpression",
                                                                                                      },
                                                                                                    ],
                                                                                                  },
                                                                                                  "name": "constantExpression",
                                                                                                },
                                                                                              ],
                                                                                            },
                                                                                            "name": "simpleAtomicExpression",
                                                                                          },
                                                                                        ],
                                                                                      },
                                                                                      "name": "predicateExpression",
                                                                                    },
                                                                                  ],
                                                                                },
                                                                                "name": "atomicExpression",
                                                                              },
                                                                            ],
                                                                          },
                                                                          "name": "chainExpression",
                                                                        },
                                                                      ],
                                                                    },
                                                                    "name": "rangeExpression",
                                                                  },
                                                                ],
                                                              },
                                                              "name": "notExpression",
                                                            },
                                                          ],
                                                        },
                                                        "name": "accessExpression",
                                                      },
                                                    ],
                                                  },
                                                  "name": "multiplicationExpression",
                                                },
                                              ],
                                            },
                                            "name": "additionExpression",
                                          },
                                        ],
                                      },
                                      "name": "concatExpression",
                                    },
                                  ],
                                },
                                "name": "inExpression",
                              },
                            ],
                          },
                          "name": "compareExpression",
                        },
                      ],
                    },
                    "name": "equalCompareExpression",
                  },
                ],
              },
              "name": "combineExpression",
            },
          ],
        },
        "name": "expression",
      },
    ],
  },
  "name": "startExpression",
}
`;

exports[`Simple test case TODO [Predicate check type] =>=true // => ✗ 3`] = `
Object {
  "input": "=>=true",
  "inputImage": "=>=true",
  "newInput": "=>=true",
  "parseImage": "=>=true",
}
`;
