name: Unit Test
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true
on:
  pull_request:
  push:
    branches:
      - main
    paths-ignore:
      - '.husky/**'
      - '**.md'
      - '**/LICENSE'
      - '.github/**'
      - '!.github/workflows/unit_test.yml'
      - 'tools/e2e-testing/**'
env:
  NODE_OPTIONS: '--max-old-space-size=5950'
  TURBO_TOKEN: ${{ secrets.TURBO_TOKEN }}
  TURBO_TEAM: brickdoc
  REDIS_URL: redis://localhost:6379
  MASHCARD_DATABASE_URL: postgres://postgres:just4testing@localhost:5432
  MASHCARD_DOTCOM_LICENSE: 'I hereby swear that I have obtained written permission from the Pleisto Inc of this plugin to use it.'
  SYSINFO: GITHUB_CI
jobs:
  jest:
    name: Jest
    runs-on: ubuntu-latest
    timeout-minutes: 20
    steps:
      - name: Checkout the codebase
        uses: actions/checkout@v3
      - name: Setup NodeJS
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: yarn
      - name: Run yarn install
        run: yarn install --immutable
      - name: Run Jest tests
        run: yarn turbo run test:jest
      - name: Publish Jest code coverage reports
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          flags: frontend-unit
          fail_ci_if_error: true
          verbose: true
  rspec:
    name: RSpec
    runs-on: ubuntu-latest
    services:
      # image version suggestion same as tools/helm-charts/mashcard
      postgres:
        image: postgres:14-alpine
        env:
          POSTGRES_DB: 'mashcard_test'
          POSTGRES_USER: 'postgres'
          POSTGRES_PASSWORD: 'just4testing'
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
      redis:
        image: redis:7-alpine
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - name: Checkout the codebase
        uses: actions/checkout@v2
        with:
          fetch-depth: 2 # To retrieve the preceding commit.
      - name: Get changed ruby files
        id: changed-ruby-or-rust-files
        uses: tj-actions/changed-files@v23
        with:
          files: |
            **/*.rb
            **/*.rs'
            apps\/server-monolith\/Gemfile.lock
            apps\/server-monolith\/Cargo.lock
            .github/workflows/*.yml
      - name: Install Dependencies
        run: sudo apt-get update && sudo apt-get install libsodium23
      - name: Setup Rust
        uses: actions-rs/toolchain@v1
        if: steps.changed-ruby-or-rust-files.outputs.any_changed == 'true'
        with:
          toolchain: stable
      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        if: steps.changed-ruby-or-rust-files.outputs.any_changed == 'true'
        with:
          ruby-version: 3.1.2
          working-directory: 'apps/server-monolith'
          bundler-cache: true # runs 'bundle install' and caches installed gems automatically
      - name: Setup NodeJS
        uses: actions/setup-node@v3
        if: steps.changed-ruby-or-rust-files.outputs.any_changed == 'true'
        with:
          node-version: 18
          cache: yarn
      - name: Run yarn install
        if: steps.changed-ruby-or-rust-files.outputs.any_changed == 'true'
        run: yarn install --immutable
      - name: Build native ext
        if: steps.changed-ruby-or-rust-files.outputs.any_changed == 'true'
        run: yarn turbo run rust:build
      - name: Run DB migrations
        if: steps.changed-ruby-or-rust-files.outputs.any_changed == 'true'
        run: yarn server bundle exec rails db:prepare
        env:
          RAILS_ENV: test
      - name: Run RSpec tests
        if: steps.changed-ruby-or-rust-files.outputs.any_changed == 'true'
        env:
          RAILS_ENV: test
        run: yarn turbo run test:rspec
      - name: Publish RSpec code coverage reports
        if: steps.changed-ruby-or-rust-files.outputs.any_changed == 'true'
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          flags: backend-unit
          fail_ci_if_error: true
          verbose: true
      - name: Get changed database migrations
        id: changed-db-migrations
        uses: tj-actions/changed-files@v23
        with:
          files: |
            apps\/server-monolith\/db\/migrate
      - name: Get changed GraphQL type definitions
        id: changed-gql-typeds
        uses: tj-actions/changed-files@v23
        with:
          files: |
            apps\/server-monolith\/app\/graphql
            graphql.ts$
      - name: Dump the graphql schema
        if: steps.changed-gql-typeds.outputs.any_changed == 'true'
        run: yarn graphql
      - name: Dump the database schema
        if: steps.changed-db-migrations.outputs.any_changed == 'true'
        run: yarn server bundle exec rails db:prepare db:schema:dump
      - name: Add and commit everything
        uses: EndBug/add-and-commit@v9
        if: github.ref != 'refs/heads/main'
        with:
          default_author: github_actions
          push: origin HEAD:${{ github.head_ref }}
          message: 'chore: bump schemas and dists'
          add: 'apps/server-monolith/db packages'
