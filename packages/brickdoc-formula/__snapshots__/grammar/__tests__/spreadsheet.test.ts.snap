// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Spreadsheet Functions [AVERAGEIFS 4] =AVERAGEIFS(#57622108-1337-4edd-833a-2557835bcfe0.MySpreadsheet.first, #57622108-1337-4edd-833a-2557835bcfe0.MySpreadsheet.second, >3) 1`] = `
Array [
  Object {
    "attrs": undefined,
    "code": "Equal",
    "display": "=",
    "errors": Array [],
    "hide": false,
    "type": "any",
  },
  Object {
    "attrs": undefined,
    "code": "Function",
    "display": "AVERAGEIFS",
    "errors": Array [],
    "hide": false,
    "type": "any",
  },
  Object {
    "attrs": undefined,
    "code": "LParen",
    "display": "(",
    "errors": Array [],
    "hide": false,
    "type": "any",
  },
  Object {
    "attrs": Object {
      "id": "28e28190-63bd-4f70-aeca-26e72574c01a",
      "kind": "Spreadsheet",
      "name": "MySpreadsheet",
      "namespaceId": "57622108-1337-4edd-833a-2557835bcfe0",
    },
    "code": "Spreadsheet",
    "display": "MySpreadsheet",
    "errors": Array [],
    "hide": false,
    "type": "Spreadsheet",
  },
  Object {
    "attrs": undefined,
    "code": "Dot",
    "display": ".",
    "errors": Array [],
    "hide": false,
    "type": "any",
  },
  Object {
    "attrs": Object {
      "id": "62d9a9ee-88a1-46c7-a929-4a0d9dc0a4d6",
      "kind": "Column",
      "name": "first",
      "namespaceId": "28e28190-63bd-4f70-aeca-26e72574c01a",
    },
    "code": "Column",
    "display": "first",
    "errors": Array [],
    "hide": false,
    "type": "Column",
  },
  Object {
    "attrs": undefined,
    "code": "Comma",
    "display": ",",
    "errors": Array [],
    "hide": false,
    "type": "any",
  },
  Object {
    "attrs": undefined,
    "code": "Space",
    "display": " ",
    "errors": Array [],
    "hide": false,
    "type": "any",
  },
  Object {
    "attrs": Object {
      "id": "28e28190-63bd-4f70-aeca-26e72574c01a",
      "kind": "Spreadsheet",
      "name": "MySpreadsheet",
      "namespaceId": "57622108-1337-4edd-833a-2557835bcfe0",
    },
    "code": "Spreadsheet",
    "display": "MySpreadsheet",
    "errors": Array [],
    "hide": false,
    "type": "Spreadsheet",
  },
  Object {
    "attrs": undefined,
    "code": "Dot",
    "display": ".",
    "errors": Array [],
    "hide": false,
    "type": "any",
  },
  Object {
    "attrs": Object {
      "id": "4e6f9adb-6f33-454e-9f9e-635dc98e3f28",
      "kind": "Column",
      "name": "second",
      "namespaceId": "28e28190-63bd-4f70-aeca-26e72574c01a",
    },
    "code": "Column",
    "display": "second",
    "errors": Array [],
    "hide": false,
    "type": "Column",
  },
  Object {
    "attrs": undefined,
    "code": "Comma",
    "display": ",",
    "errors": Array [],
    "hide": false,
    "type": "any",
  },
  Object {
    "attrs": undefined,
    "code": "Space",
    "display": " ",
    "errors": Array [],
    "hide": false,
    "type": "any",
  },
  Object {
    "attrs": undefined,
    "code": "GreaterThan",
    "display": ">",
    "errors": Array [],
    "hide": false,
    "type": "any",
  },
  Object {
    "attrs": undefined,
    "code": "NumberLiteral",
    "display": "3",
    "errors": Array [],
    "hide": false,
    "type": "number",
  },
  Object {
    "attrs": undefined,
    "code": "RParen",
    "display": ")",
    "errors": Array [],
    "hide": false,
    "type": "number",
  },
]
`;

exports[`Spreadsheet Functions [AVERAGEIFS 4] =AVERAGEIFS(#57622108-1337-4edd-833a-2557835bcfe0.MySpreadsheet.first, #57622108-1337-4edd-833a-2557835bcfe0.MySpreadsheet.second, >3) 2`] = `
Array [
  Object {
    "definitionHandler": [Function],
    "event": [Function],
    "eventId": "57622108-1337-4edd-833a-2557835bcfe0,28e28190-63bd-4f70-aeca-26e72574c01a",
    "kind": "SpreadsheetName",
    "scope": Object {},
  },
  Object {
    "definitionHandler": [Function],
    "event": [Function],
    "eventId": "57622108-1337-4edd-833a-2557835bcfe0,28e28190-63bd-4f70-aeca-26e72574c01a",
    "kind": "Column",
    "scope": Object {
      "columns": Array [
        "4e6f9adb-6f33-454e-9f9e-635dc98e3f28",
      ],
    },
  },
]
`;

exports[`Spreadsheet Functions [AVERAGEIFS 100] =AVERAGEIFS(#57622108-1337-4edd-833a-2557835bcfe0.MySpreadsheet.first, #57622108-1337-4edd-833a-2557835bcfe0.MySpreadsheet.second, >100) 1`] = `
Array [
  Object {
    "attrs": undefined,
    "code": "Equal",
    "display": "=",
    "errors": Array [],
    "hide": false,
    "type": "any",
  },
  Object {
    "attrs": undefined,
    "code": "Function",
    "display": "AVERAGEIFS",
    "errors": Array [],
    "hide": false,
    "type": "any",
  },
  Object {
    "attrs": undefined,
    "code": "LParen",
    "display": "(",
    "errors": Array [],
    "hide": false,
    "type": "any",
  },
  Object {
    "attrs": Object {
      "id": "28e28190-63bd-4f70-aeca-26e72574c01a",
      "kind": "Spreadsheet",
      "name": "MySpreadsheet",
      "namespaceId": "57622108-1337-4edd-833a-2557835bcfe0",
    },
    "code": "Spreadsheet",
    "display": "MySpreadsheet",
    "errors": Array [],
    "hide": false,
    "type": "Spreadsheet",
  },
  Object {
    "attrs": undefined,
    "code": "Dot",
    "display": ".",
    "errors": Array [],
    "hide": false,
    "type": "any",
  },
  Object {
    "attrs": Object {
      "id": "62d9a9ee-88a1-46c7-a929-4a0d9dc0a4d6",
      "kind": "Column",
      "name": "first",
      "namespaceId": "28e28190-63bd-4f70-aeca-26e72574c01a",
    },
    "code": "Column",
    "display": "first",
    "errors": Array [],
    "hide": false,
    "type": "Column",
  },
  Object {
    "attrs": undefined,
    "code": "Comma",
    "display": ",",
    "errors": Array [],
    "hide": false,
    "type": "any",
  },
  Object {
    "attrs": undefined,
    "code": "Space",
    "display": " ",
    "errors": Array [],
    "hide": false,
    "type": "any",
  },
  Object {
    "attrs": Object {
      "id": "28e28190-63bd-4f70-aeca-26e72574c01a",
      "kind": "Spreadsheet",
      "name": "MySpreadsheet",
      "namespaceId": "57622108-1337-4edd-833a-2557835bcfe0",
    },
    "code": "Spreadsheet",
    "display": "MySpreadsheet",
    "errors": Array [],
    "hide": false,
    "type": "Spreadsheet",
  },
  Object {
    "attrs": undefined,
    "code": "Dot",
    "display": ".",
    "errors": Array [],
    "hide": false,
    "type": "any",
  },
  Object {
    "attrs": Object {
      "id": "4e6f9adb-6f33-454e-9f9e-635dc98e3f28",
      "kind": "Column",
      "name": "second",
      "namespaceId": "28e28190-63bd-4f70-aeca-26e72574c01a",
    },
    "code": "Column",
    "display": "second",
    "errors": Array [],
    "hide": false,
    "type": "Column",
  },
  Object {
    "attrs": undefined,
    "code": "Comma",
    "display": ",",
    "errors": Array [],
    "hide": false,
    "type": "any",
  },
  Object {
    "attrs": undefined,
    "code": "Space",
    "display": " ",
    "errors": Array [],
    "hide": false,
    "type": "any",
  },
  Object {
    "attrs": undefined,
    "code": "GreaterThan",
    "display": ">",
    "errors": Array [],
    "hide": false,
    "type": "any",
  },
  Object {
    "attrs": undefined,
    "code": "NumberLiteral",
    "display": "100",
    "errors": Array [],
    "hide": false,
    "type": "number",
  },
  Object {
    "attrs": undefined,
    "code": "RParen",
    "display": ")",
    "errors": Array [],
    "hide": false,
    "type": "number",
  },
]
`;

exports[`Spreadsheet Functions [AVERAGEIFS 100] =AVERAGEIFS(#57622108-1337-4edd-833a-2557835bcfe0.MySpreadsheet.first, #57622108-1337-4edd-833a-2557835bcfe0.MySpreadsheet.second, >100) 2`] = `
Array [
  Object {
    "definitionHandler": [Function],
    "event": [Function],
    "eventId": "57622108-1337-4edd-833a-2557835bcfe0,28e28190-63bd-4f70-aeca-26e72574c01a",
    "kind": "SpreadsheetName",
    "scope": Object {},
  },
  Object {
    "definitionHandler": [Function],
    "event": [Function],
    "eventId": "57622108-1337-4edd-833a-2557835bcfe0,28e28190-63bd-4f70-aeca-26e72574c01a",
    "kind": "Column",
    "scope": Object {
      "columns": Array [
        "4e6f9adb-6f33-454e-9f9e-635dc98e3f28",
      ],
    },
  },
]
`;

exports[`Spreadsheet Functions [COLUMN_COUNT] =#57622108-1337-4edd-833a-2557835bcfe0.MySpreadsheet.COLUMN_COUNT() 1`] = `
Array [
  Object {
    "attrs": undefined,
    "code": "Equal",
    "display": "=",
    "errors": Array [],
    "hide": false,
    "type": "any",
  },
  Object {
    "attrs": Object {
      "id": "28e28190-63bd-4f70-aeca-26e72574c01a",
      "kind": "Spreadsheet",
      "name": "MySpreadsheet",
      "namespaceId": "57622108-1337-4edd-833a-2557835bcfe0",
    },
    "code": "Spreadsheet",
    "display": "MySpreadsheet",
    "errors": Array [],
    "hide": false,
    "type": "Spreadsheet",
  },
  Object {
    "attrs": undefined,
    "code": "Dot",
    "display": ".",
    "errors": Array [],
    "hide": false,
    "type": "any",
  },
  Object {
    "attrs": undefined,
    "code": "Function",
    "display": "COLUMN_COUNT",
    "errors": Array [],
    "hide": false,
    "type": "any",
  },
  Object {
    "attrs": undefined,
    "code": "LParen",
    "display": "(",
    "errors": Array [],
    "hide": false,
    "type": "any",
  },
  Object {
    "attrs": undefined,
    "code": "RParen",
    "display": ")",
    "errors": Array [],
    "hide": false,
    "type": "number",
  },
]
`;

exports[`Spreadsheet Functions [COLUMN_COUNT] =#57622108-1337-4edd-833a-2557835bcfe0.MySpreadsheet.COLUMN_COUNT() 2`] = `
Array [
  Object {
    "definitionHandler": [Function],
    "event": [Function],
    "eventId": "57622108-1337-4edd-833a-2557835bcfe0,28e28190-63bd-4f70-aeca-26e72574c01a",
    "kind": "SpreadsheetName",
    "scope": Object {},
  },
  Object {
    "event": [Function],
    "eventId": "57622108-1337-4edd-833a-2557835bcfe0,28e28190-63bd-4f70-aeca-26e72574c01a",
    "kind": "Spreadsheet",
    "scope": Object {},
  },
]
`;

exports[`Spreadsheet Functions [COUNTA] =#57622108-1337-4edd-833a-2557835bcfe0.MySpreadsheet.first.COUNTA() 1`] = `
Array [
  Object {
    "attrs": undefined,
    "code": "Equal",
    "display": "=",
    "errors": Array [],
    "hide": false,
    "type": "any",
  },
  Object {
    "attrs": Object {
      "id": "28e28190-63bd-4f70-aeca-26e72574c01a",
      "kind": "Spreadsheet",
      "name": "MySpreadsheet",
      "namespaceId": "57622108-1337-4edd-833a-2557835bcfe0",
    },
    "code": "Spreadsheet",
    "display": "MySpreadsheet",
    "errors": Array [],
    "hide": false,
    "type": "Spreadsheet",
  },
  Object {
    "attrs": undefined,
    "code": "Dot",
    "display": ".",
    "errors": Array [],
    "hide": false,
    "type": "any",
  },
  Object {
    "attrs": Object {
      "id": "62d9a9ee-88a1-46c7-a929-4a0d9dc0a4d6",
      "kind": "Column",
      "name": "first",
      "namespaceId": "28e28190-63bd-4f70-aeca-26e72574c01a",
    },
    "code": "Column",
    "display": "first",
    "errors": Array [],
    "hide": false,
    "type": "Column",
  },
  Object {
    "attrs": undefined,
    "code": "Dot",
    "display": ".",
    "errors": Array [],
    "hide": false,
    "type": "any",
  },
  Object {
    "attrs": undefined,
    "code": "Function",
    "display": "COUNTA",
    "errors": Array [],
    "hide": false,
    "type": "any",
  },
  Object {
    "attrs": undefined,
    "code": "LParen",
    "display": "(",
    "errors": Array [],
    "hide": false,
    "type": "any",
  },
  Object {
    "attrs": undefined,
    "code": "RParen",
    "display": ")",
    "errors": Array [],
    "hide": false,
    "type": "number",
  },
]
`;

exports[`Spreadsheet Functions [COUNTA] =#57622108-1337-4edd-833a-2557835bcfe0.MySpreadsheet.first.COUNTA() 2`] = `
Array [
  Object {
    "definitionHandler": [Function],
    "event": [Function],
    "eventId": "57622108-1337-4edd-833a-2557835bcfe0,28e28190-63bd-4f70-aeca-26e72574c01a",
    "kind": "SpreadsheetName",
    "scope": Object {},
  },
  Object {
    "definitionHandler": [Function],
    "event": [Function],
    "eventId": "57622108-1337-4edd-833a-2557835bcfe0,28e28190-63bd-4f70-aeca-26e72574c01a",
    "kind": "Column",
    "scope": Object {
      "columns": Array [
        "62d9a9ee-88a1-46c7-a929-4a0d9dc0a4d6",
      ],
    },
  },
]
`;

exports[`Spreadsheet Functions [COUNTA] =#57622108-1337-4edd-833a-2557835bcfe0.MySpreadsheet.third.COUNTA() 1`] = `
Array [
  Object {
    "attrs": undefined,
    "code": "Equal",
    "display": "=",
    "errors": Array [],
    "hide": false,
    "type": "any",
  },
  Object {
    "attrs": Object {
      "id": "28e28190-63bd-4f70-aeca-26e72574c01a",
      "kind": "Spreadsheet",
      "name": "MySpreadsheet",
      "namespaceId": "57622108-1337-4edd-833a-2557835bcfe0",
    },
    "code": "Spreadsheet",
    "display": "MySpreadsheet",
    "errors": Array [],
    "hide": false,
    "type": "Spreadsheet",
  },
  Object {
    "attrs": undefined,
    "code": "Dot",
    "display": ".",
    "errors": Array [],
    "hide": false,
    "type": "any",
  },
  Object {
    "attrs": Object {
      "id": "2723b7d9-22ce-4d93-b2ef-7cce1b122d64",
      "kind": "Column",
      "name": "third",
      "namespaceId": "28e28190-63bd-4f70-aeca-26e72574c01a",
    },
    "code": "Column",
    "display": "third",
    "errors": Array [],
    "hide": false,
    "type": "Column",
  },
  Object {
    "attrs": undefined,
    "code": "Dot",
    "display": ".",
    "errors": Array [],
    "hide": false,
    "type": "any",
  },
  Object {
    "attrs": undefined,
    "code": "Function",
    "display": "COUNTA",
    "errors": Array [],
    "hide": false,
    "type": "any",
  },
  Object {
    "attrs": undefined,
    "code": "LParen",
    "display": "(",
    "errors": Array [],
    "hide": false,
    "type": "any",
  },
  Object {
    "attrs": undefined,
    "code": "RParen",
    "display": ")",
    "errors": Array [],
    "hide": false,
    "type": "number",
  },
]
`;

exports[`Spreadsheet Functions [COUNTA] =#57622108-1337-4edd-833a-2557835bcfe0.MySpreadsheet.third.COUNTA() 2`] = `
Array [
  Object {
    "definitionHandler": [Function],
    "event": [Function],
    "eventId": "57622108-1337-4edd-833a-2557835bcfe0,28e28190-63bd-4f70-aeca-26e72574c01a",
    "kind": "SpreadsheetName",
    "scope": Object {},
  },
  Object {
    "definitionHandler": [Function],
    "event": [Function],
    "eventId": "57622108-1337-4edd-833a-2557835bcfe0,28e28190-63bd-4f70-aeca-26e72574c01a",
    "kind": "Column",
    "scope": Object {
      "columns": Array [
        "2723b7d9-22ce-4d93-b2ef-7cce1b122d64",
      ],
    },
  },
]
`;

exports[`Spreadsheet Functions [COUNTIFS =1] =COUNTIFS(#57622108-1337-4edd-833a-2557835bcfe0.MySpreadsheet.first, 3) 1`] = `
Array [
  Object {
    "attrs": undefined,
    "code": "Equal",
    "display": "=",
    "errors": Array [],
    "hide": false,
    "type": "any",
  },
  Object {
    "attrs": undefined,
    "code": "Function",
    "display": "COUNTIFS",
    "errors": Array [],
    "hide": false,
    "type": "any",
  },
  Object {
    "attrs": undefined,
    "code": "LParen",
    "display": "(",
    "errors": Array [],
    "hide": false,
    "type": "any",
  },
  Object {
    "attrs": Object {
      "id": "28e28190-63bd-4f70-aeca-26e72574c01a",
      "kind": "Spreadsheet",
      "name": "MySpreadsheet",
      "namespaceId": "57622108-1337-4edd-833a-2557835bcfe0",
    },
    "code": "Spreadsheet",
    "display": "MySpreadsheet",
    "errors": Array [],
    "hide": false,
    "type": "Spreadsheet",
  },
  Object {
    "attrs": undefined,
    "code": "Dot",
    "display": ".",
    "errors": Array [],
    "hide": false,
    "type": "any",
  },
  Object {
    "attrs": Object {
      "id": "62d9a9ee-88a1-46c7-a929-4a0d9dc0a4d6",
      "kind": "Column",
      "name": "first",
      "namespaceId": "28e28190-63bd-4f70-aeca-26e72574c01a",
    },
    "code": "Column",
    "display": "first",
    "errors": Array [],
    "hide": false,
    "type": "Column",
  },
  Object {
    "attrs": undefined,
    "code": "Comma",
    "display": ",",
    "errors": Array [],
    "hide": false,
    "type": "any",
  },
  Object {
    "attrs": undefined,
    "code": "Space",
    "display": " ",
    "errors": Array [],
    "hide": false,
    "type": "any",
  },
  Object {
    "attrs": undefined,
    "code": "NumberLiteral",
    "display": "3",
    "errors": Array [],
    "hide": false,
    "type": "number",
  },
  Object {
    "attrs": undefined,
    "code": "RParen",
    "display": ")",
    "errors": Array [],
    "hide": false,
    "type": "number",
  },
]
`;

exports[`Spreadsheet Functions [COUNTIFS =1] =COUNTIFS(#57622108-1337-4edd-833a-2557835bcfe0.MySpreadsheet.first, 3) 2`] = `
Array [
  Object {
    "definitionHandler": [Function],
    "event": [Function],
    "eventId": "57622108-1337-4edd-833a-2557835bcfe0,28e28190-63bd-4f70-aeca-26e72574c01a",
    "kind": "SpreadsheetName",
    "scope": Object {},
  },
  Object {
    "definitionHandler": [Function],
    "event": [Function],
    "eventId": "57622108-1337-4edd-833a-2557835bcfe0,28e28190-63bd-4f70-aeca-26e72574c01a",
    "kind": "Column",
    "scope": Object {
      "columns": Array [
        "62d9a9ee-88a1-46c7-a929-4a0d9dc0a4d6",
      ],
    },
  },
]
`;

exports[`Spreadsheet Functions [COUNTIFS >2] =COUNTIFS(#57622108-1337-4edd-833a-2557835bcfe0.MySpreadsheet.first, >2) 1`] = `
Array [
  Object {
    "attrs": undefined,
    "code": "Equal",
    "display": "=",
    "errors": Array [],
    "hide": false,
    "type": "any",
  },
  Object {
    "attrs": undefined,
    "code": "Function",
    "display": "COUNTIFS",
    "errors": Array [],
    "hide": false,
    "type": "any",
  },
  Object {
    "attrs": undefined,
    "code": "LParen",
    "display": "(",
    "errors": Array [],
    "hide": false,
    "type": "any",
  },
  Object {
    "attrs": Object {
      "id": "28e28190-63bd-4f70-aeca-26e72574c01a",
      "kind": "Spreadsheet",
      "name": "MySpreadsheet",
      "namespaceId": "57622108-1337-4edd-833a-2557835bcfe0",
    },
    "code": "Spreadsheet",
    "display": "MySpreadsheet",
    "errors": Array [],
    "hide": false,
    "type": "Spreadsheet",
  },
  Object {
    "attrs": undefined,
    "code": "Dot",
    "display": ".",
    "errors": Array [],
    "hide": false,
    "type": "any",
  },
  Object {
    "attrs": Object {
      "id": "62d9a9ee-88a1-46c7-a929-4a0d9dc0a4d6",
      "kind": "Column",
      "name": "first",
      "namespaceId": "28e28190-63bd-4f70-aeca-26e72574c01a",
    },
    "code": "Column",
    "display": "first",
    "errors": Array [],
    "hide": false,
    "type": "Column",
  },
  Object {
    "attrs": undefined,
    "code": "Comma",
    "display": ",",
    "errors": Array [],
    "hide": false,
    "type": "any",
  },
  Object {
    "attrs": undefined,
    "code": "Space",
    "display": " ",
    "errors": Array [],
    "hide": false,
    "type": "any",
  },
  Object {
    "attrs": undefined,
    "code": "GreaterThan",
    "display": ">",
    "errors": Array [],
    "hide": false,
    "type": "any",
  },
  Object {
    "attrs": undefined,
    "code": "NumberLiteral",
    "display": "2",
    "errors": Array [],
    "hide": false,
    "type": "number",
  },
  Object {
    "attrs": undefined,
    "code": "RParen",
    "display": ")",
    "errors": Array [],
    "hide": false,
    "type": "number",
  },
]
`;

exports[`Spreadsheet Functions [COUNTIFS >2] =COUNTIFS(#57622108-1337-4edd-833a-2557835bcfe0.MySpreadsheet.first, >2) 2`] = `
Array [
  Object {
    "definitionHandler": [Function],
    "event": [Function],
    "eventId": "57622108-1337-4edd-833a-2557835bcfe0,28e28190-63bd-4f70-aeca-26e72574c01a",
    "kind": "SpreadsheetName",
    "scope": Object {},
  },
  Object {
    "definitionHandler": [Function],
    "event": [Function],
    "eventId": "57622108-1337-4edd-833a-2557835bcfe0,28e28190-63bd-4f70-aeca-26e72574c01a",
    "kind": "Column",
    "scope": Object {
      "columns": Array [
        "62d9a9ee-88a1-46c7-a929-4a0d9dc0a4d6",
      ],
    },
  },
]
`;

exports[`Spreadsheet Functions [MAX] =#57622108-1337-4edd-833a-2557835bcfe0.MySpreadsheet.first.MAX() 1`] = `
Array [
  Object {
    "attrs": undefined,
    "code": "Equal",
    "display": "=",
    "errors": Array [],
    "hide": false,
    "type": "any",
  },
  Object {
    "attrs": Object {
      "id": "28e28190-63bd-4f70-aeca-26e72574c01a",
      "kind": "Spreadsheet",
      "name": "MySpreadsheet",
      "namespaceId": "57622108-1337-4edd-833a-2557835bcfe0",
    },
    "code": "Spreadsheet",
    "display": "MySpreadsheet",
    "errors": Array [],
    "hide": false,
    "type": "Spreadsheet",
  },
  Object {
    "attrs": undefined,
    "code": "Dot",
    "display": ".",
    "errors": Array [],
    "hide": false,
    "type": "any",
  },
  Object {
    "attrs": Object {
      "id": "62d9a9ee-88a1-46c7-a929-4a0d9dc0a4d6",
      "kind": "Column",
      "name": "first",
      "namespaceId": "28e28190-63bd-4f70-aeca-26e72574c01a",
    },
    "code": "Column",
    "display": "first",
    "errors": Array [],
    "hide": false,
    "type": "Column",
  },
  Object {
    "attrs": undefined,
    "code": "Dot",
    "display": ".",
    "errors": Array [],
    "hide": false,
    "type": "any",
  },
  Object {
    "attrs": undefined,
    "code": "Function",
    "display": "MAX",
    "errors": Array [],
    "hide": false,
    "type": "any",
  },
  Object {
    "attrs": undefined,
    "code": "LParen",
    "display": "(",
    "errors": Array [],
    "hide": false,
    "type": "any",
  },
  Object {
    "attrs": undefined,
    "code": "RParen",
    "display": ")",
    "errors": Array [],
    "hide": false,
    "type": "number",
  },
]
`;

exports[`Spreadsheet Functions [MAX] =#57622108-1337-4edd-833a-2557835bcfe0.MySpreadsheet.first.MAX() 2`] = `
Array [
  Object {
    "definitionHandler": [Function],
    "event": [Function],
    "eventId": "57622108-1337-4edd-833a-2557835bcfe0,28e28190-63bd-4f70-aeca-26e72574c01a",
    "kind": "SpreadsheetName",
    "scope": Object {},
  },
  Object {
    "definitionHandler": [Function],
    "event": [Function],
    "eventId": "57622108-1337-4edd-833a-2557835bcfe0,28e28190-63bd-4f70-aeca-26e72574c01a",
    "kind": "Column",
    "scope": Object {
      "columns": Array [
        "62d9a9ee-88a1-46c7-a929-4a0d9dc0a4d6",
      ],
    },
  },
]
`;

exports[`Spreadsheet Functions [Range 1] =#57622108-1337-4edd-833a-2557835bcfe0.MySpreadsheet.first.1:#57622108-1337-4edd-833a-2557835bcfe0.MySpreadsheet.first.2 1`] = `
Array [
  Object {
    "attrs": undefined,
    "code": "Equal",
    "display": "=",
    "errors": Array [],
    "hide": false,
    "type": "any",
  },
  Object {
    "attrs": Object {
      "id": "28e28190-63bd-4f70-aeca-26e72574c01a",
      "kind": "Spreadsheet",
      "name": "MySpreadsheet",
      "namespaceId": "57622108-1337-4edd-833a-2557835bcfe0",
    },
    "code": "Spreadsheet",
    "display": "MySpreadsheet",
    "errors": Array [],
    "hide": false,
    "type": "Spreadsheet",
  },
  Object {
    "attrs": undefined,
    "code": "Dot",
    "display": ".",
    "errors": Array [],
    "hide": false,
    "type": "any",
  },
  Object {
    "attrs": Object {
      "id": "62d9a9ee-88a1-46c7-a929-4a0d9dc0a4d6",
      "kind": "Column",
      "name": "first",
      "namespaceId": "28e28190-63bd-4f70-aeca-26e72574c01a",
    },
    "code": "Column",
    "display": "first",
    "errors": Array [],
    "hide": false,
    "type": "Column",
  },
  Object {
    "attrs": undefined,
    "code": "Dot",
    "display": ".",
    "errors": Array [],
    "hide": false,
    "type": "any",
  },
  Object {
    "attrs": undefined,
    "code": "NumberLiteral",
    "display": "1",
    "errors": Array [],
    "hide": false,
    "type": "number",
  },
  Object {
    "attrs": undefined,
    "code": "Colon",
    "display": ":",
    "errors": Array [],
    "hide": false,
    "type": "Range",
  },
  Object {
    "attrs": Object {
      "id": "28e28190-63bd-4f70-aeca-26e72574c01a",
      "kind": "Spreadsheet",
      "name": "MySpreadsheet",
      "namespaceId": "57622108-1337-4edd-833a-2557835bcfe0",
    },
    "code": "Spreadsheet",
    "display": "MySpreadsheet",
    "errors": Array [],
    "hide": false,
    "type": "Spreadsheet",
  },
  Object {
    "attrs": undefined,
    "code": "Dot",
    "display": ".",
    "errors": Array [],
    "hide": false,
    "type": "any",
  },
  Object {
    "attrs": Object {
      "id": "62d9a9ee-88a1-46c7-a929-4a0d9dc0a4d6",
      "kind": "Column",
      "name": "first",
      "namespaceId": "28e28190-63bd-4f70-aeca-26e72574c01a",
    },
    "code": "Column",
    "display": "first",
    "errors": Array [],
    "hide": false,
    "type": "Column",
  },
  Object {
    "attrs": undefined,
    "code": "Dot",
    "display": ".",
    "errors": Array [],
    "hide": false,
    "type": "any",
  },
  Object {
    "attrs": undefined,
    "code": "NumberLiteral",
    "display": "2",
    "errors": Array [],
    "hide": false,
    "type": "number",
  },
]
`;

exports[`Spreadsheet Functions [Range 1] =#57622108-1337-4edd-833a-2557835bcfe0.MySpreadsheet.first.1:#57622108-1337-4edd-833a-2557835bcfe0.MySpreadsheet.first.2 2`] = `
Array [
  Object {
    "definitionHandler": [Function],
    "event": [Function],
    "eventId": "57622108-1337-4edd-833a-2557835bcfe0,28e28190-63bd-4f70-aeca-26e72574c01a",
    "kind": "SpreadsheetName",
    "scope": Object {},
  },
  Object {
    "event": [Function],
    "eventId": "57622108-1337-4edd-833a-2557835bcfe0,28e28190-63bd-4f70-aeca-26e72574c01a",
    "kind": "Cell",
    "scope": Object {
      "columns": Array [
        "62d9a9ee-88a1-46c7-a929-4a0d9dc0a4d6",
      ],
      "rows": Array [
        "2",
      ],
    },
  },
]
`;

exports[`Spreadsheet Functions [Range 1] =#57622108-1337-4edd-833a-2557835bcfe0.MySpreadsheet.first.1:#57622108-1337-4edd-833a-2557835bcfe0.MySpreadsheet.first.2 3`] = `
Array [
  Array [
    "ec4fdfe8-4a12-4a76-aeae-2dea0229e734",
    "5d1e4a83-383a-4991-a33c-52a9b3169549",
  ],
  Array [
    "62d9a9ee-88a1-46c7-a929-4a0d9dc0a4d6",
  ],
]
`;

exports[`Spreadsheet Functions [SUM] =#57622108-1337-4edd-833a-2557835bcfe0.MySpreadsheet.first.SUM() 1`] = `
Array [
  Object {
    "attrs": undefined,
    "code": "Equal",
    "display": "=",
    "errors": Array [],
    "hide": false,
    "type": "any",
  },
  Object {
    "attrs": Object {
      "id": "28e28190-63bd-4f70-aeca-26e72574c01a",
      "kind": "Spreadsheet",
      "name": "MySpreadsheet",
      "namespaceId": "57622108-1337-4edd-833a-2557835bcfe0",
    },
    "code": "Spreadsheet",
    "display": "MySpreadsheet",
    "errors": Array [],
    "hide": false,
    "type": "Spreadsheet",
  },
  Object {
    "attrs": undefined,
    "code": "Dot",
    "display": ".",
    "errors": Array [],
    "hide": false,
    "type": "any",
  },
  Object {
    "attrs": Object {
      "id": "62d9a9ee-88a1-46c7-a929-4a0d9dc0a4d6",
      "kind": "Column",
      "name": "first",
      "namespaceId": "28e28190-63bd-4f70-aeca-26e72574c01a",
    },
    "code": "Column",
    "display": "first",
    "errors": Array [],
    "hide": false,
    "type": "Column",
  },
  Object {
    "attrs": undefined,
    "code": "Dot",
    "display": ".",
    "errors": Array [],
    "hide": false,
    "type": "any",
  },
  Object {
    "attrs": undefined,
    "code": "Function",
    "display": "SUM",
    "errors": Array [],
    "hide": false,
    "type": "any",
  },
  Object {
    "attrs": undefined,
    "code": "LParen",
    "display": "(",
    "errors": Array [],
    "hide": false,
    "type": "any",
  },
  Object {
    "attrs": undefined,
    "code": "RParen",
    "display": ")",
    "errors": Array [],
    "hide": false,
    "type": "number",
  },
]
`;

exports[`Spreadsheet Functions [SUM] =#57622108-1337-4edd-833a-2557835bcfe0.MySpreadsheet.first.SUM() 2`] = `
Array [
  Object {
    "definitionHandler": [Function],
    "event": [Function],
    "eventId": "57622108-1337-4edd-833a-2557835bcfe0,28e28190-63bd-4f70-aeca-26e72574c01a",
    "kind": "SpreadsheetName",
    "scope": Object {},
  },
  Object {
    "definitionHandler": [Function],
    "event": [Function],
    "eventId": "57622108-1337-4edd-833a-2557835bcfe0,28e28190-63bd-4f70-aeca-26e72574c01a",
    "kind": "Column",
    "scope": Object {
      "columns": Array [
        "62d9a9ee-88a1-46c7-a929-4a0d9dc0a4d6",
      ],
    },
  },
]
`;

exports[`Spreadsheet Functions [SUMIFS >3] =SUMIFS(#57622108-1337-4edd-833a-2557835bcfe0.MySpreadsheet.first, #57622108-1337-4edd-833a-2557835bcfe0.MySpreadsheet.second, >3) 1`] = `
Array [
  Object {
    "attrs": undefined,
    "code": "Equal",
    "display": "=",
    "errors": Array [],
    "hide": false,
    "type": "any",
  },
  Object {
    "attrs": undefined,
    "code": "Function",
    "display": "SUMIFS",
    "errors": Array [],
    "hide": false,
    "type": "any",
  },
  Object {
    "attrs": undefined,
    "code": "LParen",
    "display": "(",
    "errors": Array [],
    "hide": false,
    "type": "any",
  },
  Object {
    "attrs": Object {
      "id": "28e28190-63bd-4f70-aeca-26e72574c01a",
      "kind": "Spreadsheet",
      "name": "MySpreadsheet",
      "namespaceId": "57622108-1337-4edd-833a-2557835bcfe0",
    },
    "code": "Spreadsheet",
    "display": "MySpreadsheet",
    "errors": Array [],
    "hide": false,
    "type": "Spreadsheet",
  },
  Object {
    "attrs": undefined,
    "code": "Dot",
    "display": ".",
    "errors": Array [],
    "hide": false,
    "type": "any",
  },
  Object {
    "attrs": Object {
      "id": "62d9a9ee-88a1-46c7-a929-4a0d9dc0a4d6",
      "kind": "Column",
      "name": "first",
      "namespaceId": "28e28190-63bd-4f70-aeca-26e72574c01a",
    },
    "code": "Column",
    "display": "first",
    "errors": Array [],
    "hide": false,
    "type": "Column",
  },
  Object {
    "attrs": undefined,
    "code": "Comma",
    "display": ",",
    "errors": Array [],
    "hide": false,
    "type": "any",
  },
  Object {
    "attrs": undefined,
    "code": "Space",
    "display": " ",
    "errors": Array [],
    "hide": false,
    "type": "any",
  },
  Object {
    "attrs": Object {
      "id": "28e28190-63bd-4f70-aeca-26e72574c01a",
      "kind": "Spreadsheet",
      "name": "MySpreadsheet",
      "namespaceId": "57622108-1337-4edd-833a-2557835bcfe0",
    },
    "code": "Spreadsheet",
    "display": "MySpreadsheet",
    "errors": Array [],
    "hide": false,
    "type": "Spreadsheet",
  },
  Object {
    "attrs": undefined,
    "code": "Dot",
    "display": ".",
    "errors": Array [],
    "hide": false,
    "type": "any",
  },
  Object {
    "attrs": Object {
      "id": "4e6f9adb-6f33-454e-9f9e-635dc98e3f28",
      "kind": "Column",
      "name": "second",
      "namespaceId": "28e28190-63bd-4f70-aeca-26e72574c01a",
    },
    "code": "Column",
    "display": "second",
    "errors": Array [],
    "hide": false,
    "type": "Column",
  },
  Object {
    "attrs": undefined,
    "code": "Comma",
    "display": ",",
    "errors": Array [],
    "hide": false,
    "type": "any",
  },
  Object {
    "attrs": undefined,
    "code": "Space",
    "display": " ",
    "errors": Array [],
    "hide": false,
    "type": "any",
  },
  Object {
    "attrs": undefined,
    "code": "GreaterThan",
    "display": ">",
    "errors": Array [],
    "hide": false,
    "type": "any",
  },
  Object {
    "attrs": undefined,
    "code": "NumberLiteral",
    "display": "3",
    "errors": Array [],
    "hide": false,
    "type": "number",
  },
  Object {
    "attrs": undefined,
    "code": "RParen",
    "display": ")",
    "errors": Array [],
    "hide": false,
    "type": "number",
  },
]
`;

exports[`Spreadsheet Functions [SUMIFS >3] =SUMIFS(#57622108-1337-4edd-833a-2557835bcfe0.MySpreadsheet.first, #57622108-1337-4edd-833a-2557835bcfe0.MySpreadsheet.second, >3) 2`] = `
Array [
  Object {
    "definitionHandler": [Function],
    "event": [Function],
    "eventId": "57622108-1337-4edd-833a-2557835bcfe0,28e28190-63bd-4f70-aeca-26e72574c01a",
    "kind": "SpreadsheetName",
    "scope": Object {},
  },
  Object {
    "definitionHandler": [Function],
    "event": [Function],
    "eventId": "57622108-1337-4edd-833a-2557835bcfe0,28e28190-63bd-4f70-aeca-26e72574c01a",
    "kind": "Column",
    "scope": Object {
      "columns": Array [
        "4e6f9adb-6f33-454e-9f9e-635dc98e3f28",
      ],
    },
  },
]
`;

exports[`Spreadsheet Functions [SUMIFS 4] =SUMIFS(#57622108-1337-4edd-833a-2557835bcfe0.MySpreadsheet.first, #57622108-1337-4edd-833a-2557835bcfe0.MySpreadsheet.second, 4) 1`] = `
Array [
  Object {
    "attrs": undefined,
    "code": "Equal",
    "display": "=",
    "errors": Array [],
    "hide": false,
    "type": "any",
  },
  Object {
    "attrs": undefined,
    "code": "Function",
    "display": "SUMIFS",
    "errors": Array [],
    "hide": false,
    "type": "any",
  },
  Object {
    "attrs": undefined,
    "code": "LParen",
    "display": "(",
    "errors": Array [],
    "hide": false,
    "type": "any",
  },
  Object {
    "attrs": Object {
      "id": "28e28190-63bd-4f70-aeca-26e72574c01a",
      "kind": "Spreadsheet",
      "name": "MySpreadsheet",
      "namespaceId": "57622108-1337-4edd-833a-2557835bcfe0",
    },
    "code": "Spreadsheet",
    "display": "MySpreadsheet",
    "errors": Array [],
    "hide": false,
    "type": "Spreadsheet",
  },
  Object {
    "attrs": undefined,
    "code": "Dot",
    "display": ".",
    "errors": Array [],
    "hide": false,
    "type": "any",
  },
  Object {
    "attrs": Object {
      "id": "62d9a9ee-88a1-46c7-a929-4a0d9dc0a4d6",
      "kind": "Column",
      "name": "first",
      "namespaceId": "28e28190-63bd-4f70-aeca-26e72574c01a",
    },
    "code": "Column",
    "display": "first",
    "errors": Array [],
    "hide": false,
    "type": "Column",
  },
  Object {
    "attrs": undefined,
    "code": "Comma",
    "display": ",",
    "errors": Array [],
    "hide": false,
    "type": "any",
  },
  Object {
    "attrs": undefined,
    "code": "Space",
    "display": " ",
    "errors": Array [],
    "hide": false,
    "type": "any",
  },
  Object {
    "attrs": Object {
      "id": "28e28190-63bd-4f70-aeca-26e72574c01a",
      "kind": "Spreadsheet",
      "name": "MySpreadsheet",
      "namespaceId": "57622108-1337-4edd-833a-2557835bcfe0",
    },
    "code": "Spreadsheet",
    "display": "MySpreadsheet",
    "errors": Array [],
    "hide": false,
    "type": "Spreadsheet",
  },
  Object {
    "attrs": undefined,
    "code": "Dot",
    "display": ".",
    "errors": Array [],
    "hide": false,
    "type": "any",
  },
  Object {
    "attrs": Object {
      "id": "4e6f9adb-6f33-454e-9f9e-635dc98e3f28",
      "kind": "Column",
      "name": "second",
      "namespaceId": "28e28190-63bd-4f70-aeca-26e72574c01a",
    },
    "code": "Column",
    "display": "second",
    "errors": Array [],
    "hide": false,
    "type": "Column",
  },
  Object {
    "attrs": undefined,
    "code": "Comma",
    "display": ",",
    "errors": Array [],
    "hide": false,
    "type": "any",
  },
  Object {
    "attrs": undefined,
    "code": "Space",
    "display": " ",
    "errors": Array [],
    "hide": false,
    "type": "any",
  },
  Object {
    "attrs": undefined,
    "code": "NumberLiteral",
    "display": "4",
    "errors": Array [],
    "hide": false,
    "type": "number",
  },
  Object {
    "attrs": undefined,
    "code": "RParen",
    "display": ")",
    "errors": Array [],
    "hide": false,
    "type": "number",
  },
]
`;

exports[`Spreadsheet Functions [SUMIFS 4] =SUMIFS(#57622108-1337-4edd-833a-2557835bcfe0.MySpreadsheet.first, #57622108-1337-4edd-833a-2557835bcfe0.MySpreadsheet.second, 4) 2`] = `
Array [
  Object {
    "definitionHandler": [Function],
    "event": [Function],
    "eventId": "57622108-1337-4edd-833a-2557835bcfe0,28e28190-63bd-4f70-aeca-26e72574c01a",
    "kind": "SpreadsheetName",
    "scope": Object {},
  },
  Object {
    "definitionHandler": [Function],
    "event": [Function],
    "eventId": "57622108-1337-4edd-833a-2557835bcfe0,28e28190-63bd-4f70-aeca-26e72574c01a",
    "kind": "Column",
    "scope": Object {
      "columns": Array [
        "4e6f9adb-6f33-454e-9f9e-635dc98e3f28",
      ],
    },
  },
]
`;

exports[`Spreadsheet Functions [SUMPRODUCT] =SUMPRODUCT(#57622108-1337-4edd-833a-2557835bcfe0.MySpreadsheet.first, #57622108-1337-4edd-833a-2557835bcfe0.MySpreadsheet.second) 1`] = `
Array [
  Object {
    "attrs": undefined,
    "code": "Equal",
    "display": "=",
    "errors": Array [],
    "hide": false,
    "type": "any",
  },
  Object {
    "attrs": undefined,
    "code": "Function",
    "display": "SUMPRODUCT",
    "errors": Array [],
    "hide": false,
    "type": "any",
  },
  Object {
    "attrs": undefined,
    "code": "LParen",
    "display": "(",
    "errors": Array [],
    "hide": false,
    "type": "any",
  },
  Object {
    "attrs": Object {
      "id": "28e28190-63bd-4f70-aeca-26e72574c01a",
      "kind": "Spreadsheet",
      "name": "MySpreadsheet",
      "namespaceId": "57622108-1337-4edd-833a-2557835bcfe0",
    },
    "code": "Spreadsheet",
    "display": "MySpreadsheet",
    "errors": Array [],
    "hide": false,
    "type": "Spreadsheet",
  },
  Object {
    "attrs": undefined,
    "code": "Dot",
    "display": ".",
    "errors": Array [],
    "hide": false,
    "type": "any",
  },
  Object {
    "attrs": Object {
      "id": "62d9a9ee-88a1-46c7-a929-4a0d9dc0a4d6",
      "kind": "Column",
      "name": "first",
      "namespaceId": "28e28190-63bd-4f70-aeca-26e72574c01a",
    },
    "code": "Column",
    "display": "first",
    "errors": Array [],
    "hide": false,
    "type": "Column",
  },
  Object {
    "attrs": undefined,
    "code": "Comma",
    "display": ",",
    "errors": Array [],
    "hide": false,
    "type": "any",
  },
  Object {
    "attrs": undefined,
    "code": "Space",
    "display": " ",
    "errors": Array [],
    "hide": false,
    "type": "any",
  },
  Object {
    "attrs": Object {
      "id": "28e28190-63bd-4f70-aeca-26e72574c01a",
      "kind": "Spreadsheet",
      "name": "MySpreadsheet",
      "namespaceId": "57622108-1337-4edd-833a-2557835bcfe0",
    },
    "code": "Spreadsheet",
    "display": "MySpreadsheet",
    "errors": Array [],
    "hide": false,
    "type": "Spreadsheet",
  },
  Object {
    "attrs": undefined,
    "code": "Dot",
    "display": ".",
    "errors": Array [],
    "hide": false,
    "type": "any",
  },
  Object {
    "attrs": Object {
      "id": "4e6f9adb-6f33-454e-9f9e-635dc98e3f28",
      "kind": "Column",
      "name": "second",
      "namespaceId": "28e28190-63bd-4f70-aeca-26e72574c01a",
    },
    "code": "Column",
    "display": "second",
    "errors": Array [],
    "hide": false,
    "type": "Column",
  },
  Object {
    "attrs": undefined,
    "code": "RParen",
    "display": ")",
    "errors": Array [],
    "hide": false,
    "type": "number",
  },
]
`;

exports[`Spreadsheet Functions [SUMPRODUCT] =SUMPRODUCT(#57622108-1337-4edd-833a-2557835bcfe0.MySpreadsheet.first, #57622108-1337-4edd-833a-2557835bcfe0.MySpreadsheet.second) 2`] = `
Array [
  Object {
    "definitionHandler": [Function],
    "event": [Function],
    "eventId": "57622108-1337-4edd-833a-2557835bcfe0,28e28190-63bd-4f70-aeca-26e72574c01a",
    "kind": "SpreadsheetName",
    "scope": Object {},
  },
  Object {
    "definitionHandler": [Function],
    "event": [Function],
    "eventId": "57622108-1337-4edd-833a-2557835bcfe0,28e28190-63bd-4f70-aeca-26e72574c01a",
    "kind": "Column",
    "scope": Object {
      "columns": Array [
        "4e6f9adb-6f33-454e-9f9e-635dc98e3f28",
      ],
    },
  },
]
`;

exports[`Spreadsheet Functions [Spreadsheet] =Spreadsheet([]).toArray() 1`] = `
Array [
  Object {
    "attrs": undefined,
    "code": "Equal",
    "display": "=",
    "errors": Array [],
    "hide": false,
    "type": "any",
  },
  Object {
    "attrs": undefined,
    "code": "Function",
    "display": "Spreadsheet",
    "errors": Array [],
    "hide": false,
    "type": "any",
  },
  Object {
    "attrs": undefined,
    "code": "LParen",
    "display": "(",
    "errors": Array [],
    "hide": false,
    "type": "any",
  },
  Object {
    "attrs": undefined,
    "code": "LBracket",
    "display": "[",
    "errors": Array [],
    "hide": false,
    "type": "any",
  },
  Object {
    "attrs": undefined,
    "code": "RBracket",
    "display": "]",
    "errors": Array [],
    "hide": false,
    "type": "any",
  },
  Object {
    "attrs": undefined,
    "code": "RParen",
    "display": ")",
    "errors": Array [],
    "hide": false,
    "type": "Spreadsheet",
  },
  Object {
    "attrs": undefined,
    "code": "Dot",
    "display": ".",
    "errors": Array [],
    "hide": false,
    "type": "any",
  },
  Object {
    "attrs": undefined,
    "code": "Function",
    "display": "toArray",
    "errors": Array [],
    "hide": false,
    "type": "any",
  },
  Object {
    "attrs": undefined,
    "code": "LParen",
    "display": "(",
    "errors": Array [],
    "hide": false,
    "type": "any",
  },
  Object {
    "attrs": undefined,
    "code": "RParen",
    "display": ")",
    "errors": Array [],
    "hide": false,
    "type": "Array",
  },
]
`;

exports[`Spreadsheet Functions [Spreadsheet] =Spreadsheet([]).toArray() 2`] = `Array []`;

exports[`Spreadsheet Functions [Spreadsheet] =Spreadsheet([]).toArray() 3`] = `
Array [
  Object {
    "result": Array [
      Object {
        "result": "Column1",
        "type": "string",
      },
      Object {
        "result": "Column2",
        "type": "string",
      },
    ],
    "subType": "string",
    "type": "Array",
  },
  Object {
    "result": Array [
      Object {
        "result": "1",
        "type": "string",
      },
      Object {
        "result": "2",
        "type": "string",
      },
    ],
    "subType": "string",
    "type": "Array",
  },
  Object {
    "result": Array [
      Object {
        "result": "3",
        "type": "string",
      },
      Object {
        "result": "4",
        "type": "string",
      },
    ],
    "subType": "string",
    "type": "Array",
  },
]
`;

exports[`Spreadsheet Functions [Spreadsheet] =Spreadsheet([{a: 1}, {a: 2}]).toArray() 1`] = `
Array [
  Object {
    "attrs": undefined,
    "code": "Equal",
    "display": "=",
    "errors": Array [],
    "hide": false,
    "type": "any",
  },
  Object {
    "attrs": undefined,
    "code": "Function",
    "display": "Spreadsheet",
    "errors": Array [],
    "hide": false,
    "type": "any",
  },
  Object {
    "attrs": undefined,
    "code": "LParen",
    "display": "(",
    "errors": Array [],
    "hide": false,
    "type": "any",
  },
  Object {
    "attrs": undefined,
    "code": "LBracket",
    "display": "[",
    "errors": Array [],
    "hide": false,
    "type": "any",
  },
  Object {
    "attrs": undefined,
    "code": "LBrace",
    "display": "{",
    "errors": Array [],
    "hide": false,
    "type": "any",
  },
  Object {
    "attrs": undefined,
    "code": "FunctionName",
    "display": "a",
    "errors": Array [],
    "hide": false,
    "type": "string",
  },
  Object {
    "attrs": undefined,
    "code": "Colon",
    "display": ":",
    "errors": Array [],
    "hide": false,
    "type": "Record",
  },
  Object {
    "attrs": undefined,
    "code": "Space",
    "display": " ",
    "errors": Array [],
    "hide": false,
    "type": "any",
  },
  Object {
    "attrs": undefined,
    "code": "NumberLiteral",
    "display": "1",
    "errors": Array [],
    "hide": false,
    "type": "number",
  },
  Object {
    "attrs": undefined,
    "code": "RBrace",
    "display": "}",
    "errors": Array [],
    "hide": false,
    "type": "any",
  },
  Object {
    "attrs": undefined,
    "code": "Comma",
    "display": ",",
    "errors": Array [],
    "hide": false,
    "type": "any",
  },
  Object {
    "attrs": undefined,
    "code": "Space",
    "display": " ",
    "errors": Array [],
    "hide": false,
    "type": "any",
  },
  Object {
    "attrs": undefined,
    "code": "LBrace",
    "display": "{",
    "errors": Array [],
    "hide": false,
    "type": "any",
  },
  Object {
    "attrs": undefined,
    "code": "FunctionName",
    "display": "a",
    "errors": Array [],
    "hide": false,
    "type": "string",
  },
  Object {
    "attrs": undefined,
    "code": "Colon",
    "display": ":",
    "errors": Array [],
    "hide": false,
    "type": "Record",
  },
  Object {
    "attrs": undefined,
    "code": "Space",
    "display": " ",
    "errors": Array [],
    "hide": false,
    "type": "any",
  },
  Object {
    "attrs": undefined,
    "code": "NumberLiteral",
    "display": "2",
    "errors": Array [],
    "hide": false,
    "type": "number",
  },
  Object {
    "attrs": undefined,
    "code": "RBrace",
    "display": "}",
    "errors": Array [],
    "hide": false,
    "type": "any",
  },
  Object {
    "attrs": undefined,
    "code": "RBracket",
    "display": "]",
    "errors": Array [],
    "hide": false,
    "type": "any",
  },
  Object {
    "attrs": undefined,
    "code": "RParen",
    "display": ")",
    "errors": Array [],
    "hide": false,
    "type": "Spreadsheet",
  },
  Object {
    "attrs": undefined,
    "code": "Dot",
    "display": ".",
    "errors": Array [],
    "hide": false,
    "type": "any",
  },
  Object {
    "attrs": undefined,
    "code": "Function",
    "display": "toArray",
    "errors": Array [],
    "hide": false,
    "type": "any",
  },
  Object {
    "attrs": undefined,
    "code": "LParen",
    "display": "(",
    "errors": Array [],
    "hide": false,
    "type": "any",
  },
  Object {
    "attrs": undefined,
    "code": "RParen",
    "display": ")",
    "errors": Array [],
    "hide": false,
    "type": "Array",
  },
]
`;

exports[`Spreadsheet Functions [Spreadsheet] =Spreadsheet([{a: 1}, {a: 2}]).toArray() 2`] = `Array []`;

exports[`Spreadsheet Functions [Spreadsheet] =Spreadsheet([{a: 1}, {a: 2}]).toArray() 3`] = `
Array [
  Object {
    "result": Array [
      Object {
        "result": "a",
        "type": "string",
      },
    ],
    "subType": "string",
    "type": "Array",
  },
  Object {
    "result": Array [
      Object {
        "result": "1",
        "type": "string",
      },
    ],
    "subType": "string",
    "type": "Array",
  },
  Object {
    "result": Array [
      Object {
        "result": "2",
        "type": "string",
      },
    ],
    "subType": "string",
    "type": "Array",
  },
]
`;

exports[`Spreadsheet Functions [Spreadsheet] =Spreadsheet([1,2,3]).toArray() 1`] = `
Array [
  Object {
    "attrs": undefined,
    "code": "Equal",
    "display": "=",
    "errors": Array [],
    "hide": false,
    "type": "any",
  },
  Object {
    "attrs": undefined,
    "code": "Function",
    "display": "Spreadsheet",
    "errors": Array [],
    "hide": false,
    "type": "any",
  },
  Object {
    "attrs": undefined,
    "code": "LParen",
    "display": "(",
    "errors": Array [],
    "hide": false,
    "type": "any",
  },
  Object {
    "attrs": undefined,
    "code": "LBracket",
    "display": "[",
    "errors": Array [],
    "hide": false,
    "type": "any",
  },
  Object {
    "attrs": undefined,
    "code": "NumberLiteral",
    "display": "1",
    "errors": Array [],
    "hide": false,
    "type": "number",
  },
  Object {
    "attrs": undefined,
    "code": "Comma",
    "display": ",",
    "errors": Array [],
    "hide": false,
    "type": "any",
  },
  Object {
    "attrs": undefined,
    "code": "NumberLiteral",
    "display": "2",
    "errors": Array [],
    "hide": false,
    "type": "number",
  },
  Object {
    "attrs": undefined,
    "code": "Comma",
    "display": ",",
    "errors": Array [],
    "hide": false,
    "type": "any",
  },
  Object {
    "attrs": undefined,
    "code": "NumberLiteral",
    "display": "3",
    "errors": Array [],
    "hide": false,
    "type": "number",
  },
  Object {
    "attrs": undefined,
    "code": "RBracket",
    "display": "]",
    "errors": Array [],
    "hide": false,
    "type": "any",
  },
  Object {
    "attrs": undefined,
    "code": "RParen",
    "display": ")",
    "errors": Array [],
    "hide": false,
    "type": "Spreadsheet",
  },
  Object {
    "attrs": undefined,
    "code": "Dot",
    "display": ".",
    "errors": Array [],
    "hide": false,
    "type": "any",
  },
  Object {
    "attrs": undefined,
    "code": "Function",
    "display": "toArray",
    "errors": Array [],
    "hide": false,
    "type": "any",
  },
  Object {
    "attrs": undefined,
    "code": "LParen",
    "display": "(",
    "errors": Array [],
    "hide": false,
    "type": "any",
  },
  Object {
    "attrs": undefined,
    "code": "RParen",
    "display": ")",
    "errors": Array [],
    "hide": false,
    "type": "Array",
  },
]
`;

exports[`Spreadsheet Functions [Spreadsheet] =Spreadsheet([1,2,3]).toArray() 2`] = `Array []`;

exports[`Spreadsheet Functions [Spreadsheet] =Spreadsheet([1,2,3]).toArray() 3`] = `"Spreadsheet type unmatched: number"`;

exports[`Spreadsheet Functions [VLOOKUP 2 range default] =VLOOKUP("2", #57622108-1337-4edd-833a-2557835bcfe0.MySpreadsheet, #57622108-1337-4edd-833a-2557835bcfe0.MySpreadsheet.second) 1`] = `
Array [
  Object {
    "attrs": undefined,
    "code": "Equal",
    "display": "=",
    "errors": Array [],
    "hide": false,
    "type": "any",
  },
  Object {
    "attrs": undefined,
    "code": "Function",
    "display": "VLOOKUP",
    "errors": Array [],
    "hide": false,
    "type": "any",
  },
  Object {
    "attrs": undefined,
    "code": "LParen",
    "display": "(",
    "errors": Array [],
    "hide": false,
    "type": "any",
  },
  Object {
    "attrs": undefined,
    "code": "StringLiteral",
    "display": "\\"2\\"",
    "errors": Array [],
    "hide": false,
    "type": "string",
  },
  Object {
    "attrs": undefined,
    "code": "Comma",
    "display": ",",
    "errors": Array [],
    "hide": false,
    "type": "any",
  },
  Object {
    "attrs": undefined,
    "code": "Space",
    "display": " ",
    "errors": Array [],
    "hide": false,
    "type": "any",
  },
  Object {
    "attrs": Object {
      "id": "28e28190-63bd-4f70-aeca-26e72574c01a",
      "kind": "Spreadsheet",
      "name": "MySpreadsheet",
      "namespaceId": "57622108-1337-4edd-833a-2557835bcfe0",
    },
    "code": "Spreadsheet",
    "display": "MySpreadsheet",
    "errors": Array [],
    "hide": false,
    "type": "Spreadsheet",
  },
  Object {
    "attrs": undefined,
    "code": "Comma",
    "display": ",",
    "errors": Array [],
    "hide": false,
    "type": "any",
  },
  Object {
    "attrs": undefined,
    "code": "Space",
    "display": " ",
    "errors": Array [],
    "hide": false,
    "type": "any",
  },
  Object {
    "attrs": Object {
      "id": "28e28190-63bd-4f70-aeca-26e72574c01a",
      "kind": "Spreadsheet",
      "name": "MySpreadsheet",
      "namespaceId": "57622108-1337-4edd-833a-2557835bcfe0",
    },
    "code": "Spreadsheet",
    "display": "MySpreadsheet",
    "errors": Array [],
    "hide": false,
    "type": "Spreadsheet",
  },
  Object {
    "attrs": undefined,
    "code": "Dot",
    "display": ".",
    "errors": Array [],
    "hide": false,
    "type": "any",
  },
  Object {
    "attrs": Object {
      "id": "4e6f9adb-6f33-454e-9f9e-635dc98e3f28",
      "kind": "Column",
      "name": "second",
      "namespaceId": "28e28190-63bd-4f70-aeca-26e72574c01a",
    },
    "code": "Column",
    "display": "second",
    "errors": Array [],
    "hide": false,
    "type": "Column",
  },
  Object {
    "attrs": undefined,
    "code": "RParen",
    "display": ")",
    "errors": Array [],
    "hide": false,
    "type": "string",
  },
]
`;

exports[`Spreadsheet Functions [VLOOKUP 2 range default] =VLOOKUP("2", #57622108-1337-4edd-833a-2557835bcfe0.MySpreadsheet, #57622108-1337-4edd-833a-2557835bcfe0.MySpreadsheet.second) 2`] = `
Array [
  Object {
    "definitionHandler": [Function],
    "event": [Function],
    "eventId": "57622108-1337-4edd-833a-2557835bcfe0,28e28190-63bd-4f70-aeca-26e72574c01a",
    "kind": "SpreadsheetName",
    "scope": Object {},
  },
  Object {
    "definitionHandler": [Function],
    "event": [Function],
    "eventId": "57622108-1337-4edd-833a-2557835bcfe0,28e28190-63bd-4f70-aeca-26e72574c01a",
    "kind": "Column",
    "scope": Object {
      "columns": Array [
        "4e6f9adb-6f33-454e-9f9e-635dc98e3f28",
      ],
    },
  },
]
`;

exports[`Spreadsheet Functions [VLOOKUP 2 range true] =VLOOKUP("2", #57622108-1337-4edd-833a-2557835bcfe0.MySpreadsheet, #57622108-1337-4edd-833a-2557835bcfe0.MySpreadsheet.second, true) 1`] = `
Array [
  Object {
    "attrs": undefined,
    "code": "Equal",
    "display": "=",
    "errors": Array [],
    "hide": false,
    "type": "any",
  },
  Object {
    "attrs": undefined,
    "code": "Function",
    "display": "VLOOKUP",
    "errors": Array [],
    "hide": false,
    "type": "any",
  },
  Object {
    "attrs": undefined,
    "code": "LParen",
    "display": "(",
    "errors": Array [],
    "hide": false,
    "type": "any",
  },
  Object {
    "attrs": undefined,
    "code": "StringLiteral",
    "display": "\\"2\\"",
    "errors": Array [],
    "hide": false,
    "type": "string",
  },
  Object {
    "attrs": undefined,
    "code": "Comma",
    "display": ",",
    "errors": Array [],
    "hide": false,
    "type": "any",
  },
  Object {
    "attrs": undefined,
    "code": "Space",
    "display": " ",
    "errors": Array [],
    "hide": false,
    "type": "any",
  },
  Object {
    "attrs": Object {
      "id": "28e28190-63bd-4f70-aeca-26e72574c01a",
      "kind": "Spreadsheet",
      "name": "MySpreadsheet",
      "namespaceId": "57622108-1337-4edd-833a-2557835bcfe0",
    },
    "code": "Spreadsheet",
    "display": "MySpreadsheet",
    "errors": Array [],
    "hide": false,
    "type": "Spreadsheet",
  },
  Object {
    "attrs": undefined,
    "code": "Comma",
    "display": ",",
    "errors": Array [],
    "hide": false,
    "type": "any",
  },
  Object {
    "attrs": undefined,
    "code": "Space",
    "display": " ",
    "errors": Array [],
    "hide": false,
    "type": "any",
  },
  Object {
    "attrs": Object {
      "id": "28e28190-63bd-4f70-aeca-26e72574c01a",
      "kind": "Spreadsheet",
      "name": "MySpreadsheet",
      "namespaceId": "57622108-1337-4edd-833a-2557835bcfe0",
    },
    "code": "Spreadsheet",
    "display": "MySpreadsheet",
    "errors": Array [],
    "hide": false,
    "type": "Spreadsheet",
  },
  Object {
    "attrs": undefined,
    "code": "Dot",
    "display": ".",
    "errors": Array [],
    "hide": false,
    "type": "any",
  },
  Object {
    "attrs": Object {
      "id": "4e6f9adb-6f33-454e-9f9e-635dc98e3f28",
      "kind": "Column",
      "name": "second",
      "namespaceId": "28e28190-63bd-4f70-aeca-26e72574c01a",
    },
    "code": "Column",
    "display": "second",
    "errors": Array [],
    "hide": false,
    "type": "Column",
  },
  Object {
    "attrs": undefined,
    "code": "Comma",
    "display": ",",
    "errors": Array [],
    "hide": false,
    "type": "any",
  },
  Object {
    "attrs": undefined,
    "code": "Space",
    "display": " ",
    "errors": Array [],
    "hide": false,
    "type": "any",
  },
  Object {
    "attrs": undefined,
    "code": "BooleanLiteral",
    "display": "true",
    "errors": Array [],
    "hide": false,
    "type": "boolean",
  },
  Object {
    "attrs": undefined,
    "code": "RParen",
    "display": ")",
    "errors": Array [],
    "hide": false,
    "type": "string",
  },
]
`;

exports[`Spreadsheet Functions [VLOOKUP 2 range true] =VLOOKUP("2", #57622108-1337-4edd-833a-2557835bcfe0.MySpreadsheet, #57622108-1337-4edd-833a-2557835bcfe0.MySpreadsheet.second, true) 2`] = `
Array [
  Object {
    "definitionHandler": [Function],
    "event": [Function],
    "eventId": "57622108-1337-4edd-833a-2557835bcfe0,28e28190-63bd-4f70-aeca-26e72574c01a",
    "kind": "SpreadsheetName",
    "scope": Object {},
  },
  Object {
    "definitionHandler": [Function],
    "event": [Function],
    "eventId": "57622108-1337-4edd-833a-2557835bcfe0,28e28190-63bd-4f70-aeca-26e72574c01a",
    "kind": "Column",
    "scope": Object {
      "columns": Array [
        "4e6f9adb-6f33-454e-9f9e-635dc98e3f28",
      ],
    },
  },
]
`;

exports[`Spreadsheet Functions [VLOOKUP Column check] =VLOOKUP("", #57622108-1337-4edd-833a-2557835bcfe0.MySpreadsheet, #57622108-1337-4edd-833a-2557835bcfe0.MySpreadsheet.first) 1`] = `
Array [
  Object {
    "attrs": undefined,
    "code": "Equal",
    "display": "=",
    "errors": Array [],
    "hide": false,
    "type": "any",
  },
  Object {
    "attrs": undefined,
    "code": "Function",
    "display": "VLOOKUP",
    "errors": Array [],
    "hide": false,
    "type": "any",
  },
  Object {
    "attrs": undefined,
    "code": "LParen",
    "display": "(",
    "errors": Array [],
    "hide": false,
    "type": "any",
  },
  Object {
    "attrs": undefined,
    "code": "StringLiteral",
    "display": "\\"\\"",
    "errors": Array [],
    "hide": false,
    "type": "string",
  },
  Object {
    "attrs": undefined,
    "code": "Comma",
    "display": ",",
    "errors": Array [],
    "hide": false,
    "type": "any",
  },
  Object {
    "attrs": undefined,
    "code": "Space",
    "display": " ",
    "errors": Array [],
    "hide": false,
    "type": "any",
  },
  Object {
    "attrs": Object {
      "id": "28e28190-63bd-4f70-aeca-26e72574c01a",
      "kind": "Spreadsheet",
      "name": "MySpreadsheet",
      "namespaceId": "57622108-1337-4edd-833a-2557835bcfe0",
    },
    "code": "Spreadsheet",
    "display": "MySpreadsheet",
    "errors": Array [],
    "hide": false,
    "type": "Spreadsheet",
  },
  Object {
    "attrs": undefined,
    "code": "Comma",
    "display": ",",
    "errors": Array [],
    "hide": false,
    "type": "any",
  },
  Object {
    "attrs": undefined,
    "code": "Space",
    "display": " ",
    "errors": Array [],
    "hide": false,
    "type": "any",
  },
  Object {
    "attrs": Object {
      "id": "28e28190-63bd-4f70-aeca-26e72574c01a",
      "kind": "Spreadsheet",
      "name": "MySpreadsheet",
      "namespaceId": "57622108-1337-4edd-833a-2557835bcfe0",
    },
    "code": "Spreadsheet",
    "display": "MySpreadsheet",
    "errors": Array [],
    "hide": false,
    "type": "Spreadsheet",
  },
  Object {
    "attrs": undefined,
    "code": "Dot",
    "display": ".",
    "errors": Array [],
    "hide": false,
    "type": "any",
  },
  Object {
    "attrs": Object {
      "id": "62d9a9ee-88a1-46c7-a929-4a0d9dc0a4d6",
      "kind": "Column",
      "name": "first",
      "namespaceId": "28e28190-63bd-4f70-aeca-26e72574c01a",
    },
    "code": "Column",
    "display": "first",
    "errors": Array [],
    "hide": false,
    "type": "Column",
  },
  Object {
    "attrs": undefined,
    "code": "RParen",
    "display": ")",
    "errors": Array [],
    "hide": false,
    "type": "string",
  },
]
`;

exports[`Spreadsheet Functions [VLOOKUP Column check] =VLOOKUP("", #57622108-1337-4edd-833a-2557835bcfe0.MySpreadsheet, #57622108-1337-4edd-833a-2557835bcfe0.MySpreadsheet.first) 2`] = `
Array [
  Object {
    "definitionHandler": [Function],
    "event": [Function],
    "eventId": "57622108-1337-4edd-833a-2557835bcfe0,28e28190-63bd-4f70-aeca-26e72574c01a",
    "kind": "SpreadsheetName",
    "scope": Object {},
  },
  Object {
    "definitionHandler": [Function],
    "event": [Function],
    "eventId": "57622108-1337-4edd-833a-2557835bcfe0,28e28190-63bd-4f70-aeca-26e72574c01a",
    "kind": "Column",
    "scope": Object {
      "columns": Array [
        "62d9a9ee-88a1-46c7-a929-4a0d9dc0a4d6",
      ],
    },
  },
]
`;

exports[`Spreadsheet Functions [VLOOKUP Not found 2 range false] =VLOOKUP("2", #57622108-1337-4edd-833a-2557835bcfe0.MySpreadsheet, #57622108-1337-4edd-833a-2557835bcfe0.MySpreadsheet.second, false) 1`] = `
Array [
  Object {
    "attrs": undefined,
    "code": "Equal",
    "display": "=",
    "errors": Array [],
    "hide": false,
    "type": "any",
  },
  Object {
    "attrs": undefined,
    "code": "Function",
    "display": "VLOOKUP",
    "errors": Array [],
    "hide": false,
    "type": "any",
  },
  Object {
    "attrs": undefined,
    "code": "LParen",
    "display": "(",
    "errors": Array [],
    "hide": false,
    "type": "any",
  },
  Object {
    "attrs": undefined,
    "code": "StringLiteral",
    "display": "\\"2\\"",
    "errors": Array [],
    "hide": false,
    "type": "string",
  },
  Object {
    "attrs": undefined,
    "code": "Comma",
    "display": ",",
    "errors": Array [],
    "hide": false,
    "type": "any",
  },
  Object {
    "attrs": undefined,
    "code": "Space",
    "display": " ",
    "errors": Array [],
    "hide": false,
    "type": "any",
  },
  Object {
    "attrs": Object {
      "id": "28e28190-63bd-4f70-aeca-26e72574c01a",
      "kind": "Spreadsheet",
      "name": "MySpreadsheet",
      "namespaceId": "57622108-1337-4edd-833a-2557835bcfe0",
    },
    "code": "Spreadsheet",
    "display": "MySpreadsheet",
    "errors": Array [],
    "hide": false,
    "type": "Spreadsheet",
  },
  Object {
    "attrs": undefined,
    "code": "Comma",
    "display": ",",
    "errors": Array [],
    "hide": false,
    "type": "any",
  },
  Object {
    "attrs": undefined,
    "code": "Space",
    "display": " ",
    "errors": Array [],
    "hide": false,
    "type": "any",
  },
  Object {
    "attrs": Object {
      "id": "28e28190-63bd-4f70-aeca-26e72574c01a",
      "kind": "Spreadsheet",
      "name": "MySpreadsheet",
      "namespaceId": "57622108-1337-4edd-833a-2557835bcfe0",
    },
    "code": "Spreadsheet",
    "display": "MySpreadsheet",
    "errors": Array [],
    "hide": false,
    "type": "Spreadsheet",
  },
  Object {
    "attrs": undefined,
    "code": "Dot",
    "display": ".",
    "errors": Array [],
    "hide": false,
    "type": "any",
  },
  Object {
    "attrs": Object {
      "id": "4e6f9adb-6f33-454e-9f9e-635dc98e3f28",
      "kind": "Column",
      "name": "second",
      "namespaceId": "28e28190-63bd-4f70-aeca-26e72574c01a",
    },
    "code": "Column",
    "display": "second",
    "errors": Array [],
    "hide": false,
    "type": "Column",
  },
  Object {
    "attrs": undefined,
    "code": "Comma",
    "display": ",",
    "errors": Array [],
    "hide": false,
    "type": "any",
  },
  Object {
    "attrs": undefined,
    "code": "Space",
    "display": " ",
    "errors": Array [],
    "hide": false,
    "type": "any",
  },
  Object {
    "attrs": undefined,
    "code": "BooleanLiteral",
    "display": "false",
    "errors": Array [],
    "hide": false,
    "type": "boolean",
  },
  Object {
    "attrs": undefined,
    "code": "RParen",
    "display": ")",
    "errors": Array [],
    "hide": false,
    "type": "string",
  },
]
`;

exports[`Spreadsheet Functions [VLOOKUP Not found 2 range false] =VLOOKUP("2", #57622108-1337-4edd-833a-2557835bcfe0.MySpreadsheet, #57622108-1337-4edd-833a-2557835bcfe0.MySpreadsheet.second, false) 2`] = `
Array [
  Object {
    "definitionHandler": [Function],
    "event": [Function],
    "eventId": "57622108-1337-4edd-833a-2557835bcfe0,28e28190-63bd-4f70-aeca-26e72574c01a",
    "kind": "SpreadsheetName",
    "scope": Object {},
  },
  Object {
    "definitionHandler": [Function],
    "event": [Function],
    "eventId": "57622108-1337-4edd-833a-2557835bcfe0,28e28190-63bd-4f70-aeca-26e72574c01a",
    "kind": "Column",
    "scope": Object {
      "columns": Array [
        "4e6f9adb-6f33-454e-9f9e-635dc98e3f28",
      ],
    },
  },
]
`;

exports[`Spreadsheet Functions [VLOOKUP Not found] =VLOOKUP("", #57622108-1337-4edd-833a-2557835bcfe0.MySpreadsheet, #57622108-1337-4edd-833a-2557835bcfe0.MySpreadsheet.second) 1`] = `
Array [
  Object {
    "attrs": undefined,
    "code": "Equal",
    "display": "=",
    "errors": Array [],
    "hide": false,
    "type": "any",
  },
  Object {
    "attrs": undefined,
    "code": "Function",
    "display": "VLOOKUP",
    "errors": Array [],
    "hide": false,
    "type": "any",
  },
  Object {
    "attrs": undefined,
    "code": "LParen",
    "display": "(",
    "errors": Array [],
    "hide": false,
    "type": "any",
  },
  Object {
    "attrs": undefined,
    "code": "StringLiteral",
    "display": "\\"\\"",
    "errors": Array [],
    "hide": false,
    "type": "string",
  },
  Object {
    "attrs": undefined,
    "code": "Comma",
    "display": ",",
    "errors": Array [],
    "hide": false,
    "type": "any",
  },
  Object {
    "attrs": undefined,
    "code": "Space",
    "display": " ",
    "errors": Array [],
    "hide": false,
    "type": "any",
  },
  Object {
    "attrs": Object {
      "id": "28e28190-63bd-4f70-aeca-26e72574c01a",
      "kind": "Spreadsheet",
      "name": "MySpreadsheet",
      "namespaceId": "57622108-1337-4edd-833a-2557835bcfe0",
    },
    "code": "Spreadsheet",
    "display": "MySpreadsheet",
    "errors": Array [],
    "hide": false,
    "type": "Spreadsheet",
  },
  Object {
    "attrs": undefined,
    "code": "Comma",
    "display": ",",
    "errors": Array [],
    "hide": false,
    "type": "any",
  },
  Object {
    "attrs": undefined,
    "code": "Space",
    "display": " ",
    "errors": Array [],
    "hide": false,
    "type": "any",
  },
  Object {
    "attrs": Object {
      "id": "28e28190-63bd-4f70-aeca-26e72574c01a",
      "kind": "Spreadsheet",
      "name": "MySpreadsheet",
      "namespaceId": "57622108-1337-4edd-833a-2557835bcfe0",
    },
    "code": "Spreadsheet",
    "display": "MySpreadsheet",
    "errors": Array [],
    "hide": false,
    "type": "Spreadsheet",
  },
  Object {
    "attrs": undefined,
    "code": "Dot",
    "display": ".",
    "errors": Array [],
    "hide": false,
    "type": "any",
  },
  Object {
    "attrs": Object {
      "id": "4e6f9adb-6f33-454e-9f9e-635dc98e3f28",
      "kind": "Column",
      "name": "second",
      "namespaceId": "28e28190-63bd-4f70-aeca-26e72574c01a",
    },
    "code": "Column",
    "display": "second",
    "errors": Array [],
    "hide": false,
    "type": "Column",
  },
  Object {
    "attrs": undefined,
    "code": "RParen",
    "display": ")",
    "errors": Array [],
    "hide": false,
    "type": "string",
  },
]
`;

exports[`Spreadsheet Functions [VLOOKUP Not found] =VLOOKUP("", #57622108-1337-4edd-833a-2557835bcfe0.MySpreadsheet, #57622108-1337-4edd-833a-2557835bcfe0.MySpreadsheet.second) 2`] = `
Array [
  Object {
    "definitionHandler": [Function],
    "event": [Function],
    "eventId": "57622108-1337-4edd-833a-2557835bcfe0,28e28190-63bd-4f70-aeca-26e72574c01a",
    "kind": "SpreadsheetName",
    "scope": Object {},
  },
  Object {
    "definitionHandler": [Function],
    "event": [Function],
    "eventId": "57622108-1337-4edd-833a-2557835bcfe0,28e28190-63bd-4f70-aeca-26e72574c01a",
    "kind": "Column",
    "scope": Object {
      "columns": Array [
        "4e6f9adb-6f33-454e-9f9e-635dc98e3f28",
      ],
    },
  },
]
`;

exports[`Spreadsheet Functions [VLOOKUP ok number] =VLOOKUP(1, #57622108-1337-4edd-833a-2557835bcfe0.MySpreadsheet, #57622108-1337-4edd-833a-2557835bcfe0.MySpreadsheet.second) 1`] = `
Array [
  Object {
    "attrs": undefined,
    "code": "Equal",
    "display": "=",
    "errors": Array [],
    "hide": false,
    "type": "any",
  },
  Object {
    "attrs": undefined,
    "code": "Function",
    "display": "VLOOKUP",
    "errors": Array [],
    "hide": false,
    "type": "any",
  },
  Object {
    "attrs": undefined,
    "code": "LParen",
    "display": "(",
    "errors": Array [],
    "hide": false,
    "type": "any",
  },
  Object {
    "attrs": undefined,
    "code": "NumberLiteral",
    "display": "1",
    "errors": Array [],
    "hide": false,
    "type": "number",
  },
  Object {
    "attrs": undefined,
    "code": "Comma",
    "display": ",",
    "errors": Array [],
    "hide": false,
    "type": "any",
  },
  Object {
    "attrs": undefined,
    "code": "Space",
    "display": " ",
    "errors": Array [],
    "hide": false,
    "type": "any",
  },
  Object {
    "attrs": Object {
      "id": "28e28190-63bd-4f70-aeca-26e72574c01a",
      "kind": "Spreadsheet",
      "name": "MySpreadsheet",
      "namespaceId": "57622108-1337-4edd-833a-2557835bcfe0",
    },
    "code": "Spreadsheet",
    "display": "MySpreadsheet",
    "errors": Array [],
    "hide": false,
    "type": "Spreadsheet",
  },
  Object {
    "attrs": undefined,
    "code": "Comma",
    "display": ",",
    "errors": Array [],
    "hide": false,
    "type": "any",
  },
  Object {
    "attrs": undefined,
    "code": "Space",
    "display": " ",
    "errors": Array [],
    "hide": false,
    "type": "any",
  },
  Object {
    "attrs": Object {
      "id": "28e28190-63bd-4f70-aeca-26e72574c01a",
      "kind": "Spreadsheet",
      "name": "MySpreadsheet",
      "namespaceId": "57622108-1337-4edd-833a-2557835bcfe0",
    },
    "code": "Spreadsheet",
    "display": "MySpreadsheet",
    "errors": Array [],
    "hide": false,
    "type": "Spreadsheet",
  },
  Object {
    "attrs": undefined,
    "code": "Dot",
    "display": ".",
    "errors": Array [],
    "hide": false,
    "type": "any",
  },
  Object {
    "attrs": Object {
      "id": "4e6f9adb-6f33-454e-9f9e-635dc98e3f28",
      "kind": "Column",
      "name": "second",
      "namespaceId": "28e28190-63bd-4f70-aeca-26e72574c01a",
    },
    "code": "Column",
    "display": "second",
    "errors": Array [],
    "hide": false,
    "type": "Column",
  },
  Object {
    "attrs": undefined,
    "code": "RParen",
    "display": ")",
    "errors": Array [],
    "hide": false,
    "type": "string",
  },
]
`;

exports[`Spreadsheet Functions [VLOOKUP ok number] =VLOOKUP(1, #57622108-1337-4edd-833a-2557835bcfe0.MySpreadsheet, #57622108-1337-4edd-833a-2557835bcfe0.MySpreadsheet.second) 2`] = `
Array [
  Object {
    "definitionHandler": [Function],
    "event": [Function],
    "eventId": "57622108-1337-4edd-833a-2557835bcfe0,28e28190-63bd-4f70-aeca-26e72574c01a",
    "kind": "SpreadsheetName",
    "scope": Object {},
  },
  Object {
    "definitionHandler": [Function],
    "event": [Function],
    "eventId": "57622108-1337-4edd-833a-2557835bcfe0,28e28190-63bd-4f70-aeca-26e72574c01a",
    "kind": "Column",
    "scope": Object {
      "columns": Array [
        "4e6f9adb-6f33-454e-9f9e-635dc98e3f28",
      ],
    },
  },
]
`;

exports[`Spreadsheet Functions [VLOOKUP ok number] =VLOOKUP(1, #57622108-1337-4edd-833a-2557835bcfe0.MySpreadsheet, #57622108-1337-4edd-833a-2557835bcfe0.MySpreadsheet.second, false) 1`] = `
Array [
  Object {
    "attrs": undefined,
    "code": "Equal",
    "display": "=",
    "errors": Array [],
    "hide": false,
    "type": "any",
  },
  Object {
    "attrs": undefined,
    "code": "Function",
    "display": "VLOOKUP",
    "errors": Array [],
    "hide": false,
    "type": "any",
  },
  Object {
    "attrs": undefined,
    "code": "LParen",
    "display": "(",
    "errors": Array [],
    "hide": false,
    "type": "any",
  },
  Object {
    "attrs": undefined,
    "code": "NumberLiteral",
    "display": "1",
    "errors": Array [],
    "hide": false,
    "type": "number",
  },
  Object {
    "attrs": undefined,
    "code": "Comma",
    "display": ",",
    "errors": Array [],
    "hide": false,
    "type": "any",
  },
  Object {
    "attrs": undefined,
    "code": "Space",
    "display": " ",
    "errors": Array [],
    "hide": false,
    "type": "any",
  },
  Object {
    "attrs": Object {
      "id": "28e28190-63bd-4f70-aeca-26e72574c01a",
      "kind": "Spreadsheet",
      "name": "MySpreadsheet",
      "namespaceId": "57622108-1337-4edd-833a-2557835bcfe0",
    },
    "code": "Spreadsheet",
    "display": "MySpreadsheet",
    "errors": Array [],
    "hide": false,
    "type": "Spreadsheet",
  },
  Object {
    "attrs": undefined,
    "code": "Comma",
    "display": ",",
    "errors": Array [],
    "hide": false,
    "type": "any",
  },
  Object {
    "attrs": undefined,
    "code": "Space",
    "display": " ",
    "errors": Array [],
    "hide": false,
    "type": "any",
  },
  Object {
    "attrs": Object {
      "id": "28e28190-63bd-4f70-aeca-26e72574c01a",
      "kind": "Spreadsheet",
      "name": "MySpreadsheet",
      "namespaceId": "57622108-1337-4edd-833a-2557835bcfe0",
    },
    "code": "Spreadsheet",
    "display": "MySpreadsheet",
    "errors": Array [],
    "hide": false,
    "type": "Spreadsheet",
  },
  Object {
    "attrs": undefined,
    "code": "Dot",
    "display": ".",
    "errors": Array [],
    "hide": false,
    "type": "any",
  },
  Object {
    "attrs": Object {
      "id": "4e6f9adb-6f33-454e-9f9e-635dc98e3f28",
      "kind": "Column",
      "name": "second",
      "namespaceId": "28e28190-63bd-4f70-aeca-26e72574c01a",
    },
    "code": "Column",
    "display": "second",
    "errors": Array [],
    "hide": false,
    "type": "Column",
  },
  Object {
    "attrs": undefined,
    "code": "Comma",
    "display": ",",
    "errors": Array [],
    "hide": false,
    "type": "any",
  },
  Object {
    "attrs": undefined,
    "code": "Space",
    "display": " ",
    "errors": Array [],
    "hide": false,
    "type": "any",
  },
  Object {
    "attrs": undefined,
    "code": "BooleanLiteral",
    "display": "false",
    "errors": Array [],
    "hide": false,
    "type": "boolean",
  },
  Object {
    "attrs": undefined,
    "code": "RParen",
    "display": ")",
    "errors": Array [],
    "hide": false,
    "type": "string",
  },
]
`;

exports[`Spreadsheet Functions [VLOOKUP ok number] =VLOOKUP(1, #57622108-1337-4edd-833a-2557835bcfe0.MySpreadsheet, #57622108-1337-4edd-833a-2557835bcfe0.MySpreadsheet.second, false) 2`] = `
Array [
  Object {
    "definitionHandler": [Function],
    "event": [Function],
    "eventId": "57622108-1337-4edd-833a-2557835bcfe0,28e28190-63bd-4f70-aeca-26e72574c01a",
    "kind": "SpreadsheetName",
    "scope": Object {},
  },
  Object {
    "definitionHandler": [Function],
    "event": [Function],
    "eventId": "57622108-1337-4edd-833a-2557835bcfe0,28e28190-63bd-4f70-aeca-26e72574c01a",
    "kind": "Column",
    "scope": Object {
      "columns": Array [
        "4e6f9adb-6f33-454e-9f9e-635dc98e3f28",
      ],
    },
  },
]
`;

exports[`Spreadsheet Functions [VLOOKUP ok number] =VLOOKUP(1, #57622108-1337-4edd-833a-2557835bcfe0.MySpreadsheet, #57622108-1337-4edd-833a-2557835bcfe0.MySpreadsheet.second, true) 1`] = `
Array [
  Object {
    "attrs": undefined,
    "code": "Equal",
    "display": "=",
    "errors": Array [],
    "hide": false,
    "type": "any",
  },
  Object {
    "attrs": undefined,
    "code": "Function",
    "display": "VLOOKUP",
    "errors": Array [],
    "hide": false,
    "type": "any",
  },
  Object {
    "attrs": undefined,
    "code": "LParen",
    "display": "(",
    "errors": Array [],
    "hide": false,
    "type": "any",
  },
  Object {
    "attrs": undefined,
    "code": "NumberLiteral",
    "display": "1",
    "errors": Array [],
    "hide": false,
    "type": "number",
  },
  Object {
    "attrs": undefined,
    "code": "Comma",
    "display": ",",
    "errors": Array [],
    "hide": false,
    "type": "any",
  },
  Object {
    "attrs": undefined,
    "code": "Space",
    "display": " ",
    "errors": Array [],
    "hide": false,
    "type": "any",
  },
  Object {
    "attrs": Object {
      "id": "28e28190-63bd-4f70-aeca-26e72574c01a",
      "kind": "Spreadsheet",
      "name": "MySpreadsheet",
      "namespaceId": "57622108-1337-4edd-833a-2557835bcfe0",
    },
    "code": "Spreadsheet",
    "display": "MySpreadsheet",
    "errors": Array [],
    "hide": false,
    "type": "Spreadsheet",
  },
  Object {
    "attrs": undefined,
    "code": "Comma",
    "display": ",",
    "errors": Array [],
    "hide": false,
    "type": "any",
  },
  Object {
    "attrs": undefined,
    "code": "Space",
    "display": " ",
    "errors": Array [],
    "hide": false,
    "type": "any",
  },
  Object {
    "attrs": Object {
      "id": "28e28190-63bd-4f70-aeca-26e72574c01a",
      "kind": "Spreadsheet",
      "name": "MySpreadsheet",
      "namespaceId": "57622108-1337-4edd-833a-2557835bcfe0",
    },
    "code": "Spreadsheet",
    "display": "MySpreadsheet",
    "errors": Array [],
    "hide": false,
    "type": "Spreadsheet",
  },
  Object {
    "attrs": undefined,
    "code": "Dot",
    "display": ".",
    "errors": Array [],
    "hide": false,
    "type": "any",
  },
  Object {
    "attrs": Object {
      "id": "4e6f9adb-6f33-454e-9f9e-635dc98e3f28",
      "kind": "Column",
      "name": "second",
      "namespaceId": "28e28190-63bd-4f70-aeca-26e72574c01a",
    },
    "code": "Column",
    "display": "second",
    "errors": Array [],
    "hide": false,
    "type": "Column",
  },
  Object {
    "attrs": undefined,
    "code": "Comma",
    "display": ",",
    "errors": Array [],
    "hide": false,
    "type": "any",
  },
  Object {
    "attrs": undefined,
    "code": "Space",
    "display": " ",
    "errors": Array [],
    "hide": false,
    "type": "any",
  },
  Object {
    "attrs": undefined,
    "code": "BooleanLiteral",
    "display": "true",
    "errors": Array [],
    "hide": false,
    "type": "boolean",
  },
  Object {
    "attrs": undefined,
    "code": "RParen",
    "display": ")",
    "errors": Array [],
    "hide": false,
    "type": "string",
  },
]
`;

exports[`Spreadsheet Functions [VLOOKUP ok number] =VLOOKUP(1, #57622108-1337-4edd-833a-2557835bcfe0.MySpreadsheet, #57622108-1337-4edd-833a-2557835bcfe0.MySpreadsheet.second, true) 2`] = `
Array [
  Object {
    "definitionHandler": [Function],
    "event": [Function],
    "eventId": "57622108-1337-4edd-833a-2557835bcfe0,28e28190-63bd-4f70-aeca-26e72574c01a",
    "kind": "SpreadsheetName",
    "scope": Object {},
  },
  Object {
    "definitionHandler": [Function],
    "event": [Function],
    "eventId": "57622108-1337-4edd-833a-2557835bcfe0,28e28190-63bd-4f70-aeca-26e72574c01a",
    "kind": "Column",
    "scope": Object {
      "columns": Array [
        "4e6f9adb-6f33-454e-9f9e-635dc98e3f28",
      ],
    },
  },
]
`;

exports[`Spreadsheet Functions [VLOOKUP ok string] =VLOOKUP("1", #57622108-1337-4edd-833a-2557835bcfe0.MySpreadsheet, #57622108-1337-4edd-833a-2557835bcfe0.MySpreadsheet.second) 1`] = `
Array [
  Object {
    "attrs": undefined,
    "code": "Equal",
    "display": "=",
    "errors": Array [],
    "hide": false,
    "type": "any",
  },
  Object {
    "attrs": undefined,
    "code": "Function",
    "display": "VLOOKUP",
    "errors": Array [],
    "hide": false,
    "type": "any",
  },
  Object {
    "attrs": undefined,
    "code": "LParen",
    "display": "(",
    "errors": Array [],
    "hide": false,
    "type": "any",
  },
  Object {
    "attrs": undefined,
    "code": "StringLiteral",
    "display": "\\"1\\"",
    "errors": Array [],
    "hide": false,
    "type": "string",
  },
  Object {
    "attrs": undefined,
    "code": "Comma",
    "display": ",",
    "errors": Array [],
    "hide": false,
    "type": "any",
  },
  Object {
    "attrs": undefined,
    "code": "Space",
    "display": " ",
    "errors": Array [],
    "hide": false,
    "type": "any",
  },
  Object {
    "attrs": Object {
      "id": "28e28190-63bd-4f70-aeca-26e72574c01a",
      "kind": "Spreadsheet",
      "name": "MySpreadsheet",
      "namespaceId": "57622108-1337-4edd-833a-2557835bcfe0",
    },
    "code": "Spreadsheet",
    "display": "MySpreadsheet",
    "errors": Array [],
    "hide": false,
    "type": "Spreadsheet",
  },
  Object {
    "attrs": undefined,
    "code": "Comma",
    "display": ",",
    "errors": Array [],
    "hide": false,
    "type": "any",
  },
  Object {
    "attrs": undefined,
    "code": "Space",
    "display": " ",
    "errors": Array [],
    "hide": false,
    "type": "any",
  },
  Object {
    "attrs": Object {
      "id": "28e28190-63bd-4f70-aeca-26e72574c01a",
      "kind": "Spreadsheet",
      "name": "MySpreadsheet",
      "namespaceId": "57622108-1337-4edd-833a-2557835bcfe0",
    },
    "code": "Spreadsheet",
    "display": "MySpreadsheet",
    "errors": Array [],
    "hide": false,
    "type": "Spreadsheet",
  },
  Object {
    "attrs": undefined,
    "code": "Dot",
    "display": ".",
    "errors": Array [],
    "hide": false,
    "type": "any",
  },
  Object {
    "attrs": Object {
      "id": "4e6f9adb-6f33-454e-9f9e-635dc98e3f28",
      "kind": "Column",
      "name": "second",
      "namespaceId": "28e28190-63bd-4f70-aeca-26e72574c01a",
    },
    "code": "Column",
    "display": "second",
    "errors": Array [],
    "hide": false,
    "type": "Column",
  },
  Object {
    "attrs": undefined,
    "code": "RParen",
    "display": ")",
    "errors": Array [],
    "hide": false,
    "type": "string",
  },
]
`;

exports[`Spreadsheet Functions [VLOOKUP ok string] =VLOOKUP("1", #57622108-1337-4edd-833a-2557835bcfe0.MySpreadsheet, #57622108-1337-4edd-833a-2557835bcfe0.MySpreadsheet.second) 2`] = `
Array [
  Object {
    "definitionHandler": [Function],
    "event": [Function],
    "eventId": "57622108-1337-4edd-833a-2557835bcfe0,28e28190-63bd-4f70-aeca-26e72574c01a",
    "kind": "SpreadsheetName",
    "scope": Object {},
  },
  Object {
    "definitionHandler": [Function],
    "event": [Function],
    "eventId": "57622108-1337-4edd-833a-2557835bcfe0,28e28190-63bd-4f70-aeca-26e72574c01a",
    "kind": "Column",
    "scope": Object {
      "columns": Array [
        "4e6f9adb-6f33-454e-9f9e-635dc98e3f28",
      ],
    },
  },
]
`;

exports[`Spreadsheet Functions [XLOOKUP ok string] =XLOOKUP("1", #57622108-1337-4edd-833a-2557835bcfe0.MySpreadsheet.first, #57622108-1337-4edd-833a-2557835bcfe0.MySpreadsheet.second) 1`] = `
Array [
  Object {
    "attrs": undefined,
    "code": "Equal",
    "display": "=",
    "errors": Array [],
    "hide": false,
    "type": "any",
  },
  Object {
    "attrs": undefined,
    "code": "Function",
    "display": "XLOOKUP",
    "errors": Array [],
    "hide": false,
    "type": "any",
  },
  Object {
    "attrs": undefined,
    "code": "LParen",
    "display": "(",
    "errors": Array [],
    "hide": false,
    "type": "any",
  },
  Object {
    "attrs": undefined,
    "code": "StringLiteral",
    "display": "\\"1\\"",
    "errors": Array [],
    "hide": false,
    "type": "string",
  },
  Object {
    "attrs": undefined,
    "code": "Comma",
    "display": ",",
    "errors": Array [],
    "hide": false,
    "type": "any",
  },
  Object {
    "attrs": undefined,
    "code": "Space",
    "display": " ",
    "errors": Array [],
    "hide": false,
    "type": "any",
  },
  Object {
    "attrs": Object {
      "id": "28e28190-63bd-4f70-aeca-26e72574c01a",
      "kind": "Spreadsheet",
      "name": "MySpreadsheet",
      "namespaceId": "57622108-1337-4edd-833a-2557835bcfe0",
    },
    "code": "Spreadsheet",
    "display": "MySpreadsheet",
    "errors": Array [],
    "hide": false,
    "type": "Spreadsheet",
  },
  Object {
    "attrs": undefined,
    "code": "Dot",
    "display": ".",
    "errors": Array [],
    "hide": false,
    "type": "any",
  },
  Object {
    "attrs": Object {
      "id": "62d9a9ee-88a1-46c7-a929-4a0d9dc0a4d6",
      "kind": "Column",
      "name": "first",
      "namespaceId": "28e28190-63bd-4f70-aeca-26e72574c01a",
    },
    "code": "Column",
    "display": "first",
    "errors": Array [],
    "hide": false,
    "type": "Column",
  },
  Object {
    "attrs": undefined,
    "code": "Comma",
    "display": ",",
    "errors": Array [],
    "hide": false,
    "type": "any",
  },
  Object {
    "attrs": undefined,
    "code": "Space",
    "display": " ",
    "errors": Array [],
    "hide": false,
    "type": "any",
  },
  Object {
    "attrs": Object {
      "id": "28e28190-63bd-4f70-aeca-26e72574c01a",
      "kind": "Spreadsheet",
      "name": "MySpreadsheet",
      "namespaceId": "57622108-1337-4edd-833a-2557835bcfe0",
    },
    "code": "Spreadsheet",
    "display": "MySpreadsheet",
    "errors": Array [],
    "hide": false,
    "type": "Spreadsheet",
  },
  Object {
    "attrs": undefined,
    "code": "Dot",
    "display": ".",
    "errors": Array [],
    "hide": false,
    "type": "any",
  },
  Object {
    "attrs": Object {
      "id": "4e6f9adb-6f33-454e-9f9e-635dc98e3f28",
      "kind": "Column",
      "name": "second",
      "namespaceId": "28e28190-63bd-4f70-aeca-26e72574c01a",
    },
    "code": "Column",
    "display": "second",
    "errors": Array [],
    "hide": false,
    "type": "Column",
  },
  Object {
    "attrs": undefined,
    "code": "RParen",
    "display": ")",
    "errors": Array [],
    "hide": false,
    "type": "string",
  },
]
`;

exports[`Spreadsheet Functions [XLOOKUP ok string] =XLOOKUP("1", #57622108-1337-4edd-833a-2557835bcfe0.MySpreadsheet.first, #57622108-1337-4edd-833a-2557835bcfe0.MySpreadsheet.second) 2`] = `
Array [
  Object {
    "definitionHandler": [Function],
    "event": [Function],
    "eventId": "57622108-1337-4edd-833a-2557835bcfe0,28e28190-63bd-4f70-aeca-26e72574c01a",
    "kind": "SpreadsheetName",
    "scope": Object {},
  },
  Object {
    "definitionHandler": [Function],
    "event": [Function],
    "eventId": "57622108-1337-4edd-833a-2557835bcfe0,28e28190-63bd-4f70-aeca-26e72574c01a",
    "kind": "Column",
    "scope": Object {
      "columns": Array [
        "4e6f9adb-6f33-454e-9f9e-635dc98e3f28",
      ],
    },
  },
]
`;

exports[`Spreadsheet Functions [XLOOKUP ok string] =XLOOKUP("123", #57622108-1337-4edd-833a-2557835bcfe0.MySpreadsheet.first, #57622108-1337-4edd-833a-2557835bcfe0.MySpreadsheet.second, "100") 1`] = `
Array [
  Object {
    "attrs": undefined,
    "code": "Equal",
    "display": "=",
    "errors": Array [],
    "hide": false,
    "type": "any",
  },
  Object {
    "attrs": undefined,
    "code": "Function",
    "display": "XLOOKUP",
    "errors": Array [],
    "hide": false,
    "type": "any",
  },
  Object {
    "attrs": undefined,
    "code": "LParen",
    "display": "(",
    "errors": Array [],
    "hide": false,
    "type": "any",
  },
  Object {
    "attrs": undefined,
    "code": "StringLiteral",
    "display": "\\"123\\"",
    "errors": Array [],
    "hide": false,
    "type": "string",
  },
  Object {
    "attrs": undefined,
    "code": "Comma",
    "display": ",",
    "errors": Array [],
    "hide": false,
    "type": "any",
  },
  Object {
    "attrs": undefined,
    "code": "Space",
    "display": " ",
    "errors": Array [],
    "hide": false,
    "type": "any",
  },
  Object {
    "attrs": Object {
      "id": "28e28190-63bd-4f70-aeca-26e72574c01a",
      "kind": "Spreadsheet",
      "name": "MySpreadsheet",
      "namespaceId": "57622108-1337-4edd-833a-2557835bcfe0",
    },
    "code": "Spreadsheet",
    "display": "MySpreadsheet",
    "errors": Array [],
    "hide": false,
    "type": "Spreadsheet",
  },
  Object {
    "attrs": undefined,
    "code": "Dot",
    "display": ".",
    "errors": Array [],
    "hide": false,
    "type": "any",
  },
  Object {
    "attrs": Object {
      "id": "62d9a9ee-88a1-46c7-a929-4a0d9dc0a4d6",
      "kind": "Column",
      "name": "first",
      "namespaceId": "28e28190-63bd-4f70-aeca-26e72574c01a",
    },
    "code": "Column",
    "display": "first",
    "errors": Array [],
    "hide": false,
    "type": "Column",
  },
  Object {
    "attrs": undefined,
    "code": "Comma",
    "display": ",",
    "errors": Array [],
    "hide": false,
    "type": "any",
  },
  Object {
    "attrs": undefined,
    "code": "Space",
    "display": " ",
    "errors": Array [],
    "hide": false,
    "type": "any",
  },
  Object {
    "attrs": Object {
      "id": "28e28190-63bd-4f70-aeca-26e72574c01a",
      "kind": "Spreadsheet",
      "name": "MySpreadsheet",
      "namespaceId": "57622108-1337-4edd-833a-2557835bcfe0",
    },
    "code": "Spreadsheet",
    "display": "MySpreadsheet",
    "errors": Array [],
    "hide": false,
    "type": "Spreadsheet",
  },
  Object {
    "attrs": undefined,
    "code": "Dot",
    "display": ".",
    "errors": Array [],
    "hide": false,
    "type": "any",
  },
  Object {
    "attrs": Object {
      "id": "4e6f9adb-6f33-454e-9f9e-635dc98e3f28",
      "kind": "Column",
      "name": "second",
      "namespaceId": "28e28190-63bd-4f70-aeca-26e72574c01a",
    },
    "code": "Column",
    "display": "second",
    "errors": Array [],
    "hide": false,
    "type": "Column",
  },
  Object {
    "attrs": undefined,
    "code": "Comma",
    "display": ",",
    "errors": Array [],
    "hide": false,
    "type": "any",
  },
  Object {
    "attrs": undefined,
    "code": "Space",
    "display": " ",
    "errors": Array [],
    "hide": false,
    "type": "any",
  },
  Object {
    "attrs": undefined,
    "code": "StringLiteral",
    "display": "\\"100\\"",
    "errors": Array [],
    "hide": false,
    "type": "string",
  },
  Object {
    "attrs": undefined,
    "code": "RParen",
    "display": ")",
    "errors": Array [],
    "hide": false,
    "type": "string",
  },
]
`;

exports[`Spreadsheet Functions [XLOOKUP ok string] =XLOOKUP("123", #57622108-1337-4edd-833a-2557835bcfe0.MySpreadsheet.first, #57622108-1337-4edd-833a-2557835bcfe0.MySpreadsheet.second, "100") 2`] = `
Array [
  Object {
    "definitionHandler": [Function],
    "event": [Function],
    "eventId": "57622108-1337-4edd-833a-2557835bcfe0,28e28190-63bd-4f70-aeca-26e72574c01a",
    "kind": "SpreadsheetName",
    "scope": Object {},
  },
  Object {
    "definitionHandler": [Function],
    "event": [Function],
    "eventId": "57622108-1337-4edd-833a-2557835bcfe0,28e28190-63bd-4f70-aeca-26e72574c01a",
    "kind": "Column",
    "scope": Object {
      "columns": Array [
        "4e6f9adb-6f33-454e-9f9e-635dc98e3f28",
      ],
    },
  },
]
`;

exports[`Spreadsheet Functions [cell 1.[1] [A]] =#57622108-1337-4edd-833a-2557835bcfe0.MySpreadsheet[1]["A"] 1`] = `
Array [
  Object {
    "attrs": undefined,
    "code": "Equal",
    "display": "=",
    "errors": Array [],
    "hide": false,
    "type": "any",
  },
  Object {
    "attrs": Object {
      "id": "28e28190-63bd-4f70-aeca-26e72574c01a",
      "kind": "Spreadsheet",
      "name": "MySpreadsheet",
      "namespaceId": "57622108-1337-4edd-833a-2557835bcfe0",
    },
    "code": "Spreadsheet",
    "display": "MySpreadsheet",
    "errors": Array [],
    "hide": false,
    "type": "Spreadsheet",
  },
  Object {
    "attrs": undefined,
    "code": "LBracket",
    "display": "[",
    "errors": Array [],
    "hide": false,
    "type": "any",
  },
  Object {
    "attrs": undefined,
    "code": "NumberLiteral",
    "display": "1",
    "errors": Array [],
    "hide": false,
    "type": "number",
  },
  Object {
    "attrs": undefined,
    "code": "RBracket",
    "display": "]",
    "errors": Array [],
    "hide": false,
    "type": "any",
  },
  Object {
    "attrs": undefined,
    "code": "LBracket",
    "display": "[",
    "errors": Array [],
    "hide": false,
    "type": "any",
  },
  Object {
    "attrs": undefined,
    "code": "StringLiteral",
    "display": "\\"A\\"",
    "errors": Array [],
    "hide": false,
    "type": "string",
  },
  Object {
    "attrs": undefined,
    "code": "RBracket",
    "display": "]",
    "errors": Array [],
    "hide": false,
    "type": "any",
  },
]
`;

exports[`Spreadsheet Functions [cell 1.[1] [A]] =#57622108-1337-4edd-833a-2557835bcfe0.MySpreadsheet[1]["A"] 2`] = `
Array [
  Object {
    "definitionHandler": [Function],
    "event": [Function],
    "eventId": "57622108-1337-4edd-833a-2557835bcfe0,28e28190-63bd-4f70-aeca-26e72574c01a",
    "kind": "SpreadsheetName",
    "scope": Object {},
  },
  Object {
    "event": [Function],
    "eventId": "57622108-1337-4edd-833a-2557835bcfe0,28e28190-63bd-4f70-aeca-26e72574c01a",
    "kind": "Spreadsheet",
    "scope": Object {},
  },
]
`;

exports[`Spreadsheet Functions [cell 1.[1] [first]] =#57622108-1337-4edd-833a-2557835bcfe0.MySpreadsheet[1]["first"] 1`] = `
Array [
  Object {
    "attrs": undefined,
    "code": "Equal",
    "display": "=",
    "errors": Array [],
    "hide": false,
    "type": "any",
  },
  Object {
    "attrs": Object {
      "id": "28e28190-63bd-4f70-aeca-26e72574c01a",
      "kind": "Spreadsheet",
      "name": "MySpreadsheet",
      "namespaceId": "57622108-1337-4edd-833a-2557835bcfe0",
    },
    "code": "Spreadsheet",
    "display": "MySpreadsheet",
    "errors": Array [],
    "hide": false,
    "type": "Spreadsheet",
  },
  Object {
    "attrs": undefined,
    "code": "LBracket",
    "display": "[",
    "errors": Array [],
    "hide": false,
    "type": "any",
  },
  Object {
    "attrs": undefined,
    "code": "NumberLiteral",
    "display": "1",
    "errors": Array [],
    "hide": false,
    "type": "number",
  },
  Object {
    "attrs": undefined,
    "code": "RBracket",
    "display": "]",
    "errors": Array [],
    "hide": false,
    "type": "any",
  },
  Object {
    "attrs": undefined,
    "code": "LBracket",
    "display": "[",
    "errors": Array [],
    "hide": false,
    "type": "any",
  },
  Object {
    "attrs": undefined,
    "code": "StringLiteral",
    "display": "\\"first\\"",
    "errors": Array [],
    "hide": false,
    "type": "string",
  },
  Object {
    "attrs": undefined,
    "code": "RBracket",
    "display": "]",
    "errors": Array [],
    "hide": false,
    "type": "any",
  },
]
`;

exports[`Spreadsheet Functions [cell 1.[1] [first]] =#57622108-1337-4edd-833a-2557835bcfe0.MySpreadsheet[1]["first"] 2`] = `
Array [
  Object {
    "definitionHandler": [Function],
    "event": [Function],
    "eventId": "57622108-1337-4edd-833a-2557835bcfe0,28e28190-63bd-4f70-aeca-26e72574c01a",
    "kind": "SpreadsheetName",
    "scope": Object {},
  },
  Object {
    "event": [Function],
    "eventId": "57622108-1337-4edd-833a-2557835bcfe0,28e28190-63bd-4f70-aeca-26e72574c01a",
    "kind": "Spreadsheet",
    "scope": Object {},
  },
]
`;

exports[`Spreadsheet Functions [cell 1.[1] A] =#57622108-1337-4edd-833a-2557835bcfe0.MySpreadsheet[1].A 1`] = `
Array [
  Object {
    "attrs": undefined,
    "code": "Equal",
    "display": "=",
    "errors": Array [],
    "hide": false,
    "type": "any",
  },
  Object {
    "attrs": Object {
      "id": "28e28190-63bd-4f70-aeca-26e72574c01a",
      "kind": "Spreadsheet",
      "name": "MySpreadsheet",
      "namespaceId": "57622108-1337-4edd-833a-2557835bcfe0",
    },
    "code": "Spreadsheet",
    "display": "MySpreadsheet",
    "errors": Array [],
    "hide": false,
    "type": "Spreadsheet",
  },
  Object {
    "attrs": undefined,
    "code": "LBracket",
    "display": "[",
    "errors": Array [],
    "hide": false,
    "type": "any",
  },
  Object {
    "attrs": undefined,
    "code": "NumberLiteral",
    "display": "1",
    "errors": Array [],
    "hide": false,
    "type": "number",
  },
  Object {
    "attrs": undefined,
    "code": "RBracket",
    "display": "]",
    "errors": Array [],
    "hide": false,
    "type": "any",
  },
  Object {
    "attrs": undefined,
    "code": "parseErrorOther",
    "display": ".A",
    "errors": Array [
      Object {
        "message": "Not all input parsed: .",
        "type": "parse",
      },
    ],
    "hide": false,
    "type": "any",
  },
]
`;

exports[`Spreadsheet Functions [cell 1.[1] A] =#57622108-1337-4edd-833a-2557835bcfe0.MySpreadsheet[1].A 2`] = `
Array [
  Object {
    "definitionHandler": [Function],
    "event": [Function],
    "eventId": "57622108-1337-4edd-833a-2557835bcfe0,28e28190-63bd-4f70-aeca-26e72574c01a",
    "kind": "SpreadsheetName",
    "scope": Object {},
  },
  Object {
    "event": [Function],
    "eventId": "57622108-1337-4edd-833a-2557835bcfe0,28e28190-63bd-4f70-aeca-26e72574c01a",
    "kind": "Spreadsheet",
    "scope": Object {},
  },
]
`;

exports[`Spreadsheet Functions [cell 1.[1] first] =#57622108-1337-4edd-833a-2557835bcfe0.MySpreadsheet[1].first 1`] = `
Array [
  Object {
    "attrs": undefined,
    "code": "Equal",
    "display": "=",
    "errors": Array [],
    "hide": false,
    "type": "any",
  },
  Object {
    "attrs": Object {
      "id": "28e28190-63bd-4f70-aeca-26e72574c01a",
      "kind": "Spreadsheet",
      "name": "MySpreadsheet",
      "namespaceId": "57622108-1337-4edd-833a-2557835bcfe0",
    },
    "code": "Spreadsheet",
    "display": "MySpreadsheet",
    "errors": Array [],
    "hide": false,
    "type": "Spreadsheet",
  },
  Object {
    "attrs": undefined,
    "code": "LBracket",
    "display": "[",
    "errors": Array [],
    "hide": false,
    "type": "any",
  },
  Object {
    "attrs": undefined,
    "code": "NumberLiteral",
    "display": "1",
    "errors": Array [],
    "hide": false,
    "type": "number",
  },
  Object {
    "attrs": undefined,
    "code": "RBracket",
    "display": "]",
    "errors": Array [],
    "hide": false,
    "type": "any",
  },
  Object {
    "attrs": undefined,
    "code": "parseErrorOther",
    "display": ".first",
    "errors": Array [
      Object {
        "message": "Not all input parsed: .",
        "type": "parse",
      },
    ],
    "hide": false,
    "type": "any",
  },
]
`;

exports[`Spreadsheet Functions [cell 1.[1] first] =#57622108-1337-4edd-833a-2557835bcfe0.MySpreadsheet[1].first 2`] = `
Array [
  Object {
    "definitionHandler": [Function],
    "event": [Function],
    "eventId": "57622108-1337-4edd-833a-2557835bcfe0,28e28190-63bd-4f70-aeca-26e72574c01a",
    "kind": "SpreadsheetName",
    "scope": Object {},
  },
  Object {
    "event": [Function],
    "eventId": "57622108-1337-4edd-833a-2557835bcfe0,28e28190-63bd-4f70-aeca-26e72574c01a",
    "kind": "Spreadsheet",
    "scope": Object {},
  },
]
`;

exports[`Spreadsheet Functions [cell 1.1 [A]] =#57622108-1337-4edd-833a-2557835bcfe0.MySpreadsheet.1["A"] 1`] = `
Array [
  Object {
    "attrs": undefined,
    "code": "Equal",
    "display": "=",
    "errors": Array [],
    "hide": false,
    "type": "any",
  },
  Object {
    "attrs": Object {
      "id": "28e28190-63bd-4f70-aeca-26e72574c01a",
      "kind": "Spreadsheet",
      "name": "MySpreadsheet",
      "namespaceId": "57622108-1337-4edd-833a-2557835bcfe0",
    },
    "code": "Spreadsheet",
    "display": "MySpreadsheet",
    "errors": Array [],
    "hide": false,
    "type": "Spreadsheet",
  },
  Object {
    "attrs": undefined,
    "code": "Dot",
    "display": ".",
    "errors": Array [],
    "hide": false,
    "type": "any",
  },
  Object {
    "attrs": Object {
      "id": "ec4fdfe8-4a12-4a76-aeae-2dea0229e734",
      "kind": "LogicRow",
      "name": "1",
      "namespaceId": "28e28190-63bd-4f70-aeca-26e72574c01a",
    },
    "code": "Row",
    "display": "1",
    "errors": Array [],
    "hide": false,
    "type": "Row",
  },
  Object {
    "attrs": undefined,
    "code": "LBracket",
    "display": "[",
    "errors": Array [],
    "hide": false,
    "type": "any",
  },
  Object {
    "attrs": undefined,
    "code": "StringLiteral",
    "display": "\\"A\\"",
    "errors": Array [],
    "hide": false,
    "type": "string",
  },
  Object {
    "attrs": undefined,
    "code": "RBracket",
    "display": "]",
    "errors": Array [],
    "hide": false,
    "type": "any",
  },
]
`;

exports[`Spreadsheet Functions [cell 1.1 [A]] =#57622108-1337-4edd-833a-2557835bcfe0.MySpreadsheet.1["A"] 2`] = `
Array [
  Object {
    "definitionHandler": [Function],
    "event": [Function],
    "eventId": "57622108-1337-4edd-833a-2557835bcfe0,28e28190-63bd-4f70-aeca-26e72574c01a",
    "kind": "SpreadsheetName",
    "scope": Object {},
  },
  Object {
    "event": [Function],
    "eventId": "57622108-1337-4edd-833a-2557835bcfe0,28e28190-63bd-4f70-aeca-26e72574c01a",
    "kind": "Row",
    "scope": Object {
      "rows": Array [
        "1",
      ],
    },
  },
]
`;

exports[`Spreadsheet Functions [cell 1.1 [first]] =#57622108-1337-4edd-833a-2557835bcfe0.MySpreadsheet.1["first"] 1`] = `
Array [
  Object {
    "attrs": undefined,
    "code": "Equal",
    "display": "=",
    "errors": Array [],
    "hide": false,
    "type": "any",
  },
  Object {
    "attrs": Object {
      "id": "28e28190-63bd-4f70-aeca-26e72574c01a",
      "kind": "Spreadsheet",
      "name": "MySpreadsheet",
      "namespaceId": "57622108-1337-4edd-833a-2557835bcfe0",
    },
    "code": "Spreadsheet",
    "display": "MySpreadsheet",
    "errors": Array [],
    "hide": false,
    "type": "Spreadsheet",
  },
  Object {
    "attrs": undefined,
    "code": "Dot",
    "display": ".",
    "errors": Array [],
    "hide": false,
    "type": "any",
  },
  Object {
    "attrs": Object {
      "id": "ec4fdfe8-4a12-4a76-aeae-2dea0229e734",
      "kind": "LogicRow",
      "name": "1",
      "namespaceId": "28e28190-63bd-4f70-aeca-26e72574c01a",
    },
    "code": "Row",
    "display": "1",
    "errors": Array [],
    "hide": false,
    "type": "Row",
  },
  Object {
    "attrs": undefined,
    "code": "LBracket",
    "display": "[",
    "errors": Array [],
    "hide": false,
    "type": "any",
  },
  Object {
    "attrs": undefined,
    "code": "StringLiteral",
    "display": "\\"first\\"",
    "errors": Array [],
    "hide": false,
    "type": "string",
  },
  Object {
    "attrs": undefined,
    "code": "RBracket",
    "display": "]",
    "errors": Array [],
    "hide": false,
    "type": "any",
  },
]
`;

exports[`Spreadsheet Functions [cell 1.1 [first]] =#57622108-1337-4edd-833a-2557835bcfe0.MySpreadsheet.1["first"] 2`] = `
Array [
  Object {
    "definitionHandler": [Function],
    "event": [Function],
    "eventId": "57622108-1337-4edd-833a-2557835bcfe0,28e28190-63bd-4f70-aeca-26e72574c01a",
    "kind": "SpreadsheetName",
    "scope": Object {},
  },
  Object {
    "event": [Function],
    "eventId": "57622108-1337-4edd-833a-2557835bcfe0,28e28190-63bd-4f70-aeca-26e72574c01a",
    "kind": "Row",
    "scope": Object {
      "rows": Array [
        "1",
      ],
    },
  },
]
`;

exports[`Spreadsheet Functions [cell 1.1 A] =#57622108-1337-4edd-833a-2557835bcfe0.MySpreadsheet.1.A 1`] = `
Array [
  Object {
    "attrs": undefined,
    "code": "Equal",
    "display": "=",
    "errors": Array [],
    "hide": false,
    "type": "any",
  },
  Object {
    "attrs": Object {
      "id": "28e28190-63bd-4f70-aeca-26e72574c01a",
      "kind": "Spreadsheet",
      "name": "MySpreadsheet",
      "namespaceId": "57622108-1337-4edd-833a-2557835bcfe0",
    },
    "code": "Spreadsheet",
    "display": "MySpreadsheet",
    "errors": Array [],
    "hide": false,
    "type": "Spreadsheet",
  },
  Object {
    "attrs": undefined,
    "code": "Dot",
    "display": ".",
    "errors": Array [],
    "hide": false,
    "type": "any",
  },
  Object {
    "attrs": Object {
      "id": "ec4fdfe8-4a12-4a76-aeae-2dea0229e734",
      "kind": "LogicRow",
      "name": "1",
      "namespaceId": "28e28190-63bd-4f70-aeca-26e72574c01a",
    },
    "code": "Row",
    "display": "1",
    "errors": Array [],
    "hide": false,
    "type": "Row",
  },
  Object {
    "attrs": undefined,
    "code": "Dot",
    "display": ".",
    "errors": Array [],
    "hide": false,
    "type": "any",
  },
  Object {
    "attrs": undefined,
    "code": "FunctionName",
    "display": "A",
    "errors": Array [],
    "hide": false,
    "type": "string",
  },
]
`;

exports[`Spreadsheet Functions [cell 1.1 A] =#57622108-1337-4edd-833a-2557835bcfe0.MySpreadsheet.1.A 2`] = `
Array [
  Object {
    "definitionHandler": [Function],
    "event": [Function],
    "eventId": "57622108-1337-4edd-833a-2557835bcfe0,28e28190-63bd-4f70-aeca-26e72574c01a",
    "kind": "SpreadsheetName",
    "scope": Object {},
  },
  Object {
    "event": [Function],
    "eventId": "57622108-1337-4edd-833a-2557835bcfe0,28e28190-63bd-4f70-aeca-26e72574c01a",
    "kind": "Cell",
    "scope": Object {
      "columns": Array [
        "A",
      ],
      "rows": Array [
        "ec4fdfe8-4a12-4a76-aeae-2dea0229e734",
      ],
    },
  },
]
`;

exports[`Spreadsheet Functions [cell 1.1 first] =#57622108-1337-4edd-833a-2557835bcfe0.MySpreadsheet.1.first 1`] = `
Array [
  Object {
    "attrs": undefined,
    "code": "Equal",
    "display": "=",
    "errors": Array [],
    "hide": false,
    "type": "any",
  },
  Object {
    "attrs": Object {
      "id": "28e28190-63bd-4f70-aeca-26e72574c01a",
      "kind": "Spreadsheet",
      "name": "MySpreadsheet",
      "namespaceId": "57622108-1337-4edd-833a-2557835bcfe0",
    },
    "code": "Spreadsheet",
    "display": "MySpreadsheet",
    "errors": Array [],
    "hide": false,
    "type": "Spreadsheet",
  },
  Object {
    "attrs": undefined,
    "code": "Dot",
    "display": ".",
    "errors": Array [],
    "hide": false,
    "type": "any",
  },
  Object {
    "attrs": Object {
      "id": "ec4fdfe8-4a12-4a76-aeae-2dea0229e734",
      "kind": "LogicRow",
      "name": "1",
      "namespaceId": "28e28190-63bd-4f70-aeca-26e72574c01a",
    },
    "code": "Row",
    "display": "1",
    "errors": Array [],
    "hide": false,
    "type": "Row",
  },
  Object {
    "attrs": undefined,
    "code": "Dot",
    "display": ".",
    "errors": Array [],
    "hide": false,
    "type": "any",
  },
  Object {
    "attrs": undefined,
    "code": "FunctionName",
    "display": "first",
    "errors": Array [],
    "hide": false,
    "type": "string",
  },
]
`;

exports[`Spreadsheet Functions [cell 1.1 first] =#57622108-1337-4edd-833a-2557835bcfe0.MySpreadsheet.1.first 2`] = `
Array [
  Object {
    "definitionHandler": [Function],
    "event": [Function],
    "eventId": "57622108-1337-4edd-833a-2557835bcfe0,28e28190-63bd-4f70-aeca-26e72574c01a",
    "kind": "SpreadsheetName",
    "scope": Object {},
  },
  Object {
    "event": [Function],
    "eventId": "57622108-1337-4edd-833a-2557835bcfe0,28e28190-63bd-4f70-aeca-26e72574c01a",
    "kind": "Cell",
    "scope": Object {
      "columns": Array [
        "first",
      ],
      "rows": Array [
        "ec4fdfe8-4a12-4a76-aeae-2dea0229e734",
      ],
    },
  },
]
`;

exports[`Spreadsheet Functions [cell 2] =#57622108-1337-4edd-833a-2557835bcfe0.MySpreadsheet["first"][1] 1`] = `
Array [
  Object {
    "attrs": undefined,
    "code": "Equal",
    "display": "=",
    "errors": Array [],
    "hide": false,
    "type": "any",
  },
  Object {
    "attrs": Object {
      "id": "28e28190-63bd-4f70-aeca-26e72574c01a",
      "kind": "Spreadsheet",
      "name": "MySpreadsheet",
      "namespaceId": "57622108-1337-4edd-833a-2557835bcfe0",
    },
    "code": "Spreadsheet",
    "display": "MySpreadsheet",
    "errors": Array [],
    "hide": false,
    "type": "Spreadsheet",
  },
  Object {
    "attrs": undefined,
    "code": "LBracket",
    "display": "[",
    "errors": Array [],
    "hide": false,
    "type": "any",
  },
  Object {
    "attrs": undefined,
    "code": "StringLiteral",
    "display": "\\"first\\"",
    "errors": Array [],
    "hide": false,
    "type": "string",
  },
  Object {
    "attrs": undefined,
    "code": "RBracket",
    "display": "]",
    "errors": Array [],
    "hide": false,
    "type": "any",
  },
  Object {
    "attrs": undefined,
    "code": "LBracket",
    "display": "[",
    "errors": Array [],
    "hide": false,
    "type": "any",
  },
  Object {
    "attrs": undefined,
    "code": "NumberLiteral",
    "display": "1",
    "errors": Array [],
    "hide": false,
    "type": "number",
  },
  Object {
    "attrs": undefined,
    "code": "RBracket",
    "display": "]",
    "errors": Array [],
    "hide": false,
    "type": "any",
  },
]
`;

exports[`Spreadsheet Functions [cell 2] =#57622108-1337-4edd-833a-2557835bcfe0.MySpreadsheet["first"][1] 2`] = `
Array [
  Object {
    "definitionHandler": [Function],
    "event": [Function],
    "eventId": "57622108-1337-4edd-833a-2557835bcfe0,28e28190-63bd-4f70-aeca-26e72574c01a",
    "kind": "SpreadsheetName",
    "scope": Object {},
  },
  Object {
    "event": [Function],
    "eventId": "57622108-1337-4edd-833a-2557835bcfe0,28e28190-63bd-4f70-aeca-26e72574c01a",
    "kind": "Spreadsheet",
    "scope": Object {},
  },
]
`;

exports[`Spreadsheet Functions [cell access 2] =#57622108-1337-4edd-833a-2557835bcfe0.MySpreadsheet["first"][1] 1`] = `
Array [
  Object {
    "attrs": undefined,
    "code": "Equal",
    "display": "=",
    "errors": Array [],
    "hide": false,
    "type": "any",
  },
  Object {
    "attrs": Object {
      "id": "28e28190-63bd-4f70-aeca-26e72574c01a",
      "kind": "Spreadsheet",
      "name": "MySpreadsheet",
      "namespaceId": "57622108-1337-4edd-833a-2557835bcfe0",
    },
    "code": "Spreadsheet",
    "display": "MySpreadsheet",
    "errors": Array [],
    "hide": false,
    "type": "Spreadsheet",
  },
  Object {
    "attrs": undefined,
    "code": "LBracket",
    "display": "[",
    "errors": Array [],
    "hide": false,
    "type": "any",
  },
  Object {
    "attrs": undefined,
    "code": "StringLiteral",
    "display": "\\"first\\"",
    "errors": Array [],
    "hide": false,
    "type": "string",
  },
  Object {
    "attrs": undefined,
    "code": "RBracket",
    "display": "]",
    "errors": Array [],
    "hide": false,
    "type": "any",
  },
  Object {
    "attrs": undefined,
    "code": "LBracket",
    "display": "[",
    "errors": Array [],
    "hide": false,
    "type": "any",
  },
  Object {
    "attrs": undefined,
    "code": "NumberLiteral",
    "display": "1",
    "errors": Array [],
    "hide": false,
    "type": "number",
  },
  Object {
    "attrs": undefined,
    "code": "RBracket",
    "display": "]",
    "errors": Array [],
    "hide": false,
    "type": "any",
  },
]
`;

exports[`Spreadsheet Functions [cell access 2] =#57622108-1337-4edd-833a-2557835bcfe0.MySpreadsheet["first"][1] 2`] = `
Array [
  Object {
    "definitionHandler": [Function],
    "event": [Function],
    "eventId": "57622108-1337-4edd-833a-2557835bcfe0,28e28190-63bd-4f70-aeca-26e72574c01a",
    "kind": "SpreadsheetName",
    "scope": Object {},
  },
  Object {
    "event": [Function],
    "eventId": "57622108-1337-4edd-833a-2557835bcfe0,28e28190-63bd-4f70-aeca-26e72574c01a",
    "kind": "Spreadsheet",
    "scope": Object {},
  },
]
`;

exports[`Spreadsheet Functions [cell access] =#57622108-1337-4edd-833a-2557835bcfe0.MySpreadsheet."first"[1] 1`] = `
Array [
  Object {
    "attrs": undefined,
    "code": "Equal",
    "display": "=",
    "errors": Array [],
    "hide": false,
    "type": "any",
  },
  Object {
    "attrs": Object {
      "id": "28e28190-63bd-4f70-aeca-26e72574c01a",
      "kind": "Spreadsheet",
      "name": "MySpreadsheet",
      "namespaceId": "57622108-1337-4edd-833a-2557835bcfe0",
    },
    "code": "Spreadsheet",
    "display": "MySpreadsheet",
    "errors": Array [],
    "hide": false,
    "type": "Spreadsheet",
  },
  Object {
    "attrs": undefined,
    "code": "Dot",
    "display": ".",
    "errors": Array [],
    "hide": false,
    "type": "any",
  },
  Object {
    "attrs": Object {
      "id": "62d9a9ee-88a1-46c7-a929-4a0d9dc0a4d6",
      "kind": "Column",
      "name": "first",
      "namespaceId": "28e28190-63bd-4f70-aeca-26e72574c01a",
    },
    "code": "Column",
    "display": "first",
    "errors": Array [],
    "hide": false,
    "type": "Column",
  },
  Object {
    "attrs": undefined,
    "code": "LBracket",
    "display": "[",
    "errors": Array [],
    "hide": false,
    "type": "any",
  },
  Object {
    "attrs": undefined,
    "code": "NumberLiteral",
    "display": "1",
    "errors": Array [],
    "hide": false,
    "type": "number",
  },
  Object {
    "attrs": undefined,
    "code": "RBracket",
    "display": "]",
    "errors": Array [],
    "hide": false,
    "type": "any",
  },
]
`;

exports[`Spreadsheet Functions [cell access] =#57622108-1337-4edd-833a-2557835bcfe0.MySpreadsheet."first"[1] 2`] = `
Array [
  Object {
    "definitionHandler": [Function],
    "event": [Function],
    "eventId": "57622108-1337-4edd-833a-2557835bcfe0,28e28190-63bd-4f70-aeca-26e72574c01a",
    "kind": "SpreadsheetName",
    "scope": Object {},
  },
  Object {
    "definitionHandler": [Function],
    "event": [Function],
    "eventId": "57622108-1337-4edd-833a-2557835bcfe0,28e28190-63bd-4f70-aeca-26e72574c01a",
    "kind": "Column",
    "scope": Object {
      "columns": Array [
        "62d9a9ee-88a1-46c7-a929-4a0d9dc0a4d6",
      ],
    },
  },
]
`;

exports[`Spreadsheet Functions [cell error1] =#57622108-1337-4edd-833a-2557835bcfe0.MySpreadsheet."first".foobar 1`] = `
Array [
  Object {
    "attrs": undefined,
    "code": "Equal",
    "display": "=",
    "errors": Array [],
    "hide": false,
    "type": "any",
  },
  Object {
    "attrs": Object {
      "id": "28e28190-63bd-4f70-aeca-26e72574c01a",
      "kind": "Spreadsheet",
      "name": "MySpreadsheet",
      "namespaceId": "57622108-1337-4edd-833a-2557835bcfe0",
    },
    "code": "Spreadsheet",
    "display": "MySpreadsheet",
    "errors": Array [],
    "hide": false,
    "type": "Spreadsheet",
  },
  Object {
    "attrs": undefined,
    "code": "Dot",
    "display": ".",
    "errors": Array [],
    "hide": false,
    "type": "any",
  },
  Object {
    "attrs": Object {
      "id": "62d9a9ee-88a1-46c7-a929-4a0d9dc0a4d6",
      "kind": "Column",
      "name": "first",
      "namespaceId": "28e28190-63bd-4f70-aeca-26e72574c01a",
    },
    "code": "Column",
    "display": "first",
    "errors": Array [],
    "hide": false,
    "type": "Column",
  },
  Object {
    "attrs": undefined,
    "code": "Dot",
    "display": ".",
    "errors": Array [],
    "hide": false,
    "type": "any",
  },
  Object {
    "attrs": undefined,
    "code": "FunctionName",
    "display": "foobar",
    "errors": Array [
      Object {
        "message": "Need a number: foobar",
        "type": "syntax",
      },
    ],
    "hide": false,
    "type": "string",
  },
]
`;

exports[`Spreadsheet Functions [cell error1] =#57622108-1337-4edd-833a-2557835bcfe0.MySpreadsheet."first".foobar 2`] = `
Array [
  Object {
    "definitionHandler": [Function],
    "event": [Function],
    "eventId": "57622108-1337-4edd-833a-2557835bcfe0,28e28190-63bd-4f70-aeca-26e72574c01a",
    "kind": "SpreadsheetName",
    "scope": Object {},
  },
  Object {
    "event": [Function],
    "eventId": "57622108-1337-4edd-833a-2557835bcfe0,28e28190-63bd-4f70-aeca-26e72574c01a",
    "kind": "Cell",
    "scope": Object {
      "columns": Array [
        "62d9a9ee-88a1-46c7-a929-4a0d9dc0a4d6",
      ],
      "rows": Array [
        "foobar",
      ],
    },
  },
]
`;

exports[`Spreadsheet Functions [cell error2] =#57622108-1337-4edd-833a-2557835bcfe0.MySpreadsheet."first".100 1`] = `
Array [
  Object {
    "attrs": undefined,
    "code": "Equal",
    "display": "=",
    "errors": Array [],
    "hide": false,
    "type": "any",
  },
  Object {
    "attrs": Object {
      "id": "28e28190-63bd-4f70-aeca-26e72574c01a",
      "kind": "Spreadsheet",
      "name": "MySpreadsheet",
      "namespaceId": "57622108-1337-4edd-833a-2557835bcfe0",
    },
    "code": "Spreadsheet",
    "display": "MySpreadsheet",
    "errors": Array [],
    "hide": false,
    "type": "Spreadsheet",
  },
  Object {
    "attrs": undefined,
    "code": "Dot",
    "display": ".",
    "errors": Array [],
    "hide": false,
    "type": "any",
  },
  Object {
    "attrs": Object {
      "id": "62d9a9ee-88a1-46c7-a929-4a0d9dc0a4d6",
      "kind": "Column",
      "name": "first",
      "namespaceId": "28e28190-63bd-4f70-aeca-26e72574c01a",
    },
    "code": "Column",
    "display": "first",
    "errors": Array [],
    "hide": false,
    "type": "Column",
  },
  Object {
    "attrs": undefined,
    "code": "Dot",
    "display": ".",
    "errors": Array [],
    "hide": false,
    "type": "any",
  },
  Object {
    "attrs": undefined,
    "code": "NumberLiteral",
    "display": "100",
    "errors": Array [
      Object {
        "message": "Cell out of range: 3",
        "type": "runtime",
      },
    ],
    "hide": false,
    "type": "number",
  },
]
`;

exports[`Spreadsheet Functions [cell error2] =#57622108-1337-4edd-833a-2557835bcfe0.MySpreadsheet."first".100 2`] = `
Array [
  Object {
    "definitionHandler": [Function],
    "event": [Function],
    "eventId": "57622108-1337-4edd-833a-2557835bcfe0,28e28190-63bd-4f70-aeca-26e72574c01a",
    "kind": "SpreadsheetName",
    "scope": Object {},
  },
  Object {
    "event": [Function],
    "eventId": "57622108-1337-4edd-833a-2557835bcfe0,28e28190-63bd-4f70-aeca-26e72574c01a",
    "kind": "Cell",
    "scope": Object {
      "columns": Array [
        "62d9a9ee-88a1-46c7-a929-4a0d9dc0a4d6",
      ],
      "rows": Array [
        "100",
      ],
    },
  },
]
`;

exports[`Spreadsheet Functions [cell logic 2] =#57622108-1337-4edd-833a-2557835bcfe0.MySpreadsheet["A"][1] 1`] = `
Array [
  Object {
    "attrs": undefined,
    "code": "Equal",
    "display": "=",
    "errors": Array [],
    "hide": false,
    "type": "any",
  },
  Object {
    "attrs": Object {
      "id": "28e28190-63bd-4f70-aeca-26e72574c01a",
      "kind": "Spreadsheet",
      "name": "MySpreadsheet",
      "namespaceId": "57622108-1337-4edd-833a-2557835bcfe0",
    },
    "code": "Spreadsheet",
    "display": "MySpreadsheet",
    "errors": Array [],
    "hide": false,
    "type": "Spreadsheet",
  },
  Object {
    "attrs": undefined,
    "code": "LBracket",
    "display": "[",
    "errors": Array [],
    "hide": false,
    "type": "any",
  },
  Object {
    "attrs": undefined,
    "code": "StringLiteral",
    "display": "\\"A\\"",
    "errors": Array [],
    "hide": false,
    "type": "string",
  },
  Object {
    "attrs": undefined,
    "code": "RBracket",
    "display": "]",
    "errors": Array [],
    "hide": false,
    "type": "any",
  },
  Object {
    "attrs": undefined,
    "code": "LBracket",
    "display": "[",
    "errors": Array [],
    "hide": false,
    "type": "any",
  },
  Object {
    "attrs": undefined,
    "code": "NumberLiteral",
    "display": "1",
    "errors": Array [],
    "hide": false,
    "type": "number",
  },
  Object {
    "attrs": undefined,
    "code": "RBracket",
    "display": "]",
    "errors": Array [],
    "hide": false,
    "type": "any",
  },
]
`;

exports[`Spreadsheet Functions [cell logic 2] =#57622108-1337-4edd-833a-2557835bcfe0.MySpreadsheet["A"][1] 2`] = `
Array [
  Object {
    "definitionHandler": [Function],
    "event": [Function],
    "eventId": "57622108-1337-4edd-833a-2557835bcfe0,28e28190-63bd-4f70-aeca-26e72574c01a",
    "kind": "SpreadsheetName",
    "scope": Object {},
  },
  Object {
    "event": [Function],
    "eventId": "57622108-1337-4edd-833a-2557835bcfe0,28e28190-63bd-4f70-aeca-26e72574c01a",
    "kind": "Spreadsheet",
    "scope": Object {},
  },
]
`;

exports[`Spreadsheet Functions [cell logic 3] =#57622108-1337-4edd-833a-2557835bcfe0.MySpreadsheet["A"].1 1`] = `
Array [
  Object {
    "attrs": undefined,
    "code": "Equal",
    "display": "=",
    "errors": Array [],
    "hide": false,
    "type": "any",
  },
  Object {
    "attrs": Object {
      "id": "28e28190-63bd-4f70-aeca-26e72574c01a",
      "kind": "Spreadsheet",
      "name": "MySpreadsheet",
      "namespaceId": "57622108-1337-4edd-833a-2557835bcfe0",
    },
    "code": "Spreadsheet",
    "display": "MySpreadsheet",
    "errors": Array [],
    "hide": false,
    "type": "Spreadsheet",
  },
  Object {
    "attrs": undefined,
    "code": "LBracket",
    "display": "[",
    "errors": Array [],
    "hide": false,
    "type": "any",
  },
  Object {
    "attrs": undefined,
    "code": "StringLiteral",
    "display": "\\"A\\"",
    "errors": Array [],
    "hide": false,
    "type": "string",
  },
  Object {
    "attrs": undefined,
    "code": "RBracket",
    "display": "]",
    "errors": Array [],
    "hide": false,
    "type": "any",
  },
  Object {
    "attrs": undefined,
    "code": "parseErrorOther",
    "display": ".1",
    "errors": Array [
      Object {
        "message": "Not all input parsed: .",
        "type": "parse",
      },
    ],
    "hide": false,
    "type": "any",
  },
]
`;

exports[`Spreadsheet Functions [cell logic 3] =#57622108-1337-4edd-833a-2557835bcfe0.MySpreadsheet["A"].1 2`] = `
Array [
  Object {
    "definitionHandler": [Function],
    "event": [Function],
    "eventId": "57622108-1337-4edd-833a-2557835bcfe0,28e28190-63bd-4f70-aeca-26e72574c01a",
    "kind": "SpreadsheetName",
    "scope": Object {},
  },
  Object {
    "event": [Function],
    "eventId": "57622108-1337-4edd-833a-2557835bcfe0,28e28190-63bd-4f70-aeca-26e72574c01a",
    "kind": "Spreadsheet",
    "scope": Object {},
  },
]
`;

exports[`Spreadsheet Functions [cell logic] =#57622108-1337-4edd-833a-2557835bcfe0.MySpreadsheet.A.1 1`] = `
Array [
  Object {
    "attrs": undefined,
    "code": "Equal",
    "display": "=",
    "errors": Array [],
    "hide": false,
    "type": "any",
  },
  Object {
    "attrs": Object {
      "id": "28e28190-63bd-4f70-aeca-26e72574c01a",
      "kind": "Spreadsheet",
      "name": "MySpreadsheet",
      "namespaceId": "57622108-1337-4edd-833a-2557835bcfe0",
    },
    "code": "Spreadsheet",
    "display": "MySpreadsheet",
    "errors": Array [],
    "hide": false,
    "type": "Spreadsheet",
  },
  Object {
    "attrs": undefined,
    "code": "Dot",
    "display": ".",
    "errors": Array [],
    "hide": false,
    "type": "any",
  },
  Object {
    "attrs": Object {
      "id": "62d9a9ee-88a1-46c7-a929-4a0d9dc0a4d6",
      "kind": "LogicColumn",
      "name": "A",
      "namespaceId": "28e28190-63bd-4f70-aeca-26e72574c01a",
    },
    "code": "Column",
    "display": "A",
    "errors": Array [],
    "hide": false,
    "type": "Column",
  },
  Object {
    "attrs": undefined,
    "code": "Dot",
    "display": ".",
    "errors": Array [],
    "hide": false,
    "type": "any",
  },
  Object {
    "attrs": undefined,
    "code": "NumberLiteral",
    "display": "1",
    "errors": Array [],
    "hide": false,
    "type": "number",
  },
]
`;

exports[`Spreadsheet Functions [cell logic] =#57622108-1337-4edd-833a-2557835bcfe0.MySpreadsheet.A.1 2`] = `
Array [
  Object {
    "definitionHandler": [Function],
    "event": [Function],
    "eventId": "57622108-1337-4edd-833a-2557835bcfe0,28e28190-63bd-4f70-aeca-26e72574c01a",
    "kind": "SpreadsheetName",
    "scope": Object {},
  },
  Object {
    "event": [Function],
    "eventId": "57622108-1337-4edd-833a-2557835bcfe0,28e28190-63bd-4f70-aeca-26e72574c01a",
    "kind": "Cell",
    "scope": Object {
      "columns": Array [
        "62d9a9ee-88a1-46c7-a929-4a0d9dc0a4d6",
      ],
      "rows": Array [
        "1",
      ],
    },
  },
]
`;

exports[`Spreadsheet Functions [cell] =#57622108-1337-4edd-833a-2557835bcfe0.MySpreadsheet."first".1 1`] = `
Array [
  Object {
    "attrs": undefined,
    "code": "Equal",
    "display": "=",
    "errors": Array [],
    "hide": false,
    "type": "any",
  },
  Object {
    "attrs": Object {
      "id": "28e28190-63bd-4f70-aeca-26e72574c01a",
      "kind": "Spreadsheet",
      "name": "MySpreadsheet",
      "namespaceId": "57622108-1337-4edd-833a-2557835bcfe0",
    },
    "code": "Spreadsheet",
    "display": "MySpreadsheet",
    "errors": Array [],
    "hide": false,
    "type": "Spreadsheet",
  },
  Object {
    "attrs": undefined,
    "code": "Dot",
    "display": ".",
    "errors": Array [],
    "hide": false,
    "type": "any",
  },
  Object {
    "attrs": Object {
      "id": "62d9a9ee-88a1-46c7-a929-4a0d9dc0a4d6",
      "kind": "Column",
      "name": "first",
      "namespaceId": "28e28190-63bd-4f70-aeca-26e72574c01a",
    },
    "code": "Column",
    "display": "first",
    "errors": Array [],
    "hide": false,
    "type": "Column",
  },
  Object {
    "attrs": undefined,
    "code": "Dot",
    "display": ".",
    "errors": Array [],
    "hide": false,
    "type": "any",
  },
  Object {
    "attrs": undefined,
    "code": "NumberLiteral",
    "display": "1",
    "errors": Array [],
    "hide": false,
    "type": "number",
  },
]
`;

exports[`Spreadsheet Functions [cell] =#57622108-1337-4edd-833a-2557835bcfe0.MySpreadsheet."first".1 2`] = `
Array [
  Object {
    "definitionHandler": [Function],
    "event": [Function],
    "eventId": "57622108-1337-4edd-833a-2557835bcfe0,28e28190-63bd-4f70-aeca-26e72574c01a",
    "kind": "SpreadsheetName",
    "scope": Object {},
  },
  Object {
    "event": [Function],
    "eventId": "57622108-1337-4edd-833a-2557835bcfe0,28e28190-63bd-4f70-aeca-26e72574c01a",
    "kind": "Cell",
    "scope": Object {
      "columns": Array [
        "62d9a9ee-88a1-46c7-a929-4a0d9dc0a4d6",
      ],
      "rows": Array [
        "1",
      ],
    },
  },
]
`;

exports[`Spreadsheet Functions [column 2] =#57622108-1337-4edd-833a-2557835bcfe0.MySpreadsheet["first"] 1`] = `
Array [
  Object {
    "attrs": undefined,
    "code": "Equal",
    "display": "=",
    "errors": Array [],
    "hide": false,
    "type": "any",
  },
  Object {
    "attrs": Object {
      "id": "28e28190-63bd-4f70-aeca-26e72574c01a",
      "kind": "Spreadsheet",
      "name": "MySpreadsheet",
      "namespaceId": "57622108-1337-4edd-833a-2557835bcfe0",
    },
    "code": "Spreadsheet",
    "display": "MySpreadsheet",
    "errors": Array [],
    "hide": false,
    "type": "Spreadsheet",
  },
  Object {
    "attrs": undefined,
    "code": "LBracket",
    "display": "[",
    "errors": Array [],
    "hide": false,
    "type": "any",
  },
  Object {
    "attrs": undefined,
    "code": "StringLiteral",
    "display": "\\"first\\"",
    "errors": Array [],
    "hide": false,
    "type": "string",
  },
  Object {
    "attrs": undefined,
    "code": "RBracket",
    "display": "]",
    "errors": Array [],
    "hide": false,
    "type": "any",
  },
]
`;

exports[`Spreadsheet Functions [column 2] =#57622108-1337-4edd-833a-2557835bcfe0.MySpreadsheet["first"] 2`] = `
Array [
  Object {
    "definitionHandler": [Function],
    "event": [Function],
    "eventId": "57622108-1337-4edd-833a-2557835bcfe0,28e28190-63bd-4f70-aeca-26e72574c01a",
    "kind": "SpreadsheetName",
    "scope": Object {},
  },
  Object {
    "event": [Function],
    "eventId": "57622108-1337-4edd-833a-2557835bcfe0,28e28190-63bd-4f70-aeca-26e72574c01a",
    "kind": "Spreadsheet",
    "scope": Object {},
  },
]
`;

exports[`Spreadsheet Functions [column logic] =#57622108-1337-4edd-833a-2557835bcfe0.MySpreadsheet.A 1`] = `
Array [
  Object {
    "attrs": undefined,
    "code": "Equal",
    "display": "=",
    "errors": Array [],
    "hide": false,
    "type": "any",
  },
  Object {
    "attrs": Object {
      "id": "28e28190-63bd-4f70-aeca-26e72574c01a",
      "kind": "Spreadsheet",
      "name": "MySpreadsheet",
      "namespaceId": "57622108-1337-4edd-833a-2557835bcfe0",
    },
    "code": "Spreadsheet",
    "display": "MySpreadsheet",
    "errors": Array [],
    "hide": false,
    "type": "Spreadsheet",
  },
  Object {
    "attrs": undefined,
    "code": "Dot",
    "display": ".",
    "errors": Array [],
    "hide": false,
    "type": "any",
  },
  Object {
    "attrs": Object {
      "id": "62d9a9ee-88a1-46c7-a929-4a0d9dc0a4d6",
      "kind": "LogicColumn",
      "name": "A",
      "namespaceId": "28e28190-63bd-4f70-aeca-26e72574c01a",
    },
    "code": "Column",
    "display": "A",
    "errors": Array [],
    "hide": false,
    "type": "Column",
  },
]
`;

exports[`Spreadsheet Functions [column logic] =#57622108-1337-4edd-833a-2557835bcfe0.MySpreadsheet.A 2`] = `
Array [
  Object {
    "definitionHandler": [Function],
    "event": [Function],
    "eventId": "57622108-1337-4edd-833a-2557835bcfe0,28e28190-63bd-4f70-aeca-26e72574c01a",
    "kind": "SpreadsheetName",
    "scope": Object {},
  },
  Object {
    "definitionHandler": [Function],
    "event": [Function],
    "eventId": "57622108-1337-4edd-833a-2557835bcfe0,28e28190-63bd-4f70-aeca-26e72574c01a",
    "kind": "Column",
    "scope": Object {
      "columns": Array [
        "A",
      ],
    },
  },
]
`;

exports[`Spreadsheet Functions [column unknown] =#57622108-1337-4edd-833a-2557835bcfe0.MySpreadsheet.Z 1`] = `
Array [
  Object {
    "attrs": undefined,
    "code": "Equal",
    "display": "=",
    "errors": Array [],
    "hide": false,
    "type": "any",
  },
  Object {
    "attrs": Object {
      "id": "28e28190-63bd-4f70-aeca-26e72574c01a",
      "kind": "Spreadsheet",
      "name": "MySpreadsheet",
      "namespaceId": "57622108-1337-4edd-833a-2557835bcfe0",
    },
    "code": "Spreadsheet",
    "display": "MySpreadsheet",
    "errors": Array [],
    "hide": false,
    "type": "Spreadsheet",
  },
  Object {
    "attrs": undefined,
    "code": "Dot",
    "display": ".",
    "errors": Array [],
    "hide": false,
    "type": "any",
  },
  Object {
    "attrs": undefined,
    "code": "FunctionName",
    "display": "Z",
    "errors": Array [
      Object {
        "message": "Column \\"Z\\" not found",
        "type": "deps",
      },
    ],
    "hide": false,
    "type": "string",
  },
]
`;

exports[`Spreadsheet Functions [column unknown] =#57622108-1337-4edd-833a-2557835bcfe0.MySpreadsheet.Z 2`] = `
Array [
  Object {
    "definitionHandler": [Function],
    "event": [Function],
    "eventId": "57622108-1337-4edd-833a-2557835bcfe0,28e28190-63bd-4f70-aeca-26e72574c01a",
    "kind": "SpreadsheetName",
    "scope": Object {},
  },
  Object {
    "event": [Function],
    "eventId": "57622108-1337-4edd-833a-2557835bcfe0,28e28190-63bd-4f70-aeca-26e72574c01a",
    "kind": "Column",
    "scope": Object {
      "columns": Array [
        "Z",
      ],
    },
  },
]
`;

exports[`Spreadsheet Functions [column] =#57622108-1337-4edd-833a-2557835bcfe0.MySpreadsheet."first" 1`] = `
Array [
  Object {
    "attrs": undefined,
    "code": "Equal",
    "display": "=",
    "errors": Array [],
    "hide": false,
    "type": "any",
  },
  Object {
    "attrs": Object {
      "id": "28e28190-63bd-4f70-aeca-26e72574c01a",
      "kind": "Spreadsheet",
      "name": "MySpreadsheet",
      "namespaceId": "57622108-1337-4edd-833a-2557835bcfe0",
    },
    "code": "Spreadsheet",
    "display": "MySpreadsheet",
    "errors": Array [],
    "hide": false,
    "type": "Spreadsheet",
  },
  Object {
    "attrs": undefined,
    "code": "Dot",
    "display": ".",
    "errors": Array [],
    "hide": false,
    "type": "any",
  },
  Object {
    "attrs": Object {
      "id": "62d9a9ee-88a1-46c7-a929-4a0d9dc0a4d6",
      "kind": "Column",
      "name": "first",
      "namespaceId": "28e28190-63bd-4f70-aeca-26e72574c01a",
    },
    "code": "Column",
    "display": "first",
    "errors": Array [],
    "hide": false,
    "type": "Column",
  },
]
`;

exports[`Spreadsheet Functions [column] =#57622108-1337-4edd-833a-2557835bcfe0.MySpreadsheet."first" 2`] = `
Array [
  Object {
    "definitionHandler": [Function],
    "event": [Function],
    "eventId": "57622108-1337-4edd-833a-2557835bcfe0,28e28190-63bd-4f70-aeca-26e72574c01a",
    "kind": "SpreadsheetName",
    "scope": Object {},
  },
  Object {
    "definitionHandler": [Function],
    "event": [Function],
    "eventId": "57622108-1337-4edd-833a-2557835bcfe0,28e28190-63bd-4f70-aeca-26e72574c01a",
    "kind": "Column",
    "scope": Object {
      "columns": Array [
        "62d9a9ee-88a1-46c7-a929-4a0d9dc0a4d6",
      ],
    },
  },
]
`;

exports[`Spreadsheet Functions [exactin column true] ="foo" in #57622108-1337-4edd-833a-2557835bcfe0.MySpreadsheet.third 1`] = `
Array [
  Object {
    "attrs": undefined,
    "code": "Equal",
    "display": "=",
    "errors": Array [],
    "hide": false,
    "type": "any",
  },
  Object {
    "attrs": undefined,
    "code": "StringLiteral",
    "display": "\\"foo\\"",
    "errors": Array [],
    "hide": false,
    "type": "string",
  },
  Object {
    "attrs": undefined,
    "code": "Space",
    "display": " ",
    "errors": Array [],
    "hide": false,
    "type": "any",
  },
  Object {
    "attrs": undefined,
    "code": "In",
    "display": "in",
    "errors": Array [],
    "hide": false,
    "type": "boolean",
  },
  Object {
    "attrs": undefined,
    "code": "Space",
    "display": " ",
    "errors": Array [],
    "hide": false,
    "type": "any",
  },
  Object {
    "attrs": Object {
      "id": "28e28190-63bd-4f70-aeca-26e72574c01a",
      "kind": "Spreadsheet",
      "name": "MySpreadsheet",
      "namespaceId": "57622108-1337-4edd-833a-2557835bcfe0",
    },
    "code": "Spreadsheet",
    "display": "MySpreadsheet",
    "errors": Array [],
    "hide": false,
    "type": "Spreadsheet",
  },
  Object {
    "attrs": undefined,
    "code": "Dot",
    "display": ".",
    "errors": Array [],
    "hide": false,
    "type": "any",
  },
  Object {
    "attrs": Object {
      "id": "2723b7d9-22ce-4d93-b2ef-7cce1b122d64",
      "kind": "Column",
      "name": "third",
      "namespaceId": "28e28190-63bd-4f70-aeca-26e72574c01a",
    },
    "code": "Column",
    "display": "third",
    "errors": Array [],
    "hide": false,
    "type": "Column",
  },
]
`;

exports[`Spreadsheet Functions [exactin column true] ="foo" in #57622108-1337-4edd-833a-2557835bcfe0.MySpreadsheet.third 2`] = `
Array [
  Object {
    "definitionHandler": [Function],
    "event": [Function],
    "eventId": "57622108-1337-4edd-833a-2557835bcfe0,28e28190-63bd-4f70-aeca-26e72574c01a",
    "kind": "SpreadsheetName",
    "scope": Object {},
  },
  Object {
    "definitionHandler": [Function],
    "event": [Function],
    "eventId": "57622108-1337-4edd-833a-2557835bcfe0,28e28190-63bd-4f70-aeca-26e72574c01a",
    "kind": "Column",
    "scope": Object {
      "columns": Array [
        "2723b7d9-22ce-4d93-b2ef-7cce1b122d64",
      ],
    },
  },
]
`;

exports[`Spreadsheet Functions [in column false] =4 in #57622108-1337-4edd-833a-2557835bcfe0.MySpreadsheet.second 1`] = `
Array [
  Object {
    "attrs": undefined,
    "code": "Equal",
    "display": "=",
    "errors": Array [],
    "hide": false,
    "type": "any",
  },
  Object {
    "attrs": undefined,
    "code": "NumberLiteral",
    "display": "4",
    "errors": Array [],
    "hide": false,
    "type": "number",
  },
  Object {
    "attrs": undefined,
    "code": "Space",
    "display": " ",
    "errors": Array [],
    "hide": false,
    "type": "any",
  },
  Object {
    "attrs": undefined,
    "code": "In",
    "display": "in",
    "errors": Array [],
    "hide": false,
    "type": "boolean",
  },
  Object {
    "attrs": undefined,
    "code": "Space",
    "display": " ",
    "errors": Array [],
    "hide": false,
    "type": "any",
  },
  Object {
    "attrs": Object {
      "id": "28e28190-63bd-4f70-aeca-26e72574c01a",
      "kind": "Spreadsheet",
      "name": "MySpreadsheet",
      "namespaceId": "57622108-1337-4edd-833a-2557835bcfe0",
    },
    "code": "Spreadsheet",
    "display": "MySpreadsheet",
    "errors": Array [],
    "hide": false,
    "type": "Spreadsheet",
  },
  Object {
    "attrs": undefined,
    "code": "Dot",
    "display": ".",
    "errors": Array [],
    "hide": false,
    "type": "any",
  },
  Object {
    "attrs": Object {
      "id": "4e6f9adb-6f33-454e-9f9e-635dc98e3f28",
      "kind": "Column",
      "name": "second",
      "namespaceId": "28e28190-63bd-4f70-aeca-26e72574c01a",
    },
    "code": "Column",
    "display": "second",
    "errors": Array [],
    "hide": false,
    "type": "Column",
  },
]
`;

exports[`Spreadsheet Functions [in column false] =4 in #57622108-1337-4edd-833a-2557835bcfe0.MySpreadsheet.second 2`] = `
Array [
  Object {
    "definitionHandler": [Function],
    "event": [Function],
    "eventId": "57622108-1337-4edd-833a-2557835bcfe0,28e28190-63bd-4f70-aeca-26e72574c01a",
    "kind": "SpreadsheetName",
    "scope": Object {},
  },
  Object {
    "definitionHandler": [Function],
    "event": [Function],
    "eventId": "57622108-1337-4edd-833a-2557835bcfe0,28e28190-63bd-4f70-aeca-26e72574c01a",
    "kind": "Column",
    "scope": Object {
      "columns": Array [
        "4e6f9adb-6f33-454e-9f9e-635dc98e3f28",
      ],
    },
  },
]
`;

exports[`Spreadsheet Functions [in column true] =3 in #57622108-1337-4edd-833a-2557835bcfe0.MySpreadsheet."second" 1`] = `
Array [
  Object {
    "attrs": undefined,
    "code": "Equal",
    "display": "=",
    "errors": Array [],
    "hide": false,
    "type": "any",
  },
  Object {
    "attrs": undefined,
    "code": "NumberLiteral",
    "display": "3",
    "errors": Array [],
    "hide": false,
    "type": "number",
  },
  Object {
    "attrs": undefined,
    "code": "In",
    "display": "in",
    "errors": Array [],
    "hide": false,
    "type": "boolean",
  },
  Object {
    "attrs": Object {
      "id": "28e28190-63bd-4f70-aeca-26e72574c01a",
      "kind": "Spreadsheet",
      "name": "MySpreadsheet",
      "namespaceId": "57622108-1337-4edd-833a-2557835bcfe0",
    },
    "code": "Spreadsheet",
    "display": "MySpreadsheet",
    "errors": Array [],
    "hide": false,
    "type": "Spreadsheet",
  },
  Object {
    "attrs": undefined,
    "code": "Dot",
    "display": ".",
    "errors": Array [],
    "hide": false,
    "type": "any",
  },
  Object {
    "attrs": Object {
      "id": "4e6f9adb-6f33-454e-9f9e-635dc98e3f28",
      "kind": "Column",
      "name": "second",
      "namespaceId": "28e28190-63bd-4f70-aeca-26e72574c01a",
    },
    "code": "Column",
    "display": "second",
    "errors": Array [],
    "hide": false,
    "type": "Column",
  },
]
`;

exports[`Spreadsheet Functions [in column true] =3 in #57622108-1337-4edd-833a-2557835bcfe0.MySpreadsheet."second" 2`] = `
Array [
  Object {
    "definitionHandler": [Function],
    "event": [Function],
    "eventId": "57622108-1337-4edd-833a-2557835bcfe0,28e28190-63bd-4f70-aeca-26e72574c01a",
    "kind": "SpreadsheetName",
    "scope": Object {},
  },
  Object {
    "definitionHandler": [Function],
    "event": [Function],
    "eventId": "57622108-1337-4edd-833a-2557835bcfe0,28e28190-63bd-4f70-aeca-26e72574c01a",
    "kind": "Column",
    "scope": Object {
      "columns": Array [
        "4e6f9adb-6f33-454e-9f9e-635dc98e3f28",
      ],
    },
  },
]
`;

exports[`Spreadsheet Functions [in spreadsheet false] =4 in #57622108-1337-4edd-833a-2557835bcfe0.MySpreadsheet 1`] = `
Array [
  Object {
    "attrs": undefined,
    "code": "Equal",
    "display": "=",
    "errors": Array [],
    "hide": false,
    "type": "any",
  },
  Object {
    "attrs": undefined,
    "code": "NumberLiteral",
    "display": "4",
    "errors": Array [],
    "hide": false,
    "type": "number",
  },
  Object {
    "attrs": undefined,
    "code": "Space",
    "display": " ",
    "errors": Array [],
    "hide": false,
    "type": "any",
  },
  Object {
    "attrs": undefined,
    "code": "In",
    "display": "in",
    "errors": Array [],
    "hide": false,
    "type": "boolean",
  },
  Object {
    "attrs": undefined,
    "code": "Space",
    "display": " ",
    "errors": Array [],
    "hide": false,
    "type": "any",
  },
  Object {
    "attrs": Object {
      "id": "28e28190-63bd-4f70-aeca-26e72574c01a",
      "kind": "Spreadsheet",
      "name": "MySpreadsheet",
      "namespaceId": "57622108-1337-4edd-833a-2557835bcfe0",
    },
    "code": "Spreadsheet",
    "display": "MySpreadsheet",
    "errors": Array [],
    "hide": false,
    "type": "Spreadsheet",
  },
]
`;

exports[`Spreadsheet Functions [in spreadsheet false] =4 in #57622108-1337-4edd-833a-2557835bcfe0.MySpreadsheet 2`] = `
Array [
  Object {
    "definitionHandler": [Function],
    "event": [Function],
    "eventId": "57622108-1337-4edd-833a-2557835bcfe0,28e28190-63bd-4f70-aeca-26e72574c01a",
    "kind": "SpreadsheetName",
    "scope": Object {},
  },
  Object {
    "event": [Function],
    "eventId": "57622108-1337-4edd-833a-2557835bcfe0,28e28190-63bd-4f70-aeca-26e72574c01a",
    "kind": "Spreadsheet",
    "scope": Object {},
  },
]
`;

exports[`Spreadsheet Functions [in spreadsheet true] =3 in #57622108-1337-4edd-833a-2557835bcfe0.MySpreadsheet 1`] = `
Array [
  Object {
    "attrs": undefined,
    "code": "Equal",
    "display": "=",
    "errors": Array [],
    "hide": false,
    "type": "any",
  },
  Object {
    "attrs": undefined,
    "code": "NumberLiteral",
    "display": "3",
    "errors": Array [],
    "hide": false,
    "type": "number",
  },
  Object {
    "attrs": undefined,
    "code": "Space",
    "display": " ",
    "errors": Array [],
    "hide": false,
    "type": "any",
  },
  Object {
    "attrs": undefined,
    "code": "In",
    "display": "in",
    "errors": Array [],
    "hide": false,
    "type": "boolean",
  },
  Object {
    "attrs": undefined,
    "code": "Space",
    "display": " ",
    "errors": Array [],
    "hide": false,
    "type": "any",
  },
  Object {
    "attrs": Object {
      "id": "28e28190-63bd-4f70-aeca-26e72574c01a",
      "kind": "Spreadsheet",
      "name": "MySpreadsheet",
      "namespaceId": "57622108-1337-4edd-833a-2557835bcfe0",
    },
    "code": "Spreadsheet",
    "display": "MySpreadsheet",
    "errors": Array [],
    "hide": false,
    "type": "Spreadsheet",
  },
]
`;

exports[`Spreadsheet Functions [in spreadsheet true] =3 in #57622108-1337-4edd-833a-2557835bcfe0.MySpreadsheet 2`] = `
Array [
  Object {
    "definitionHandler": [Function],
    "event": [Function],
    "eventId": "57622108-1337-4edd-833a-2557835bcfe0,28e28190-63bd-4f70-aeca-26e72574c01a",
    "kind": "SpreadsheetName",
    "scope": Object {},
  },
  Object {
    "event": [Function],
    "eventId": "57622108-1337-4edd-833a-2557835bcfe0,28e28190-63bd-4f70-aeca-26e72574c01a",
    "kind": "Spreadsheet",
    "scope": Object {},
  },
]
`;

exports[`Spreadsheet Functions [row 1 2 TODO] =#57622108-1337-4edd-833a-2557835bcfe0.MySpreadsheet[1] 1`] = `
Array [
  Object {
    "attrs": undefined,
    "code": "Equal",
    "display": "=",
    "errors": Array [],
    "hide": false,
    "type": "any",
  },
  Object {
    "attrs": Object {
      "id": "28e28190-63bd-4f70-aeca-26e72574c01a",
      "kind": "Spreadsheet",
      "name": "MySpreadsheet",
      "namespaceId": "57622108-1337-4edd-833a-2557835bcfe0",
    },
    "code": "Spreadsheet",
    "display": "MySpreadsheet",
    "errors": Array [],
    "hide": false,
    "type": "Spreadsheet",
  },
  Object {
    "attrs": undefined,
    "code": "LBracket",
    "display": "[",
    "errors": Array [],
    "hide": false,
    "type": "any",
  },
  Object {
    "attrs": undefined,
    "code": "NumberLiteral",
    "display": "1",
    "errors": Array [],
    "hide": false,
    "type": "number",
  },
  Object {
    "attrs": undefined,
    "code": "RBracket",
    "display": "]",
    "errors": Array [],
    "hide": false,
    "type": "any",
  },
]
`;

exports[`Spreadsheet Functions [row 1 2 TODO] =#57622108-1337-4edd-833a-2557835bcfe0.MySpreadsheet[1] 2`] = `
Array [
  Object {
    "definitionHandler": [Function],
    "event": [Function],
    "eventId": "57622108-1337-4edd-833a-2557835bcfe0,28e28190-63bd-4f70-aeca-26e72574c01a",
    "kind": "SpreadsheetName",
    "scope": Object {},
  },
  Object {
    "event": [Function],
    "eventId": "57622108-1337-4edd-833a-2557835bcfe0,28e28190-63bd-4f70-aeca-26e72574c01a",
    "kind": "Spreadsheet",
    "scope": Object {},
  },
]
`;

exports[`Spreadsheet Functions [row 1 TODO] =#57622108-1337-4edd-833a-2557835bcfe0.MySpreadsheet.1 1`] = `
Array [
  Object {
    "attrs": undefined,
    "code": "Equal",
    "display": "=",
    "errors": Array [],
    "hide": false,
    "type": "any",
  },
  Object {
    "attrs": Object {
      "id": "28e28190-63bd-4f70-aeca-26e72574c01a",
      "kind": "Spreadsheet",
      "name": "MySpreadsheet",
      "namespaceId": "57622108-1337-4edd-833a-2557835bcfe0",
    },
    "code": "Spreadsheet",
    "display": "MySpreadsheet",
    "errors": Array [],
    "hide": false,
    "type": "Spreadsheet",
  },
  Object {
    "attrs": undefined,
    "code": "Dot",
    "display": ".",
    "errors": Array [],
    "hide": false,
    "type": "any",
  },
  Object {
    "attrs": Object {
      "id": "ec4fdfe8-4a12-4a76-aeae-2dea0229e734",
      "kind": "LogicRow",
      "name": "1",
      "namespaceId": "28e28190-63bd-4f70-aeca-26e72574c01a",
    },
    "code": "Row",
    "display": "1",
    "errors": Array [],
    "hide": false,
    "type": "Row",
  },
]
`;

exports[`Spreadsheet Functions [row 1 TODO] =#57622108-1337-4edd-833a-2557835bcfe0.MySpreadsheet.1 2`] = `
Array [
  Object {
    "definitionHandler": [Function],
    "event": [Function],
    "eventId": "57622108-1337-4edd-833a-2557835bcfe0,28e28190-63bd-4f70-aeca-26e72574c01a",
    "kind": "SpreadsheetName",
    "scope": Object {},
  },
  Object {
    "event": [Function],
    "eventId": "57622108-1337-4edd-833a-2557835bcfe0,28e28190-63bd-4f70-aeca-26e72574c01a",
    "kind": "Row",
    "scope": Object {
      "rows": Array [
        "1",
      ],
    },
  },
]
`;

exports[`Spreadsheet Functions [row 100] =#57622108-1337-4edd-833a-2557835bcfe0.MySpreadsheet.100 1`] = `
Array [
  Object {
    "attrs": undefined,
    "code": "Equal",
    "display": "=",
    "errors": Array [],
    "hide": false,
    "type": "any",
  },
  Object {
    "attrs": Object {
      "id": "28e28190-63bd-4f70-aeca-26e72574c01a",
      "kind": "Spreadsheet",
      "name": "MySpreadsheet",
      "namespaceId": "57622108-1337-4edd-833a-2557835bcfe0",
    },
    "code": "Spreadsheet",
    "display": "MySpreadsheet",
    "errors": Array [],
    "hide": false,
    "type": "Spreadsheet",
  },
  Object {
    "attrs": undefined,
    "code": "Dot",
    "display": ".",
    "errors": Array [],
    "hide": false,
    "type": "any",
  },
  Object {
    "attrs": undefined,
    "code": "NumberLiteral",
    "display": "100",
    "errors": Array [
      Object {
        "message": "Row \\"100\\" not found",
        "type": "deps",
      },
    ],
    "hide": false,
    "type": "number",
  },
]
`;

exports[`Spreadsheet Functions [row 100] =#57622108-1337-4edd-833a-2557835bcfe0.MySpreadsheet.100 2`] = `
Array [
  Object {
    "definitionHandler": [Function],
    "event": [Function],
    "eventId": "57622108-1337-4edd-833a-2557835bcfe0,28e28190-63bd-4f70-aeca-26e72574c01a",
    "kind": "SpreadsheetName",
    "scope": Object {},
  },
  Object {
    "event": [Function],
    "eventId": "57622108-1337-4edd-833a-2557835bcfe0,28e28190-63bd-4f70-aeca-26e72574c01a",
    "kind": "Row",
    "scope": Object {
      "rows": Array [
        "100",
      ],
    },
  },
]
`;

exports[`Spreadsheet Functions [thisRecord outside] =ThisRecord 1`] = `
Array [
  Object {
    "attrs": undefined,
    "code": "Equal",
    "display": "=",
    "errors": Array [],
    "hide": false,
    "type": "any",
  },
  Object {
    "attrs": undefined,
    "code": "ThisRecord",
    "display": "ThisRecord",
    "errors": Array [
      Object {
        "message": "thisRecord is only available in spreadsheet",
        "type": "syntax",
      },
    ],
    "hide": false,
    "type": "any",
  },
]
`;

exports[`Spreadsheet Functions [thisRecord outside] =ThisRecord 2`] = `Array []`;

exports[`Spreadsheet Functions [thisRow outside] =ThisRow 1`] = `
Array [
  Object {
    "attrs": undefined,
    "code": "Equal",
    "display": "=",
    "errors": Array [],
    "hide": false,
    "type": "any",
  },
  Object {
    "attrs": undefined,
    "code": "ThisRow",
    "display": "ThisRow",
    "errors": Array [
      Object {
        "message": "thisRow is only available in spreadsheet",
        "type": "syntax",
      },
    ],
    "hide": false,
    "type": "any",
  },
]
`;

exports[`Spreadsheet Functions [thisRow outside] =ThisRow 2`] = `Array []`;

exports[`Spreadsheet Functions [toArray] =#57622108-1337-4edd-833a-2557835bcfe0.MySpreadsheet.toArray() 1`] = `
Array [
  Object {
    "attrs": undefined,
    "code": "Equal",
    "display": "=",
    "errors": Array [],
    "hide": false,
    "type": "any",
  },
  Object {
    "attrs": Object {
      "id": "28e28190-63bd-4f70-aeca-26e72574c01a",
      "kind": "Spreadsheet",
      "name": "MySpreadsheet",
      "namespaceId": "57622108-1337-4edd-833a-2557835bcfe0",
    },
    "code": "Spreadsheet",
    "display": "MySpreadsheet",
    "errors": Array [],
    "hide": false,
    "type": "Spreadsheet",
  },
  Object {
    "attrs": undefined,
    "code": "Dot",
    "display": ".",
    "errors": Array [],
    "hide": false,
    "type": "any",
  },
  Object {
    "attrs": undefined,
    "code": "Function",
    "display": "toArray",
    "errors": Array [],
    "hide": false,
    "type": "any",
  },
  Object {
    "attrs": undefined,
    "code": "LParen",
    "display": "(",
    "errors": Array [],
    "hide": false,
    "type": "any",
  },
  Object {
    "attrs": undefined,
    "code": "RParen",
    "display": ")",
    "errors": Array [],
    "hide": false,
    "type": "Array",
  },
]
`;

exports[`Spreadsheet Functions [toArray] =#57622108-1337-4edd-833a-2557835bcfe0.MySpreadsheet.toArray() 2`] = `
Array [
  Object {
    "definitionHandler": [Function],
    "event": [Function],
    "eventId": "57622108-1337-4edd-833a-2557835bcfe0,28e28190-63bd-4f70-aeca-26e72574c01a",
    "kind": "SpreadsheetName",
    "scope": Object {},
  },
  Object {
    "event": [Function],
    "eventId": "57622108-1337-4edd-833a-2557835bcfe0,28e28190-63bd-4f70-aeca-26e72574c01a",
    "kind": "Spreadsheet",
    "scope": Object {},
  },
]
`;

exports[`Spreadsheet Functions [toArray] =#57622108-1337-4edd-833a-2557835bcfe0.MySpreadsheet.toArray() 3`] = `
Array [
  Object {
    "result": Array [
      Object {
        "result": "first",
        "type": "string",
      },
      Object {
        "result": "second",
        "type": "string",
      },
      Object {
        "result": "third",
        "type": "string",
      },
    ],
    "subType": "string",
    "type": "Array",
  },
  Object {
    "result": Array [
      Object {
        "result": "1",
        "type": "string",
      },
      Object {
        "result": "2",
        "type": "string",
      },
      Object {
        "result": "3",
        "type": "string",
      },
    ],
    "subType": "string",
    "type": "Array",
  },
  Object {
    "result": Array [
      Object {
        "result": "3",
        "type": "string",
      },
      Object {
        "result": "4",
        "type": "string",
      },
      Object {
        "result": "",
        "type": "string",
      },
    ],
    "subType": "string",
    "type": "Array",
  },
  Object {
    "result": Array [
      Object {
        "result": "5",
        "type": "string",
      },
      Object {
        "result": "6",
        "type": "string",
      },
      Object {
        "result": "Foo",
        "type": "string",
      },
    ],
    "subType": "string",
    "type": "Array",
  },
]
`;

exports[`Spreadsheet Functions [toRecordArray] =#57622108-1337-4edd-833a-2557835bcfe0.MySpreadsheet.toRecordArray() 1`] = `
Array [
  Object {
    "attrs": undefined,
    "code": "Equal",
    "display": "=",
    "errors": Array [],
    "hide": false,
    "type": "any",
  },
  Object {
    "attrs": Object {
      "id": "28e28190-63bd-4f70-aeca-26e72574c01a",
      "kind": "Spreadsheet",
      "name": "MySpreadsheet",
      "namespaceId": "57622108-1337-4edd-833a-2557835bcfe0",
    },
    "code": "Spreadsheet",
    "display": "MySpreadsheet",
    "errors": Array [],
    "hide": false,
    "type": "Spreadsheet",
  },
  Object {
    "attrs": undefined,
    "code": "Dot",
    "display": ".",
    "errors": Array [],
    "hide": false,
    "type": "any",
  },
  Object {
    "attrs": undefined,
    "code": "Function",
    "display": "toRecordArray",
    "errors": Array [],
    "hide": false,
    "type": "any",
  },
  Object {
    "attrs": undefined,
    "code": "LParen",
    "display": "(",
    "errors": Array [],
    "hide": false,
    "type": "any",
  },
  Object {
    "attrs": undefined,
    "code": "RParen",
    "display": ")",
    "errors": Array [],
    "hide": false,
    "type": "Array",
  },
]
`;

exports[`Spreadsheet Functions [toRecordArray] =#57622108-1337-4edd-833a-2557835bcfe0.MySpreadsheet.toRecordArray() 2`] = `
Array [
  Object {
    "definitionHandler": [Function],
    "event": [Function],
    "eventId": "57622108-1337-4edd-833a-2557835bcfe0,28e28190-63bd-4f70-aeca-26e72574c01a",
    "kind": "SpreadsheetName",
    "scope": Object {},
  },
  Object {
    "event": [Function],
    "eventId": "57622108-1337-4edd-833a-2557835bcfe0,28e28190-63bd-4f70-aeca-26e72574c01a",
    "kind": "Spreadsheet",
    "scope": Object {},
  },
]
`;

exports[`Spreadsheet Functions [toRecordArray] =#57622108-1337-4edd-833a-2557835bcfe0.MySpreadsheet.toRecordArray() 3`] = `
Array [
  Object {
    "result": Object {
      "first": Object {
        "result": "1",
        "type": "string",
      },
      "second": Object {
        "result": "2",
        "type": "string",
      },
      "third": Object {
        "result": "3",
        "type": "string",
      },
    },
    "subType": "string",
    "type": "Record",
  },
  Object {
    "result": Object {
      "first": Object {
        "result": "3",
        "type": "string",
      },
      "second": Object {
        "result": "4",
        "type": "string",
      },
      "third": Object {
        "result": "",
        "type": "string",
      },
    },
    "subType": "string",
    "type": "Record",
  },
  Object {
    "result": Object {
      "first": Object {
        "result": "5",
        "type": "string",
      },
      "second": Object {
        "result": "6",
        "type": "string",
      },
      "third": Object {
        "result": "Foo",
        "type": "string",
      },
    },
    "subType": "string",
    "type": "Record",
  },
]
`;

exports[`Spreadsheet Functions Spreadsheet [ThisRecord 1] =ThisRecord 1`] = `
Array [
  Object {
    "attrs": undefined,
    "code": "Equal",
    "display": "=",
    "errors": Array [],
    "hide": false,
    "type": "any",
  },
  Object {
    "attrs": Object {
      "id": "28e28190-63bd-4f70-aeca-26e72574c01a",
      "kind": "Spreadsheet",
      "name": "MySpreadsheet",
      "namespaceId": "57622108-1337-4edd-833a-2557835bcfe0",
    },
    "code": "ThisRecord",
    "display": "ThisRecord",
    "errors": Array [],
    "hide": false,
    "type": "Spreadsheet",
  },
]
`;

exports[`Spreadsheet Functions Spreadsheet [ThisRecord 1] =ThisRecord 2`] = `
Array [
  Object {
    "event": [Function],
    "eventId": "57622108-1337-4edd-833a-2557835bcfe0,28e28190-63bd-4f70-aeca-26e72574c01a",
    "kind": "Spreadsheet",
    "scope": Object {},
  },
]
`;

exports[`Spreadsheet Functions Spreadsheet [ThisRecord A.1] =ThisRecord.A.1 1`] = `
Array [
  Object {
    "attrs": undefined,
    "code": "Equal",
    "display": "=",
    "errors": Array [],
    "hide": false,
    "type": "any",
  },
  Object {
    "attrs": Object {
      "id": "28e28190-63bd-4f70-aeca-26e72574c01a",
      "kind": "Spreadsheet",
      "name": "MySpreadsheet",
      "namespaceId": "57622108-1337-4edd-833a-2557835bcfe0",
    },
    "code": "ThisRecord",
    "display": "ThisRecord",
    "errors": Array [],
    "hide": false,
    "type": "Spreadsheet",
  },
  Object {
    "attrs": undefined,
    "code": "Dot",
    "display": ".",
    "errors": Array [],
    "hide": false,
    "type": "any",
  },
  Object {
    "attrs": Object {
      "id": "62d9a9ee-88a1-46c7-a929-4a0d9dc0a4d6",
      "kind": "LogicColumn",
      "name": "A",
      "namespaceId": "28e28190-63bd-4f70-aeca-26e72574c01a",
    },
    "code": "Column",
    "display": "A",
    "errors": Array [],
    "hide": false,
    "type": "Column",
  },
  Object {
    "attrs": undefined,
    "code": "Dot",
    "display": ".",
    "errors": Array [],
    "hide": false,
    "type": "any",
  },
  Object {
    "attrs": undefined,
    "code": "NumberLiteral",
    "display": "1",
    "errors": Array [
      Object {
        "message": "Circular dependency found",
        "type": "circular_dependency",
      },
    ],
    "hide": false,
    "type": "number",
  },
]
`;

exports[`Spreadsheet Functions Spreadsheet [ThisRecord A.1] =ThisRecord.A.1 2`] = `
Array [
  Object {
    "event": [Function],
    "eventId": "57622108-1337-4edd-833a-2557835bcfe0,28e28190-63bd-4f70-aeca-26e72574c01a",
    "kind": "Cell",
    "scope": Object {
      "columns": Array [
        "62d9a9ee-88a1-46c7-a929-4a0d9dc0a4d6",
      ],
      "rows": Array [
        "1",
      ],
    },
  },
]
`;

exports[`Spreadsheet Functions Spreadsheet [ThisRecord B.1] =ThisRecord.B.1 1`] = `
Array [
  Object {
    "attrs": undefined,
    "code": "Equal",
    "display": "=",
    "errors": Array [],
    "hide": false,
    "type": "any",
  },
  Object {
    "attrs": Object {
      "id": "28e28190-63bd-4f70-aeca-26e72574c01a",
      "kind": "Spreadsheet",
      "name": "MySpreadsheet",
      "namespaceId": "57622108-1337-4edd-833a-2557835bcfe0",
    },
    "code": "ThisRecord",
    "display": "ThisRecord",
    "errors": Array [],
    "hide": false,
    "type": "Spreadsheet",
  },
  Object {
    "attrs": undefined,
    "code": "Dot",
    "display": ".",
    "errors": Array [],
    "hide": false,
    "type": "any",
  },
  Object {
    "attrs": Object {
      "id": "4e6f9adb-6f33-454e-9f9e-635dc98e3f28",
      "kind": "LogicColumn",
      "name": "B",
      "namespaceId": "28e28190-63bd-4f70-aeca-26e72574c01a",
    },
    "code": "Column",
    "display": "B",
    "errors": Array [],
    "hide": false,
    "type": "Column",
  },
  Object {
    "attrs": undefined,
    "code": "Dot",
    "display": ".",
    "errors": Array [],
    "hide": false,
    "type": "any",
  },
  Object {
    "attrs": undefined,
    "code": "NumberLiteral",
    "display": "1",
    "errors": Array [],
    "hide": false,
    "type": "number",
  },
]
`;

exports[`Spreadsheet Functions Spreadsheet [ThisRecord B.1] =ThisRecord.B.1 2`] = `
Array [
  Object {
    "event": [Function],
    "eventId": "57622108-1337-4edd-833a-2557835bcfe0,28e28190-63bd-4f70-aeca-26e72574c01a",
    "kind": "Cell",
    "scope": Object {
      "columns": Array [
        "4e6f9adb-6f33-454e-9f9e-635dc98e3f28",
      ],
      "rows": Array [
        "1",
      ],
    },
  },
]
`;

exports[`Spreadsheet Functions Spreadsheet [thisRow [B]] =ThisRow["B"] 1`] = `
Array [
  Object {
    "attrs": undefined,
    "code": "Equal",
    "display": "=",
    "errors": Array [],
    "hide": false,
    "type": "any",
  },
  Object {
    "attrs": Object {
      "id": "ec4fdfe8-4a12-4a76-aeae-2dea0229e734",
      "kind": "Row",
      "name": "1",
      "namespaceId": "28e28190-63bd-4f70-aeca-26e72574c01a",
    },
    "code": "ThisRow",
    "display": "ThisRow",
    "errors": Array [],
    "hide": false,
    "type": "Row",
  },
  Object {
    "attrs": undefined,
    "code": "LBracket",
    "display": "[",
    "errors": Array [],
    "hide": false,
    "type": "any",
  },
  Object {
    "attrs": undefined,
    "code": "StringLiteral",
    "display": "\\"B\\"",
    "errors": Array [],
    "hide": false,
    "type": "string",
  },
  Object {
    "attrs": undefined,
    "code": "RBracket",
    "display": "]",
    "errors": Array [],
    "hide": false,
    "type": "any",
  },
]
`;

exports[`Spreadsheet Functions Spreadsheet [thisRow [B]] =ThisRow["B"] 2`] = `
Array [
  Object {
    "event": [Function],
    "eventId": "57622108-1337-4edd-833a-2557835bcfe0,28e28190-63bd-4f70-aeca-26e72574c01a",
    "kind": "Row",
    "scope": Object {
      "rows": Array [
        "ec4fdfe8-4a12-4a76-aeae-2dea0229e734",
      ],
    },
  },
]
`;

exports[`Spreadsheet Functions Spreadsheet [thisRow [second]] =ThisRow["second"] 1`] = `
Array [
  Object {
    "attrs": undefined,
    "code": "Equal",
    "display": "=",
    "errors": Array [],
    "hide": false,
    "type": "any",
  },
  Object {
    "attrs": Object {
      "id": "ec4fdfe8-4a12-4a76-aeae-2dea0229e734",
      "kind": "Row",
      "name": "1",
      "namespaceId": "28e28190-63bd-4f70-aeca-26e72574c01a",
    },
    "code": "ThisRow",
    "display": "ThisRow",
    "errors": Array [],
    "hide": false,
    "type": "Row",
  },
  Object {
    "attrs": undefined,
    "code": "LBracket",
    "display": "[",
    "errors": Array [],
    "hide": false,
    "type": "any",
  },
  Object {
    "attrs": undefined,
    "code": "StringLiteral",
    "display": "\\"second\\"",
    "errors": Array [],
    "hide": false,
    "type": "string",
  },
  Object {
    "attrs": undefined,
    "code": "RBracket",
    "display": "]",
    "errors": Array [],
    "hide": false,
    "type": "any",
  },
]
`;

exports[`Spreadsheet Functions Spreadsheet [thisRow [second]] =ThisRow["second"] 2`] = `
Array [
  Object {
    "event": [Function],
    "eventId": "57622108-1337-4edd-833a-2557835bcfe0,28e28190-63bd-4f70-aeca-26e72574c01a",
    "kind": "Row",
    "scope": Object {
      "rows": Array [
        "ec4fdfe8-4a12-4a76-aeae-2dea0229e734",
      ],
    },
  },
]
`;

exports[`Spreadsheet Functions Spreadsheet [thisRow A] =ThisRow.A 1`] = `
Array [
  Object {
    "attrs": undefined,
    "code": "Equal",
    "display": "=",
    "errors": Array [],
    "hide": false,
    "type": "any",
  },
  Object {
    "attrs": Object {
      "id": "ec4fdfe8-4a12-4a76-aeae-2dea0229e734",
      "kind": "Row",
      "name": "1",
      "namespaceId": "28e28190-63bd-4f70-aeca-26e72574c01a",
    },
    "code": "ThisRow",
    "display": "ThisRow",
    "errors": Array [],
    "hide": false,
    "type": "Row",
  },
  Object {
    "attrs": undefined,
    "code": "Dot",
    "display": ".",
    "errors": Array [],
    "hide": false,
    "type": "any",
  },
  Object {
    "attrs": undefined,
    "code": "FunctionName",
    "display": "A",
    "errors": Array [
      Object {
        "message": "Circular dependency found",
        "type": "circular_dependency",
      },
    ],
    "hide": false,
    "type": "string",
  },
]
`;

exports[`Spreadsheet Functions Spreadsheet [thisRow A] =ThisRow.A 2`] = `
Array [
  Object {
    "event": [Function],
    "eventId": "57622108-1337-4edd-833a-2557835bcfe0,28e28190-63bd-4f70-aeca-26e72574c01a",
    "kind": "Cell",
    "scope": Object {
      "columns": Array [
        "A",
      ],
      "rows": Array [
        "ec4fdfe8-4a12-4a76-aeae-2dea0229e734",
      ],
    },
  },
]
`;

exports[`Spreadsheet Functions Spreadsheet [thisRow B] =ThisRow.B 1`] = `
Array [
  Object {
    "attrs": undefined,
    "code": "Equal",
    "display": "=",
    "errors": Array [],
    "hide": false,
    "type": "any",
  },
  Object {
    "attrs": Object {
      "id": "ec4fdfe8-4a12-4a76-aeae-2dea0229e734",
      "kind": "Row",
      "name": "1",
      "namespaceId": "28e28190-63bd-4f70-aeca-26e72574c01a",
    },
    "code": "ThisRow",
    "display": "ThisRow",
    "errors": Array [],
    "hide": false,
    "type": "Row",
  },
  Object {
    "attrs": undefined,
    "code": "Dot",
    "display": ".",
    "errors": Array [],
    "hide": false,
    "type": "any",
  },
  Object {
    "attrs": undefined,
    "code": "FunctionName",
    "display": "B",
    "errors": Array [],
    "hide": false,
    "type": "string",
  },
]
`;

exports[`Spreadsheet Functions Spreadsheet [thisRow B] =ThisRow.B 2`] = `
Array [
  Object {
    "event": [Function],
    "eventId": "57622108-1337-4edd-833a-2557835bcfe0,28e28190-63bd-4f70-aeca-26e72574c01a",
    "kind": "Cell",
    "scope": Object {
      "columns": Array [
        "B",
      ],
      "rows": Array [
        "ec4fdfe8-4a12-4a76-aeae-2dea0229e734",
      ],
    },
  },
]
`;

exports[`Spreadsheet Functions Spreadsheet [thisRow second] =ThisRow.second 1`] = `
Array [
  Object {
    "attrs": undefined,
    "code": "Equal",
    "display": "=",
    "errors": Array [],
    "hide": false,
    "type": "any",
  },
  Object {
    "attrs": Object {
      "id": "ec4fdfe8-4a12-4a76-aeae-2dea0229e734",
      "kind": "Row",
      "name": "1",
      "namespaceId": "28e28190-63bd-4f70-aeca-26e72574c01a",
    },
    "code": "ThisRow",
    "display": "ThisRow",
    "errors": Array [],
    "hide": false,
    "type": "Row",
  },
  Object {
    "attrs": undefined,
    "code": "Dot",
    "display": ".",
    "errors": Array [],
    "hide": false,
    "type": "any",
  },
  Object {
    "attrs": undefined,
    "code": "FunctionName",
    "display": "second",
    "errors": Array [],
    "hide": false,
    "type": "string",
  },
]
`;

exports[`Spreadsheet Functions Spreadsheet [thisRow second] =ThisRow.second 2`] = `
Array [
  Object {
    "event": [Function],
    "eventId": "57622108-1337-4edd-833a-2557835bcfe0,28e28190-63bd-4f70-aeca-26e72574c01a",
    "kind": "Cell",
    "scope": Object {
      "columns": Array [
        "second",
      ],
      "rows": Array [
        "ec4fdfe8-4a12-4a76-aeae-2dea0229e734",
      ],
    },
  },
]
`;

exports[`Spreadsheet Functions Spreadsheet [thisrow] =thisrow 1`] = `
Array [
  Object {
    "attrs": undefined,
    "code": "Equal",
    "display": "=",
    "errors": Array [],
    "hide": false,
    "type": "any",
  },
  Object {
    "attrs": Object {
      "id": "ec4fdfe8-4a12-4a76-aeae-2dea0229e734",
      "kind": "Row",
      "name": "1",
      "namespaceId": "28e28190-63bd-4f70-aeca-26e72574c01a",
    },
    "code": "ThisRow",
    "display": "thisrow",
    "errors": Array [],
    "hide": false,
    "type": "Row",
  },
]
`;

exports[`Spreadsheet Functions Spreadsheet [thisrow] =thisrow 2`] = `
Array [
  Object {
    "event": [Function],
    "eventId": "57622108-1337-4edd-833a-2557835bcfe0,28e28190-63bd-4f70-aeca-26e72574c01a",
    "kind": "Row",
    "scope": Object {
      "rows": Array [
        "ec4fdfe8-4a12-4a76-aeae-2dea0229e734",
      ],
    },
  },
]
`;

exports[`Spreadsheet Functions Spreadsheet Factory 1`] = `
Array [
  Object {
    "columnId": "62d9a9ee-88a1-46c7-a929-4a0d9dc0a4d6",
    "displayIndex": "A",
    "index": 0,
    "name": "first",
    "sort": 0,
    "spreadsheetId": "28e28190-63bd-4f70-aeca-26e72574c01a",
    "title": "first",
  },
  Object {
    "columnId": "4e6f9adb-6f33-454e-9f9e-635dc98e3f28",
    "displayIndex": "B",
    "index": 1,
    "name": "second",
    "sort": 1,
    "spreadsheetId": "28e28190-63bd-4f70-aeca-26e72574c01a",
    "title": "second",
  },
  Object {
    "columnId": "2723b7d9-22ce-4d93-b2ef-7cce1b122d64",
    "displayIndex": "C",
    "index": 2,
    "name": "third",
    "sort": 2,
    "spreadsheetId": "28e28190-63bd-4f70-aeca-26e72574c01a",
    "title": "third",
  },
]
`;

exports[`Spreadsheet Functions Spreadsheet Factory 2`] = `
Array [
  Object {
    "rowId": "ec4fdfe8-4a12-4a76-aeae-2dea0229e734",
    "rowIndex": 0,
    "spreadsheetId": "28e28190-63bd-4f70-aeca-26e72574c01a",
  },
  Object {
    "rowId": "5d1e4a83-383a-4991-a33c-52a9b3169549",
    "rowIndex": 1,
    "spreadsheetId": "28e28190-63bd-4f70-aeca-26e72574c01a",
  },
  Object {
    "rowId": "05f5ae67-b982-406e-a92f-e559c10a7ba6",
    "rowIndex": 2,
    "spreadsheetId": "28e28190-63bd-4f70-aeca-26e72574c01a",
  },
]
`;

exports[`Spreadsheet Functions Spreadsheet Factory 3`] = `
Array [
  Array [
    "first",
    "second",
    "third",
  ],
  Array [
    "1",
    "2",
    "3",
  ],
  Array [
    "3",
    "4",
    "",
  ],
  Array [
    "5",
    "6",
    "Foo",
  ],
]
`;

exports[`Spreadsheet Functions Spreadsheet Factory 4`] = `
Array [
  Object {
    "first": Object {
      "result": "1",
      "type": "string",
    },
    "second": Object {
      "result": "2",
      "type": "string",
    },
    "third": Object {
      "result": "3",
      "type": "string",
    },
  },
  Object {
    "first": Object {
      "result": "3",
      "type": "string",
    },
    "second": Object {
      "result": "4",
      "type": "string",
    },
    "third": Object {
      "result": "",
      "type": "string",
    },
  },
  Object {
    "first": Object {
      "result": "5",
      "type": "string",
    },
    "second": Object {
      "result": "6",
      "type": "string",
    },
    "third": Object {
      "result": "Foo",
      "type": "string",
    },
  },
]
`;

exports[`Spreadsheet Functions completion TODO 1`] = `
Object {
  "codeFragments": Array [
    Object {
      "attrs": Object {
        "id": "28e28190-63bd-4f70-aeca-26e72574c01a",
        "kind": "Spreadsheet",
        "name": "MySpreadsheet",
        "namespaceId": "57622108-1337-4edd-833a-2557835bcfe0",
      },
      "code": "Spreadsheet",
      "display": "MySpreadsheet",
      "errors": Array [],
      "hide": false,
      "type": "Spreadsheet",
      "valuePrefix": "#CurrentBlock.",
    },
  ],
  "kind": "spreadsheet",
  "name": "MySpreadsheet",
  "namespace": "28e28190-63bd-4f70-aeca-26e72574c01a",
  "positionChange": 27,
  "preview": SpreadsheetClass {
    "_columns": Array [
      Object {
        "columnId": "62d9a9ee-88a1-46c7-a929-4a0d9dc0a4d6",
        "displayIndex": "A",
        "index": 0,
        "name": "first",
        "sort": 0,
        "spreadsheetId": "28e28190-63bd-4f70-aeca-26e72574c01a",
        "title": "first",
      },
      Object {
        "columnId": "4e6f9adb-6f33-454e-9f9e-635dc98e3f28",
        "displayIndex": "B",
        "index": 1,
        "name": "second",
        "sort": 1,
        "spreadsheetId": "28e28190-63bd-4f70-aeca-26e72574c01a",
        "title": "second",
      },
      Object {
        "columnId": "2723b7d9-22ce-4d93-b2ef-7cce1b122d64",
        "displayIndex": "C",
        "index": 2,
        "name": "third",
        "sort": 2,
        "spreadsheetId": "28e28190-63bd-4f70-aeca-26e72574c01a",
        "title": "third",
      },
    ],
    "_formulaContext": FormulaContext {
      "blocks": Object {
        "57622108-1337-4edd-833a-2557835bcfe0": BlockClass {
          "_formulaContext": [Circular],
          "_name": "Page1",
          "eventListeners": Array [
            Object {
              "unsubscribe": [Function],
            },
          ],
          "id": "57622108-1337-4edd-833a-2557835bcfe0",
          "name": [Function],
        },
      },
      "dirtyFormulas": Object {},
      "domain": "test",
      "eventListeners": Array [
        Object {
          "unsubscribe": [Function],
        },
        Object {
          "unsubscribe": [Function],
        },
      ],
      "features": Array [
        "formula-controls",
      ],
      "functionClausesMap": Object {
        "ABS": Object {
          "acceptError": false,
          "args": Array [
            Object {
              "name": "number",
              "type": "number",
            },
          ],
          "async": false,
          "chain": false,
          "description": "Returns the absolute value of a number.",
          "effect": false,
          "examples": Array [
            Object {
              "codeFragments": Array [
                Object {
                  "attrs": undefined,
                  "code": "Equal",
                  "display": "=",
                  "errors": Array [],
                  "hide": false,
                  "type": "any",
                },
                Object {
                  "attrs": undefined,
                  "code": "Function",
                  "display": "ABS",
                  "errors": Array [],
                  "hide": false,
                  "type": "any",
                },
                Object {
                  "attrs": undefined,
                  "code": "LParen",
                  "display": "(",
                  "errors": Array [],
                  "hide": false,
                  "type": "any",
                },
                Object {
                  "attrs": undefined,
                  "code": "NumberLiteral",
                  "display": "-1",
                  "errors": Array [],
                  "hide": false,
                  "type": "number",
                },
                Object {
                  "attrs": undefined,
                  "code": "RParen",
                  "display": ")",
                  "errors": Array [],
                  "hide": false,
                  "type": "number",
                },
              ],
              "input": "=ABS(-1)",
              "output": Object {
                "result": 1,
                "type": "number",
              },
            },
          ],
          "group": "core",
          "key": "ABS",
          "lazy": false,
          "name": "ABS",
          "persist": false,
          "pure": true,
          "reference": [Function],
          "returns": "number",
          "testCases": Array [
            Object {
              "input": Array [
                -1,
              ],
              "output": 1,
            },
          ],
        },
        "AVERAGE": Object {
          "acceptError": false,
          "args": Array [
            Object {
              "name": "numbers",
              "spread": true,
              "type": "number",
            },
          ],
          "async": false,
          "chain": false,
          "description": "Returns the average of the numbers in the list.",
          "effect": false,
          "examples": Array [
            Object {
              "codeFragments": Array [
                Object {
                  "attrs": undefined,
                  "code": "Equal",
                  "display": "=",
                  "errors": Array [],
                  "hide": false,
                  "type": "any",
                },
                Object {
                  "attrs": undefined,
                  "code": "Function",
                  "display": "AVERAGE",
                  "errors": Array [],
                  "hide": false,
                  "type": "any",
                },
                Object {
                  "attrs": undefined,
                  "code": "LParen",
                  "display": "(",
                  "errors": Array [],
                  "hide": false,
                  "type": "any",
                },
                Object {
                  "attrs": undefined,
                  "code": "NumberLiteral",
                  "display": "-1",
                  "errors": Array [],
                  "hide": false,
                  "type": "number",
                },
                Object {
                  "attrs": undefined,
                  "code": "Comma",
                  "display": ",",
                  "errors": Array [],
                  "hide": false,
                  "type": "any",
                },
                Object {
                  "attrs": undefined,
                  "code": "NumberLiteral",
                  "display": "0",
                  "errors": Array [],
                  "hide": false,
                  "type": "number",
                },
                Object {
                  "attrs": undefined,
                  "code": "Comma",
                  "display": ",",
                  "errors": Array [],
                  "hide": false,
                  "type": "any",
                },
                Object {
                  "attrs": undefined,
                  "code": "NumberLiteral",
                  "display": "4",
                  "errors": Array [],
                  "hide": false,
                  "type": "number",
                },
                Object {
                  "attrs": undefined,
                  "code": "RParen",
                  "display": ")",
                  "errors": Array [],
                  "hide": false,
                  "type": "number",
                },
              ],
              "input": "=AVERAGE(-1, 0, 4)",
              "output": Object {
                "result": 1,
                "type": "number",
              },
            },
          ],
          "group": "core",
          "key": "AVERAGE",
          "lazy": false,
          "name": "AVERAGE",
          "persist": false,
          "pure": true,
          "reference": [Function],
          "returns": "number",
          "testCases": Array [
            Object {
              "input": Array [
                Object {
                  "result": -1,
                  "type": "number",
                },
                Object {
                  "result": 0,
                  "type": "number",
                },
                Object {
                  "result": 4,
                  "type": "number",
                },
              ],
              "output": 1,
            },
            Object {
              "input": Array [],
              "output": NaN,
            },
          ],
        },
        "AVERAGEIFS": Object {
          "acceptError": false,
          "args": Array [
            Object {
              "name": "column1",
              "type": "Column",
            },
            Object {
              "name": "column2",
              "type": "Column",
            },
            Object {
              "name": "condition",
              "type": "Predicate",
            },
          ],
          "async": false,
          "chain": false,
          "description": "Returns the average of the column in the spreadsheet.",
          "effect": false,
          "examples": Array [
            Object {
              "codeFragments": Array [
                Object {
                  "attrs": undefined,
                  "code": "Equal",
                  "display": "=",
                  "errors": Array [],
                  "hide": false,
                  "type": "any",
                },
                Object {
                  "attrs": undefined,
                  "code": "NumberLiteral",
                  "display": "123",
                  "errors": Array [],
                  "hide": false,
                  "type": "number",
                },
              ],
              "input": "=123",
              "output": Object {
                "result": 123,
                "type": "number",
              },
            },
          ],
          "group": "core",
          "key": "AVERAGEIFS",
          "lazy": false,
          "name": "AVERAGEIFS",
          "persist": false,
          "pure": false,
          "reference": [Function],
          "returns": "number",
          "testCases": Array [],
        },
        "BUTTON": Object {
          "acceptError": false,
          "args": Array [
            Object {
              "name": "name",
              "type": "string",
            },
            Object {
              "name": "onClick",
              "type": "Function",
            },
          ],
          "async": false,
          "chain": false,
          "description": "Build button",
          "effect": false,
          "examples": Array [
            Object {
              "codeFragments": Array [
                Object {
                  "attrs": undefined,
                  "code": "Equal",
                  "display": "=",
                  "errors": Array [],
                  "hide": false,
                  "type": "any",
                },
                Object {
                  "attrs": undefined,
                  "code": "Function",
                  "display": "Button",
                  "errors": Array [],
                  "hide": false,
                  "type": "any",
                },
                Object {
                  "attrs": undefined,
                  "code": "LParen",
                  "display": "(",
                  "errors": Array [],
                  "hide": false,
                  "type": "any",
                },
                Object {
                  "attrs": undefined,
                  "code": "StringLiteral",
                  "display": "\\"name\\"",
                  "errors": Array [
                    Object {
                      "message": "Argument count mismatch",
                      "type": "deps",
                    },
                  ],
                  "hide": false,
                  "type": "string",
                },
                Object {
                  "attrs": undefined,
                  "code": "RParen",
                  "display": ")",
                  "errors": Array [],
                  "hide": false,
                  "type": "Button",
                },
              ],
              "input": "=Button(\\"name\\")",
              "output": null,
            },
          ],
          "feature": "formula-controls",
          "group": "core",
          "key": "BUTTON",
          "lazy": false,
          "name": "Button",
          "persist": false,
          "pure": true,
          "reference": [Function],
          "returns": "Button",
          "testCases": Array [],
        },
        "CINPUT": Object {
          "acceptError": false,
          "args": Array [
            Object {
              "name": "onChange",
              "type": "Function",
            },
          ],
          "async": false,
          "chain": false,
          "description": "Build input",
          "effect": false,
          "examples": Array [
            Object {
              "codeFragments": Array [
                Object {
                  "attrs": undefined,
                  "code": "Equal",
                  "display": "=",
                  "errors": Array [],
                  "hide": false,
                  "type": "any",
                },
                Object {
                  "attrs": undefined,
                  "code": "Input",
                  "display": "Input",
                  "errors": Array [],
                  "hide": false,
                  "type": "Record",
                },
              ],
              "input": "=Input()",
              "output": null,
            },
          ],
          "feature": "formula-controls",
          "group": "core",
          "key": "CINPUT",
          "lazy": false,
          "name": "CInput",
          "persist": false,
          "pure": true,
          "reference": [Function],
          "returns": "Input",
          "testCases": Array [],
        },
        "COLUMN_COUNT": Object {
          "acceptError": false,
          "args": Array [
            Object {
              "name": "spreadsheet",
              "type": "Spreadsheet",
            },
          ],
          "async": false,
          "chain": true,
          "description": "Returns the column size of the spreadsheet.",
          "effect": false,
          "examples": Array [
            Object {
              "codeFragments": Array [
                Object {
                  "attrs": undefined,
                  "code": "Equal",
                  "display": "=",
                  "errors": Array [],
                  "hide": false,
                  "type": "any",
                },
                Object {
                  "attrs": undefined,
                  "code": "NumberLiteral",
                  "display": "123",
                  "errors": Array [],
                  "hide": false,
                  "type": "number",
                },
              ],
              "input": "=123",
              "output": Object {
                "result": 123,
                "type": "number",
              },
            },
          ],
          "group": "core",
          "key": "COLUMN_COUNT",
          "lazy": false,
          "name": "COLUMN_COUNT",
          "persist": false,
          "pure": false,
          "reference": [Function],
          "returns": "number",
          "testCases": Array [],
        },
        "COUNTA": Object {
          "acceptError": false,
          "args": Array [
            Object {
              "name": "column",
              "type": "Column",
            },
          ],
          "async": false,
          "chain": true,
          "description": "Returns the count of the column in the spreadsheet.",
          "effect": false,
          "examples": Array [
            Object {
              "codeFragments": Array [
                Object {
                  "attrs": undefined,
                  "code": "Equal",
                  "display": "=",
                  "errors": Array [],
                  "hide": false,
                  "type": "any",
                },
                Object {
                  "attrs": undefined,
                  "code": "NumberLiteral",
                  "display": "123",
                  "errors": Array [],
                  "hide": false,
                  "type": "number",
                },
              ],
              "input": "=123",
              "output": Object {
                "result": 123,
                "type": "number",
              },
            },
          ],
          "group": "core",
          "key": "COUNTA",
          "lazy": false,
          "name": "COUNTA",
          "persist": false,
          "pure": false,
          "reference": [Function],
          "returns": "number",
          "testCases": Array [],
        },
        "COUNTIF": Object {
          "acceptError": false,
          "args": Array [
            Object {
              "name": "spreadsheet",
              "type": "Spreadsheet",
            },
            Object {
              "name": "predicate",
              "type": "Predicate",
            },
          ],
          "async": false,
          "chain": false,
          "description": "Returns the sum of the column in the spreadsheet.",
          "effect": false,
          "examples": Array [
            Object {
              "codeFragments": Array [
                Object {
                  "attrs": undefined,
                  "code": "Equal",
                  "display": "=",
                  "errors": Array [],
                  "hide": false,
                  "type": "any",
                },
                Object {
                  "attrs": undefined,
                  "code": "Function",
                  "display": "CountIf",
                  "errors": Array [
                    Object {
                      "message": "Miss argument",
                      "type": "deps",
                    },
                  ],
                  "hide": false,
                  "type": "any",
                },
                Object {
                  "attrs": undefined,
                  "code": "LParen",
                  "display": "(",
                  "errors": Array [],
                  "hide": false,
                  "type": "any",
                },
                Object {
                  "attrs": undefined,
                  "code": "RParen",
                  "display": ")",
                  "errors": Array [],
                  "hide": false,
                  "type": "number",
                },
              ],
              "input": "=CountIf()",
              "output": Object {
                "result": 123,
                "type": "number",
              },
            },
          ],
          "group": "core",
          "key": "COUNTIF",
          "lazy": false,
          "name": "CountIf",
          "persist": false,
          "pure": false,
          "reference": [Function],
          "returns": "number",
          "testCases": Array [],
        },
        "COUNTIFS": Object {
          "acceptError": false,
          "args": Array [
            Object {
              "name": "column",
              "type": "Column",
            },
            Object {
              "name": "condition",
              "type": "Predicate",
            },
          ],
          "async": false,
          "chain": true,
          "description": "Returns the sum of the column in the spreadsheet.",
          "effect": false,
          "examples": Array [
            Object {
              "codeFragments": Array [
                Object {
                  "attrs": undefined,
                  "code": "Equal",
                  "display": "=",
                  "errors": Array [],
                  "hide": false,
                  "type": "any",
                },
                Object {
                  "attrs": undefined,
                  "code": "NumberLiteral",
                  "display": "123",
                  "errors": Array [],
                  "hide": false,
                  "type": "number",
                },
              ],
              "input": "=123",
              "output": Object {
                "result": 123,
                "type": "number",
              },
            },
          ],
          "group": "core",
          "key": "COUNTIFS",
          "lazy": false,
          "name": "COUNTIFS",
          "persist": false,
          "pure": false,
          "reference": [Function],
          "returns": "number",
          "testCases": Array [],
        },
        "CURRENT_POSITION": Object {
          "acceptError": false,
          "args": Array [],
          "async": true,
          "chain": false,
          "description": "Returns current position",
          "effect": false,
          "examples": Array [
            Object {
              "codeFragments": Array [
                Object {
                  "attrs": undefined,
                  "code": "Equal",
                  "display": "=",
                  "errors": Array [],
                  "hide": false,
                  "type": "any",
                },
                Object {
                  "attrs": undefined,
                  "code": "Function",
                  "display": "CURRENT_POSITION",
                  "errors": Array [],
                  "hide": false,
                  "type": "any",
                },
                Object {
                  "attrs": undefined,
                  "code": "LParen",
                  "display": "(",
                  "errors": Array [],
                  "hide": false,
                  "type": "any",
                },
                Object {
                  "attrs": undefined,
                  "code": "RParen",
                  "display": ")",
                  "errors": Array [],
                  "hide": false,
                  "type": "Record",
                },
              ],
              "input": "=CURRENT_POSITION()",
              "output": Object {
                "result": Object {
                  "lat": Object {
                    "result": 0,
                    "type": "number",
                  },
                  "long": Object {
                    "result": 0,
                    "type": "number",
                  },
                },
                "subType": "number",
                "type": "Record",
              },
            },
          ],
          "group": "core",
          "key": "CURRENT_POSITION",
          "lazy": false,
          "name": "CURRENT_POSITION",
          "persist": false,
          "pure": false,
          "reference": [Function],
          "returns": "Record",
          "testCases": Array [],
        },
        "DATE": Object {
          "acceptError": false,
          "args": Array [
            Object {
              "name": "date",
              "type": "string",
            },
          ],
          "async": false,
          "chain": false,
          "description": "Returns the date specified by the input",
          "effect": false,
          "examples": Array [
            Object {
              "codeFragments": Array [
                Object {
                  "attrs": undefined,
                  "code": "Equal",
                  "display": "=",
                  "errors": Array [],
                  "hide": false,
                  "type": "any",
                },
                Object {
                  "attrs": undefined,
                  "code": "Function",
                  "display": "DATE",
                  "errors": Array [],
                  "hide": false,
                  "type": "any",
                },
                Object {
                  "attrs": undefined,
                  "code": "LParen",
                  "display": "(",
                  "errors": Array [],
                  "hide": false,
                  "type": "any",
                },
                Object {
                  "attrs": undefined,
                  "code": "StringLiteral",
                  "display": "\\"1926-08-17\\"",
                  "errors": Array [],
                  "hide": false,
                  "type": "string",
                },
                Object {
                  "attrs": undefined,
                  "code": "RParen",
                  "display": ")",
                  "errors": Array [],
                  "hide": false,
                  "type": "Date",
                },
              ],
              "input": "=DATE(\\"1926-08-17\\")",
              "output": Object {
                "result": 1926-08-17T00:00:00.000Z,
                "type": "Date",
              },
            },
          ],
          "group": "core",
          "key": "DATE",
          "lazy": false,
          "name": "DATE",
          "persist": false,
          "pure": true,
          "reference": [Function],
          "returns": "Date",
          "testCases": Array [],
        },
        "ERROR": Object {
          "acceptError": false,
          "args": Array [
            Object {
              "name": "reason",
              "type": "string",
            },
          ],
          "async": false,
          "chain": true,
          "description": "Returns an error with the given message.",
          "effect": false,
          "examples": Array [
            Object {
              "codeFragments": Array [
                Object {
                  "attrs": undefined,
                  "code": "Equal",
                  "display": "=",
                  "errors": Array [],
                  "hide": false,
                  "type": "any",
                },
                Object {
                  "attrs": undefined,
                  "code": "Function",
                  "display": "ERROR",
                  "errors": Array [],
                  "hide": false,
                  "type": "any",
                },
                Object {
                  "attrs": undefined,
                  "code": "LParen",
                  "display": "(",
                  "errors": Array [],
                  "hide": false,
                  "type": "any",
                },
                Object {
                  "attrs": undefined,
                  "code": "StringLiteral",
                  "display": "\\"foo bar\\"",
                  "errors": Array [],
                  "hide": false,
                  "type": "string",
                },
                Object {
                  "attrs": undefined,
                  "code": "RParen",
                  "display": ")",
                  "errors": Array [],
                  "hide": false,
                  "type": "Error",
                },
              ],
              "input": "=ERROR(\\"foo bar\\")",
              "output": Object {
                "errorKind": "custom",
                "result": "foo bar",
                "type": "Error",
              },
            },
          ],
          "group": "core",
          "key": "ERROR",
          "lazy": false,
          "name": "ERROR",
          "persist": false,
          "pure": true,
          "reference": [Function],
          "returns": "Error",
          "testCases": Array [],
        },
        "EXCHANGE": Object {
          "acceptError": false,
          "args": Array [
            Object {
              "name": "url",
              "type": "string",
            },
          ],
          "async": true,
          "chain": false,
          "description": "EXCHANGE",
          "effect": true,
          "examples": Array [
            Object {
              "codeFragments": Array [
                Object {
                  "attrs": undefined,
                  "code": "Equal",
                  "display": "=",
                  "errors": Array [],
                  "hide": false,
                  "type": "any",
                },
                Object {
                  "attrs": undefined,
                  "code": "Function",
                  "display": "EXCHANGE",
                  "errors": Array [],
                  "hide": false,
                  "type": "any",
                },
                Object {
                  "attrs": undefined,
                  "code": "LParen",
                  "display": "(",
                  "errors": Array [],
                  "hide": false,
                  "type": "any",
                },
                Object {
                  "attrs": undefined,
                  "code": "NumberLiteral",
                  "display": "10",
                  "errors": Array [
                    Object {
                      "message": "Expected string but got number",
                      "type": "type",
                    },
                  ],
                  "hide": false,
                  "type": "number",
                },
                Object {
                  "attrs": undefined,
                  "code": "RParen",
                  "display": ")",
                  "errors": Array [],
                  "hide": false,
                  "type": "Record",
                },
              ],
              "input": "=EXCHANGE(10)",
              "output": Object {
                "result": Object {},
                "subType": "any",
                "type": "Record",
              },
            },
          ],
          "group": "core",
          "key": "EXCHANGE",
          "lazy": false,
          "name": "EXCHANGE",
          "persist": false,
          "pure": false,
          "reference": [Function],
          "returns": "Record",
          "testCases": Array [],
        },
        "IF": Object {
          "acceptError": false,
          "args": Array [
            Object {
              "name": "condition",
              "type": "boolean",
            },
            Object {
              "name": "ifTrue",
              "type": "any",
            },
            Object {
              "name": "ifFalse",
              "type": "any",
            },
          ],
          "async": false,
          "chain": false,
          "description": "Returns the first argument if the condition is true, otherwise the second argument.",
          "effect": false,
          "examples": Array [
            Object {
              "codeFragments": Array [
                Object {
                  "attrs": undefined,
                  "code": "Equal",
                  "display": "=",
                  "errors": Array [],
                  "hide": false,
                  "type": "any",
                },
                Object {
                  "attrs": undefined,
                  "code": "Function",
                  "display": "IF",
                  "errors": Array [],
                  "hide": false,
                  "type": "any",
                },
                Object {
                  "attrs": undefined,
                  "code": "LParen",
                  "display": "(",
                  "errors": Array [],
                  "hide": false,
                  "type": "any",
                },
                Object {
                  "attrs": undefined,
                  "code": "BooleanLiteral",
                  "display": "true",
                  "errors": Array [],
                  "hide": false,
                  "type": "boolean",
                },
                Object {
                  "attrs": undefined,
                  "code": "Comma",
                  "display": ",",
                  "errors": Array [],
                  "hide": false,
                  "type": "any",
                },
                Object {
                  "attrs": undefined,
                  "code": "NumberLiteral",
                  "display": "1",
                  "errors": Array [],
                  "hide": false,
                  "type": "number",
                },
                Object {
                  "attrs": undefined,
                  "code": "Comma",
                  "display": ",",
                  "errors": Array [],
                  "hide": false,
                  "type": "any",
                },
                Object {
                  "attrs": undefined,
                  "code": "NumberLiteral",
                  "display": "2",
                  "errors": Array [],
                  "hide": false,
                  "type": "number",
                },
                Object {
                  "attrs": undefined,
                  "code": "RParen",
                  "display": ")",
                  "errors": Array [],
                  "hide": false,
                  "type": "any",
                },
              ],
              "input": "=IF(true, 1, 2)",
              "output": Object {
                "result": 2,
                "type": "number",
              },
            },
          ],
          "group": "core",
          "key": "IF",
          "lazy": false,
          "name": "IF",
          "persist": false,
          "pure": true,
          "reference": [Function],
          "returns": "any",
          "testCases": Array [],
        },
        "IFERROR": Object {
          "acceptError": true,
          "args": Array [
            Object {
              "name": "expr1",
              "type": "any",
            },
            Object {
              "name": "expr2",
              "type": "any",
            },
          ],
          "async": false,
          "chain": true,
          "description": "Returns the first argument if it is not an error, otherwise returns the second argument.",
          "effect": false,
          "examples": Array [
            Object {
              "codeFragments": Array [
                Object {
                  "attrs": undefined,
                  "code": "Equal",
                  "display": "=",
                  "errors": Array [],
                  "hide": false,
                  "type": "any",
                },
                Object {
                  "attrs": undefined,
                  "code": "Function",
                  "display": "IFERROR",
                  "errors": Array [],
                  "hide": false,
                  "type": "any",
                },
                Object {
                  "attrs": undefined,
                  "code": "LParen",
                  "display": "(",
                  "errors": Array [],
                  "hide": false,
                  "type": "any",
                },
                Object {
                  "attrs": undefined,
                  "code": "NumberLiteral",
                  "display": "1",
                  "errors": Array [],
                  "hide": false,
                  "type": "number",
                },
                Object {
                  "attrs": undefined,
                  "code": "Comma",
                  "display": ",",
                  "errors": Array [],
                  "hide": false,
                  "type": "any",
                },
                Object {
                  "attrs": undefined,
                  "code": "StringLiteral",
                  "display": "\\"foo bar\\"",
                  "errors": Array [],
                  "hide": false,
                  "type": "string",
                },
                Object {
                  "attrs": undefined,
                  "code": "RParen",
                  "display": ")",
                  "errors": Array [],
                  "hide": false,
                  "type": "any",
                },
              ],
              "input": "=IFERROR(1, \\"foo bar\\")",
              "output": Object {
                "result": 1,
                "type": "number",
              },
            },
            Object {
              "codeFragments": Array [
                Object {
                  "attrs": undefined,
                  "code": "Equal",
                  "display": "=",
                  "errors": Array [],
                  "hide": false,
                  "type": "any",
                },
                Object {
                  "attrs": undefined,
                  "code": "Function",
                  "display": "IFERROR",
                  "errors": Array [],
                  "hide": false,
                  "type": "any",
                },
                Object {
                  "attrs": undefined,
                  "code": "LParen",
                  "display": "(",
                  "errors": Array [],
                  "hide": false,
                  "type": "any",
                },
                Object {
                  "attrs": undefined,
                  "code": "Function",
                  "display": "ERROR",
                  "errors": Array [],
                  "hide": false,
                  "type": "any",
                },
                Object {
                  "attrs": undefined,
                  "code": "LParen",
                  "display": "(",
                  "errors": Array [],
                  "hide": false,
                  "type": "any",
                },
                Object {
                  "attrs": undefined,
                  "code": "StringLiteral",
                  "display": "\\"foo bar\\"",
                  "errors": Array [],
                  "hide": false,
                  "type": "string",
                },
                Object {
                  "attrs": undefined,
                  "code": "RParen",
                  "display": ")",
                  "errors": Array [],
                  "hide": false,
                  "type": "Error",
                },
                Object {
                  "attrs": undefined,
                  "code": "Comma",
                  "display": ",",
                  "errors": Array [],
                  "hide": false,
                  "type": "any",
                },
                Object {
                  "attrs": undefined,
                  "code": "NumberLiteral",
                  "display": "123",
                  "errors": Array [],
                  "hide": false,
                  "type": "number",
                },
                Object {
                  "attrs": undefined,
                  "code": "RParen",
                  "display": ")",
                  "errors": Array [],
                  "hide": false,
                  "type": "any",
                },
              ],
              "input": "=IFERROR(ERROR(\\"foo bar\\"), 123)",
              "output": Object {
                "result": 123,
                "type": "number",
              },
            },
          ],
          "group": "core",
          "key": "IFERROR",
          "lazy": false,
          "name": "IFERROR",
          "persist": false,
          "pure": true,
          "reference": [Function],
          "returns": "any",
          "testCases": Array [],
        },
        "INT": Object {
          "acceptError": false,
          "args": Array [
            Object {
              "name": "number",
              "type": "number",
            },
          ],
          "async": false,
          "chain": false,
          "description": "Returns the integer part of a number.",
          "effect": false,
          "examples": Array [
            Object {
              "codeFragments": Array [
                Object {
                  "attrs": undefined,
                  "code": "Equal",
                  "display": "=",
                  "errors": Array [],
                  "hide": false,
                  "type": "any",
                },
                Object {
                  "attrs": undefined,
                  "code": "In",
                  "display": "IN",
                  "errors": Array [],
                  "hide": false,
                  "type": "boolean",
                },
                Object {
                  "attrs": undefined,
                  "code": "Function",
                  "display": "T",
                  "errors": Array [],
                  "hide": false,
                  "type": "any",
                },
                Object {
                  "attrs": undefined,
                  "code": "LParen",
                  "display": "(",
                  "errors": Array [],
                  "hide": false,
                  "type": "any",
                },
                Object {
                  "attrs": undefined,
                  "code": "NumberLiteral",
                  "display": "-1.5",
                  "errors": Array [],
                  "hide": false,
                  "type": "number",
                },
                Object {
                  "attrs": undefined,
                  "code": "RParen",
                  "display": ")",
                  "errors": Array [],
                  "hide": false,
                  "type": "any",
                },
              ],
              "input": "=INT(-1.5)",
              "output": Object {
                "result": -1,
                "type": "number",
              },
            },
          ],
          "group": "core",
          "key": "INT",
          "lazy": false,
          "name": "INT",
          "persist": false,
          "pure": true,
          "reference": [Function],
          "returns": "number",
          "testCases": Array [
            Object {
              "input": Array [
                1.5,
              ],
              "output": 1,
            },
          ],
        },
        "JOIN": Object {
          "acceptError": false,
          "args": Array [
            Object {
              "name": "array",
              "type": "Array",
            },
            Object {
              "default": Object {
                "result": ",",
                "type": "string",
              },
              "name": "separator",
              "type": "string",
            },
          ],
          "async": false,
          "chain": true,
          "description": "Joins an array of strings",
          "effect": false,
          "examples": Array [
            Object {
              "codeFragments": Array [
                Object {
                  "attrs": undefined,
                  "code": "Equal",
                  "display": "=",
                  "errors": Array [],
                  "hide": false,
                  "type": "any",
                },
                Object {
                  "attrs": undefined,
                  "code": "Function",
                  "display": "Join",
                  "errors": Array [],
                  "hide": false,
                  "type": "any",
                },
                Object {
                  "attrs": undefined,
                  "code": "LParen",
                  "display": "(",
                  "errors": Array [],
                  "hide": false,
                  "type": "any",
                },
                Object {
                  "attrs": undefined,
                  "code": "LBracket",
                  "display": "[",
                  "errors": Array [],
                  "hide": false,
                  "type": "any",
                },
                Object {
                  "attrs": undefined,
                  "code": "NumberLiteral",
                  "display": "1",
                  "errors": Array [],
                  "hide": false,
                  "type": "number",
                },
                Object {
                  "attrs": undefined,
                  "code": "Comma",
                  "display": ",",
                  "errors": Array [],
                  "hide": false,
                  "type": "any",
                },
                Object {
                  "attrs": undefined,
                  "code": "NumberLiteral",
                  "display": "2",
                  "errors": Array [],
                  "hide": false,
                  "type": "number",
                },
                Object {
                  "attrs": undefined,
                  "code": "Comma",
                  "display": ",",
                  "errors": Array [],
                  "hide": false,
                  "type": "any",
                },
                Object {
                  "attrs": undefined,
                  "code": "NumberLiteral",
                  "display": "3",
                  "errors": Array [],
                  "hide": false,
                  "type": "number",
                },
                Object {
                  "attrs": undefined,
                  "code": "RBracket",
                  "display": "]",
                  "errors": Array [],
                  "hide": false,
                  "type": "any",
                },
                Object {
                  "attrs": undefined,
                  "code": "RParen",
                  "display": ")",
                  "errors": Array [],
                  "hide": false,
                  "type": "string",
                },
              ],
              "input": "=Join([1,2,3])",
              "output": Object {
                "result": "1,2,3",
                "type": "string",
              },
            },
          ],
          "group": "core",
          "key": "JOIN",
          "lazy": false,
          "name": "Join",
          "persist": false,
          "pure": true,
          "reference": [Function],
          "returns": "string",
          "testCases": Array [],
        },
        "LEN": Object {
          "acceptError": false,
          "args": Array [
            Object {
              "name": "str",
              "type": "string",
            },
          ],
          "async": false,
          "chain": false,
          "description": "Returns the length of the string.",
          "effect": false,
          "examples": Array [
            Object {
              "codeFragments": Array [
                Object {
                  "attrs": undefined,
                  "code": "Equal",
                  "display": "=",
                  "errors": Array [],
                  "hide": false,
                  "type": "any",
                },
                Object {
                  "attrs": undefined,
                  "code": "Function",
                  "display": "LEN",
                  "errors": Array [],
                  "hide": false,
                  "type": "any",
                },
                Object {
                  "attrs": undefined,
                  "code": "LParen",
                  "display": "(",
                  "errors": Array [],
                  "hide": false,
                  "type": "any",
                },
                Object {
                  "attrs": undefined,
                  "code": "StringLiteral",
                  "display": "\\"foo\\"",
                  "errors": Array [],
                  "hide": false,
                  "type": "string",
                },
                Object {
                  "attrs": undefined,
                  "code": "RParen",
                  "display": ")",
                  "errors": Array [],
                  "hide": false,
                  "type": "number",
                },
              ],
              "input": "=LEN(\\"foo\\")",
              "output": Object {
                "result": 3,
                "type": "number",
              },
            },
          ],
          "group": "core",
          "key": "LEN",
          "lazy": false,
          "name": "LEN",
          "persist": false,
          "pure": true,
          "reference": [Function],
          "returns": "number",
          "testCases": Array [
            Object {
              "input": Array [
                Object {
                  "result": "abc",
                  "type": "string",
                },
              ],
              "output": 3,
            },
          ],
        },
        "LN": Object {
          "acceptError": false,
          "args": Array [
            Object {
              "name": "number",
              "type": "number",
            },
          ],
          "async": false,
          "chain": false,
          "description": "Returns the natural logarithm of a number.",
          "effect": false,
          "examples": Array [
            Object {
              "codeFragments": Array [
                Object {
                  "attrs": undefined,
                  "code": "Equal",
                  "display": "=",
                  "errors": Array [],
                  "hide": false,
                  "type": "any",
                },
                Object {
                  "attrs": undefined,
                  "code": "Function",
                  "display": "LN",
                  "errors": Array [],
                  "hide": false,
                  "type": "any",
                },
                Object {
                  "attrs": undefined,
                  "code": "LParen",
                  "display": "(",
                  "errors": Array [],
                  "hide": false,
                  "type": "any",
                },
                Object {
                  "attrs": undefined,
                  "code": "NumberLiteral",
                  "display": "100",
                  "errors": Array [],
                  "hide": false,
                  "type": "number",
                },
                Object {
                  "attrs": undefined,
                  "code": "RParen",
                  "display": ")",
                  "errors": Array [],
                  "hide": false,
                  "type": "number",
                },
              ],
              "input": "=LN(100)",
              "output": Object {
                "result": 4.605170185988092,
                "type": "number",
              },
            },
          ],
          "group": "core",
          "key": "LN",
          "lazy": false,
          "name": "LN",
          "persist": false,
          "pure": true,
          "reference": [Function],
          "returns": "number",
          "testCases": Array [],
        },
        "LOG10": Object {
          "acceptError": false,
          "args": Array [
            Object {
              "name": "number",
              "type": "number",
            },
          ],
          "async": false,
          "chain": false,
          "description": "Returns the base-10 logarithm of a number.",
          "effect": false,
          "examples": Array [
            Object {
              "codeFragments": Array [
                Object {
                  "attrs": undefined,
                  "code": "Equal",
                  "display": "=",
                  "errors": Array [],
                  "hide": false,
                  "type": "any",
                },
                Object {
                  "attrs": undefined,
                  "code": "Function",
                  "display": "LOG10",
                  "errors": Array [],
                  "hide": false,
                  "type": "any",
                },
                Object {
                  "attrs": undefined,
                  "code": "LParen",
                  "display": "(",
                  "errors": Array [],
                  "hide": false,
                  "type": "any",
                },
                Object {
                  "attrs": undefined,
                  "code": "NumberLiteral",
                  "display": "100",
                  "errors": Array [],
                  "hide": false,
                  "type": "number",
                },
                Object {
                  "attrs": undefined,
                  "code": "RParen",
                  "display": ")",
                  "errors": Array [],
                  "hide": false,
                  "type": "number",
                },
              ],
              "input": "=LOG10(100)",
              "output": Object {
                "result": 2,
                "type": "number",
              },
            },
          ],
          "group": "core",
          "key": "LOG10",
          "lazy": false,
          "name": "LOG10",
          "persist": false,
          "pure": true,
          "reference": [Function],
          "returns": "number",
          "testCases": Array [
            Object {
              "input": Array [
                100,
              ],
              "output": 2,
            },
          ],
        },
        "MAX": Object {
          "acceptError": false,
          "args": Array [
            Object {
              "name": "column",
              "type": "Column",
            },
          ],
          "async": false,
          "chain": true,
          "description": "Returns the max of the column in the spreadsheet.",
          "effect": false,
          "examples": Array [
            Object {
              "codeFragments": Array [
                Object {
                  "attrs": undefined,
                  "code": "Equal",
                  "display": "=",
                  "errors": Array [],
                  "hide": false,
                  "type": "any",
                },
                Object {
                  "attrs": undefined,
                  "code": "NumberLiteral",
                  "display": "123",
                  "errors": Array [],
                  "hide": false,
                  "type": "number",
                },
              ],
              "input": "=123",
              "output": Object {
                "result": 123,
                "type": "number",
              },
            },
          ],
          "group": "core",
          "key": "MAX",
          "lazy": false,
          "name": "MAX",
          "persist": false,
          "pure": false,
          "reference": [Function],
          "returns": "number",
          "testCases": Array [],
        },
        "NOW": Object {
          "acceptError": false,
          "args": Array [],
          "async": false,
          "chain": false,
          "description": "Returns the current date",
          "effect": false,
          "examples": Array [
            Object {
              "codeFragments": Array [
                Object {
                  "attrs": undefined,
                  "code": "Equal",
                  "display": "=",
                  "errors": Array [],
                  "hide": false,
                  "type": "any",
                },
                Object {
                  "attrs": undefined,
                  "code": "Function",
                  "display": "NOW",
                  "errors": Array [],
                  "hide": false,
                  "type": "any",
                },
                Object {
                  "attrs": undefined,
                  "code": "LParen",
                  "display": "(",
                  "errors": Array [],
                  "hide": false,
                  "type": "any",
                },
                Object {
                  "attrs": undefined,
                  "code": "RParen",
                  "display": ")",
                  "errors": Array [],
                  "hide": false,
                  "type": "Date",
                },
              ],
              "input": "=NOW()",
              "output": Object {
                "result": 1926-08-17T00:00:00.000Z,
                "type": "Date",
              },
            },
          ],
          "group": "core",
          "key": "NOW",
          "lazy": false,
          "name": "NOW",
          "persist": false,
          "pure": false,
          "reference": [Function],
          "returns": "Date",
          "testCases": Array [],
        },
        "PI": Object {
          "acceptError": false,
          "args": Array [],
          "async": false,
          "chain": false,
          "description": "Returns the value of pi.",
          "effect": false,
          "examples": Array [
            Object {
              "codeFragments": Array [
                Object {
                  "attrs": undefined,
                  "code": "Equal",
                  "display": "=",
                  "errors": Array [],
                  "hide": false,
                  "type": "any",
                },
                Object {
                  "attrs": undefined,
                  "code": "Function",
                  "display": "PI",
                  "errors": Array [],
                  "hide": false,
                  "type": "any",
                },
                Object {
                  "attrs": undefined,
                  "code": "LParen",
                  "display": "(",
                  "errors": Array [],
                  "hide": false,
                  "type": "any",
                },
                Object {
                  "attrs": undefined,
                  "code": "RParen",
                  "display": ")",
                  "errors": Array [],
                  "hide": false,
                  "type": "number",
                },
              ],
              "input": "=PI()",
              "output": Object {
                "result": 3.141592653589793,
                "type": "number",
              },
            },
          ],
          "group": "core",
          "key": "PI",
          "lazy": false,
          "name": "PI",
          "persist": false,
          "pure": true,
          "reference": [Function],
          "returns": "number",
          "testCases": Array [
            Object {
              "input": Array [],
              "output": 3.141592653589793,
            },
          ],
        },
        "POWER": Object {
          "acceptError": false,
          "args": Array [
            Object {
              "name": "number",
              "type": "number",
            },
            Object {
              "name": "power",
              "type": "number",
            },
          ],
          "async": false,
          "chain": false,
          "description": "Returns the value of a number raised to a power.",
          "effect": false,
          "examples": Array [
            Object {
              "codeFragments": Array [
                Object {
                  "attrs": undefined,
                  "code": "Equal",
                  "display": "=",
                  "errors": Array [],
                  "hide": false,
                  "type": "any",
                },
                Object {
                  "attrs": undefined,
                  "code": "Function",
                  "display": "POWER",
                  "errors": Array [],
                  "hide": false,
                  "type": "any",
                },
                Object {
                  "attrs": undefined,
                  "code": "LParen",
                  "display": "(",
                  "errors": Array [],
                  "hide": false,
                  "type": "any",
                },
                Object {
                  "attrs": undefined,
                  "code": "NumberLiteral",
                  "display": "2",
                  "errors": Array [],
                  "hide": false,
                  "type": "number",
                },
                Object {
                  "attrs": undefined,
                  "code": "Comma",
                  "display": ",",
                  "errors": Array [],
                  "hide": false,
                  "type": "any",
                },
                Object {
                  "attrs": undefined,
                  "code": "NumberLiteral",
                  "display": "3",
                  "errors": Array [],
                  "hide": false,
                  "type": "number",
                },
                Object {
                  "attrs": undefined,
                  "code": "RParen",
                  "display": ")",
                  "errors": Array [],
                  "hide": false,
                  "type": "number",
                },
              ],
              "input": "=POWER(2,3)",
              "output": Object {
                "result": 8,
                "type": "number",
              },
            },
          ],
          "group": "core",
          "key": "POWER",
          "lazy": false,
          "name": "POWER",
          "persist": false,
          "pure": true,
          "reference": [Function],
          "returns": "number",
          "testCases": Array [
            Object {
              "input": Array [
                2,
                3,
              ],
              "output": 8,
            },
          ],
        },
        "RAND": Object {
          "acceptError": false,
          "args": Array [],
          "async": false,
          "chain": false,
          "description": "Returns a random number between 0 and 1.",
          "effect": false,
          "examples": Array [
            Object {
              "codeFragments": Array [
                Object {
                  "attrs": undefined,
                  "code": "Equal",
                  "display": "=",
                  "errors": Array [],
                  "hide": false,
                  "type": "any",
                },
                Object {
                  "attrs": undefined,
                  "code": "Function",
                  "display": "RAND",
                  "errors": Array [],
                  "hide": false,
                  "type": "any",
                },
                Object {
                  "attrs": undefined,
                  "code": "LParen",
                  "display": "(",
                  "errors": Array [],
                  "hide": false,
                  "type": "any",
                },
                Object {
                  "attrs": undefined,
                  "code": "RParen",
                  "display": ")",
                  "errors": Array [],
                  "hide": false,
                  "type": "number",
                },
              ],
              "input": "=RAND()",
              "output": Object {
                "result": 0.513,
                "type": "number",
              },
            },
          ],
          "group": "core",
          "key": "RAND",
          "lazy": false,
          "name": "RAND",
          "persist": false,
          "pure": false,
          "reference": [Function],
          "returns": "number",
          "testCases": Array [],
        },
        "RANDBETWEEN": Object {
          "acceptError": false,
          "args": Array [
            Object {
              "name": "min",
              "type": "number",
            },
            Object {
              "name": "max",
              "type": "number",
            },
          ],
          "async": false,
          "chain": false,
          "description": "Returns a random number between two numbers.",
          "effect": false,
          "examples": Array [
            Object {
              "codeFragments": Array [
                Object {
                  "attrs": undefined,
                  "code": "Equal",
                  "display": "=",
                  "errors": Array [],
                  "hide": false,
                  "type": "any",
                },
                Object {
                  "attrs": undefined,
                  "code": "Function",
                  "display": "RANDBETWEEN",
                  "errors": Array [],
                  "hide": false,
                  "type": "any",
                },
                Object {
                  "attrs": undefined,
                  "code": "LParen",
                  "display": "(",
                  "errors": Array [],
                  "hide": false,
                  "type": "any",
                },
                Object {
                  "attrs": undefined,
                  "code": "NumberLiteral",
                  "display": "1",
                  "errors": Array [],
                  "hide": false,
                  "type": "number",
                },
                Object {
                  "attrs": undefined,
                  "code": "Comma",
                  "display": ",",
                  "errors": Array [],
                  "hide": false,
                  "type": "any",
                },
                Object {
                  "attrs": undefined,
                  "code": "NumberLiteral",
                  "display": "10",
                  "errors": Array [],
                  "hide": false,
                  "type": "number",
                },
                Object {
                  "attrs": undefined,
                  "code": "RParen",
                  "display": ")",
                  "errors": Array [],
                  "hide": false,
                  "type": "number",
                },
              ],
              "input": "=RANDBETWEEN(1, 10)",
              "output": Object {
                "result": 5.13,
                "type": "number",
              },
            },
          ],
          "group": "core",
          "key": "RANDBETWEEN",
          "lazy": false,
          "name": "RANDBETWEEN",
          "persist": false,
          "pure": false,
          "reference": [Function],
          "returns": "number",
          "testCases": Array [],
        },
        "REQUEST_GET": Object {
          "acceptError": false,
          "args": Array [
            Object {
              "name": "url",
              "type": "string",
            },
          ],
          "async": true,
          "chain": false,
          "description": "request get",
          "effect": true,
          "examples": Array [
            Object {
              "codeFragments": Array [
                Object {
                  "attrs": undefined,
                  "code": "Equal",
                  "display": "=",
                  "errors": Array [],
                  "hide": false,
                  "type": "any",
                },
                Object {
                  "attrs": undefined,
                  "code": "Function",
                  "display": "REQUEST_GET",
                  "errors": Array [],
                  "hide": false,
                  "type": "any",
                },
                Object {
                  "attrs": undefined,
                  "code": "LParen",
                  "display": "(",
                  "errors": Array [],
                  "hide": false,
                  "type": "any",
                },
                Object {
                  "attrs": undefined,
                  "code": "NumberLiteral",
                  "display": "10",
                  "errors": Array [
                    Object {
                      "message": "Expected string but got number",
                      "type": "type",
                    },
                  ],
                  "hide": false,
                  "type": "number",
                },
                Object {
                  "attrs": undefined,
                  "code": "RParen",
                  "display": ")",
                  "errors": Array [],
                  "hide": false,
                  "type": "Record",
                },
              ],
              "input": "=REQUEST_GET(10)",
              "output": Object {
                "result": Object {},
                "subType": "any",
                "type": "Record",
              },
            },
          ],
          "group": "core",
          "key": "REQUEST_GET",
          "lazy": false,
          "name": "REQUEST_GET",
          "persist": false,
          "pure": false,
          "reference": [Function],
          "returns": "Record",
          "testCases": Array [],
        },
        "ROUND": Object {
          "acceptError": false,
          "args": Array [
            Object {
              "name": "number",
              "type": "number",
            },
          ],
          "async": false,
          "chain": false,
          "description": "Returns the number rounded to the specified number of decimal places.",
          "effect": false,
          "examples": Array [
            Object {
              "codeFragments": Array [
                Object {
                  "attrs": undefined,
                  "code": "Equal",
                  "display": "=",
                  "errors": Array [],
                  "hide": false,
                  "type": "any",
                },
                Object {
                  "attrs": undefined,
                  "code": "Function",
                  "display": "ROUND",
                  "errors": Array [],
                  "hide": false,
                  "type": "any",
                },
                Object {
                  "attrs": undefined,
                  "code": "LParen",
                  "display": "(",
                  "errors": Array [],
                  "hide": false,
                  "type": "any",
                },
                Object {
                  "attrs": undefined,
                  "code": "NumberLiteral",
                  "display": "1.5",
                  "errors": Array [],
                  "hide": false,
                  "type": "number",
                },
                Object {
                  "attrs": undefined,
                  "code": "RParen",
                  "display": ")",
                  "errors": Array [],
                  "hide": false,
                  "type": "number",
                },
              ],
              "input": "=ROUND(1.5)",
              "output": Object {
                "result": 2,
                "type": "number",
              },
            },
          ],
          "group": "core",
          "key": "ROUND",
          "lazy": false,
          "name": "ROUND",
          "persist": false,
          "pure": true,
          "reference": [Function],
          "returns": "number",
          "testCases": Array [],
        },
        "ROW_COUNT": Object {
          "acceptError": false,
          "args": Array [
            Object {
              "name": "spreadsheet",
              "type": "Spreadsheet",
            },
          ],
          "async": false,
          "chain": true,
          "description": "Returns the row size of the spreadsheet.",
          "effect": false,
          "examples": Array [
            Object {
              "codeFragments": Array [
                Object {
                  "attrs": undefined,
                  "code": "Equal",
                  "display": "=",
                  "errors": Array [],
                  "hide": false,
                  "type": "any",
                },
                Object {
                  "attrs": undefined,
                  "code": "NumberLiteral",
                  "display": "123",
                  "errors": Array [],
                  "hide": false,
                  "type": "number",
                },
              ],
              "input": "=123",
              "output": Object {
                "result": 123,
                "type": "number",
              },
            },
          ],
          "group": "core",
          "key": "ROW_COUNT",
          "lazy": false,
          "name": "ROW_COUNT",
          "persist": false,
          "pure": false,
          "reference": [Function],
          "returns": "number",
          "testCases": Array [],
        },
        "SELECT": Object {
          "acceptError": false,
          "args": Array [
            Object {
              "name": "options",
              "type": "Array",
            },
            Object {
              "name": "onChange",
              "type": "Function",
            },
          ],
          "async": false,
          "chain": false,
          "description": "Build select",
          "effect": false,
          "examples": Array [
            Object {
              "codeFragments": Array [
                Object {
                  "attrs": undefined,
                  "code": "Equal",
                  "display": "=",
                  "errors": Array [],
                  "hide": false,
                  "type": "any",
                },
                Object {
                  "attrs": undefined,
                  "code": "Function",
                  "display": "Select",
                  "errors": Array [],
                  "hide": false,
                  "type": "any",
                },
                Object {
                  "attrs": undefined,
                  "code": "LParen",
                  "display": "(",
                  "errors": Array [],
                  "hide": false,
                  "type": "any",
                },
                Object {
                  "attrs": undefined,
                  "code": "StringLiteral",
                  "display": "\\"name\\"",
                  "errors": Array [
                    Object {
                      "message": "Argument count mismatch",
                      "type": "deps",
                    },
                    Object {
                      "message": "Expected Array but got string",
                      "type": "type",
                    },
                  ],
                  "hide": false,
                  "type": "string",
                },
                Object {
                  "attrs": undefined,
                  "code": "RParen",
                  "display": ")",
                  "errors": Array [],
                  "hide": false,
                  "type": "Select",
                },
              ],
              "input": "=Select(\\"name\\")",
              "output": null,
            },
          ],
          "feature": "formula-controls",
          "group": "core",
          "key": "SELECT",
          "lazy": false,
          "name": "Select",
          "persist": false,
          "pure": true,
          "reference": [Function],
          "returns": "Select",
          "testCases": Array [],
        },
        "SET": Object {
          "acceptError": false,
          "args": Array [
            Object {
              "name": "name",
              "type": "Reference",
            },
            Object {
              "name": "body",
              "type": "Cst",
            },
          ],
          "async": false,
          "chain": false,
          "description": "Set variable",
          "effect": false,
          "examples": Array [
            Object {
              "codeFragments": Array [
                Object {
                  "attrs": undefined,
                  "code": "Equal",
                  "display": "=",
                  "errors": Array [],
                  "hide": false,
                  "type": "any",
                },
                Object {
                  "attrs": undefined,
                  "code": "Function",
                  "display": "Set",
                  "errors": Array [],
                  "hide": false,
                  "type": "any",
                },
                Object {
                  "attrs": undefined,
                  "code": "LParen",
                  "display": "(",
                  "errors": Array [],
                  "hide": false,
                  "type": "any",
                },
                Object {
                  "attrs": undefined,
                  "code": "Function",
                  "display": "A",
                  "errors": Array [
                    Object {
                      "message": "Unknown function A",
                      "type": "syntax",
                    },
                  ],
                  "hide": false,
                  "type": "any",
                },
                Object {
                  "attrs": undefined,
                  "code": "Comma",
                  "display": ",",
                  "errors": Array [],
                  "hide": false,
                  "type": "any",
                },
                Object {
                  "attrs": undefined,
                  "code": "Function",
                  "display": "A",
                  "errors": Array [
                    Object {
                      "message": "Unknown function A",
                      "type": "syntax",
                    },
                  ],
                  "hide": false,
                  "type": "any",
                },
                Object {
                  "attrs": undefined,
                  "code": "Plus",
                  "display": "+",
                  "errors": Array [],
                  "hide": false,
                  "type": "number",
                },
                Object {
                  "attrs": undefined,
                  "code": "NumberLiteral",
                  "display": "1",
                  "errors": Array [],
                  "hide": false,
                  "type": "number",
                },
                Object {
                  "attrs": undefined,
                  "code": "RParen",
                  "display": ")",
                  "errors": Array [],
                  "hide": false,
                  "type": "Function",
                },
              ],
              "input": "=Set(A, A+1)",
              "output": null,
            },
          ],
          "group": "core",
          "key": "SET",
          "lazy": true,
          "name": "Set",
          "persist": false,
          "pure": false,
          "reference": [Function],
          "returns": "Function",
          "testCases": Array [],
        },
        "SLEEP": Object {
          "acceptError": false,
          "args": Array [
            Object {
              "name": "number",
              "type": "number",
            },
          ],
          "async": true,
          "chain": false,
          "description": "Sleep for a given number of milliseconds",
          "effect": false,
          "examples": Array [
            Object {
              "codeFragments": Array [
                Object {
                  "attrs": undefined,
                  "code": "Equal",
                  "display": "=",
                  "errors": Array [],
                  "hide": false,
                  "type": "any",
                },
                Object {
                  "attrs": undefined,
                  "code": "Function",
                  "display": "SLEEP",
                  "errors": Array [],
                  "hide": false,
                  "type": "any",
                },
                Object {
                  "attrs": undefined,
                  "code": "LParen",
                  "display": "(",
                  "errors": Array [],
                  "hide": false,
                  "type": "any",
                },
                Object {
                  "attrs": undefined,
                  "code": "NumberLiteral",
                  "display": "10",
                  "errors": Array [],
                  "hide": false,
                  "type": "number",
                },
                Object {
                  "attrs": undefined,
                  "code": "RParen",
                  "display": ")",
                  "errors": Array [],
                  "hide": false,
                  "type": "number",
                },
              ],
              "input": "=SLEEP(10)",
              "output": Object {
                "result": 10,
                "type": "number",
              },
            },
          ],
          "group": "core",
          "key": "SLEEP",
          "lazy": false,
          "name": "SLEEP",
          "persist": false,
          "pure": false,
          "reference": [Function],
          "returns": "number",
          "testCases": Array [],
        },
        "SPLIT": Object {
          "acceptError": false,
          "args": Array [
            Object {
              "name": "string",
              "type": "string",
            },
            Object {
              "default": Object {
                "result": "",
                "type": "string",
              },
              "name": "separator",
              "type": "string",
            },
          ],
          "async": false,
          "chain": true,
          "description": "Returns an array of strings that result from splitting the string at the given separator.",
          "effect": false,
          "examples": Array [
            Object {
              "codeFragments": Array [
                Object {
                  "attrs": undefined,
                  "code": "Equal",
                  "display": "=",
                  "errors": Array [],
                  "hide": false,
                  "type": "any",
                },
                Object {
                  "attrs": undefined,
                  "code": "Function",
                  "display": "Split",
                  "errors": Array [],
                  "hide": false,
                  "type": "any",
                },
                Object {
                  "attrs": undefined,
                  "code": "LParen",
                  "display": "(",
                  "errors": Array [],
                  "hide": false,
                  "type": "any",
                },
                Object {
                  "attrs": undefined,
                  "code": "StringLiteral",
                  "display": "\\"foo\\"",
                  "errors": Array [],
                  "hide": false,
                  "type": "string",
                },
                Object {
                  "attrs": undefined,
                  "code": "Comma",
                  "display": ",",
                  "errors": Array [],
                  "hide": false,
                  "type": "any",
                },
                Object {
                  "attrs": undefined,
                  "code": "StringLiteral",
                  "display": "\\",\\"",
                  "errors": Array [],
                  "hide": false,
                  "type": "string",
                },
                Object {
                  "attrs": undefined,
                  "code": "RParen",
                  "display": ")",
                  "errors": Array [],
                  "hide": false,
                  "type": "Array",
                },
              ],
              "input": "=Split(\\"foo\\", \\",\\")",
              "output": Object {
                "result": Array [
                  Object {
                    "result": "foo",
                    "type": "string",
                  },
                ],
                "subType": "string",
                "type": "Array",
              },
            },
          ],
          "group": "core",
          "key": "SPLIT",
          "lazy": false,
          "name": "Split",
          "persist": false,
          "pure": true,
          "reference": [Function],
          "returns": "Array",
          "testCases": Array [],
        },
        "SPREADSHEET": Object {
          "acceptError": false,
          "args": Array [
            Object {
              "name": "array",
              "type": "Array",
            },
          ],
          "async": false,
          "chain": true,
          "description": "Returns the spreadsheet.",
          "effect": false,
          "examples": Array [
            Object {
              "codeFragments": Array [
                Object {
                  "attrs": undefined,
                  "code": "Equal",
                  "display": "=",
                  "errors": Array [],
                  "hide": false,
                  "type": "any",
                },
                Object {
                  "attrs": undefined,
                  "code": "NumberLiteral",
                  "display": "123",
                  "errors": Array [],
                  "hide": false,
                  "type": "number",
                },
              ],
              "input": "=123",
              "output": null,
            },
          ],
          "group": "core",
          "key": "SPREADSHEET",
          "lazy": false,
          "name": "Spreadsheet",
          "persist": false,
          "pure": true,
          "reference": [Function],
          "returns": "Spreadsheet",
          "testCases": Array [],
        },
        "SQRT": Object {
          "acceptError": false,
          "args": Array [
            Object {
              "name": "number",
              "type": "number",
            },
          ],
          "async": false,
          "chain": false,
          "description": "Returns the square root of a number.",
          "effect": false,
          "examples": Array [
            Object {
              "codeFragments": Array [
                Object {
                  "attrs": undefined,
                  "code": "Equal",
                  "display": "=",
                  "errors": Array [],
                  "hide": false,
                  "type": "any",
                },
                Object {
                  "attrs": undefined,
                  "code": "Function",
                  "display": "SQRT",
                  "errors": Array [],
                  "hide": false,
                  "type": "any",
                },
                Object {
                  "attrs": undefined,
                  "code": "LParen",
                  "display": "(",
                  "errors": Array [],
                  "hide": false,
                  "type": "any",
                },
                Object {
                  "attrs": undefined,
                  "code": "NumberLiteral",
                  "display": "4",
                  "errors": Array [],
                  "hide": false,
                  "type": "number",
                },
                Object {
                  "attrs": undefined,
                  "code": "RParen",
                  "display": ")",
                  "errors": Array [],
                  "hide": false,
                  "type": "number",
                },
              ],
              "input": "=SQRT(4)",
              "output": Object {
                "result": 2,
                "type": "number",
              },
            },
          ],
          "group": "core",
          "key": "SQRT",
          "lazy": false,
          "name": "SQRT",
          "persist": false,
          "pure": true,
          "reference": [Function],
          "returns": "number",
          "testCases": Array [],
        },
        "SQRTPI": Object {
          "acceptError": false,
          "args": Array [
            Object {
              "name": "number",
              "type": "number",
            },
          ],
          "async": false,
          "chain": false,
          "description": "Returns the square root of a number multiplied by pi.",
          "effect": false,
          "examples": Array [
            Object {
              "codeFragments": Array [
                Object {
                  "attrs": undefined,
                  "code": "Equal",
                  "display": "=",
                  "errors": Array [],
                  "hide": false,
                  "type": "any",
                },
                Object {
                  "attrs": undefined,
                  "code": "Function",
                  "display": "SQRTPI",
                  "errors": Array [],
                  "hide": false,
                  "type": "any",
                },
                Object {
                  "attrs": undefined,
                  "code": "LParen",
                  "display": "(",
                  "errors": Array [],
                  "hide": false,
                  "type": "any",
                },
                Object {
                  "attrs": undefined,
                  "code": "NumberLiteral",
                  "display": "4",
                  "errors": Array [],
                  "hide": false,
                  "type": "number",
                },
                Object {
                  "attrs": undefined,
                  "code": "RParen",
                  "display": ")",
                  "errors": Array [],
                  "hide": false,
                  "type": "number",
                },
              ],
              "input": "=SQRTPI(4)",
              "output": Object {
                "result": 3.5449077018110318,
                "type": "number",
              },
            },
          ],
          "group": "core",
          "key": "SQRTPI",
          "lazy": false,
          "name": "SQRTPI",
          "persist": false,
          "pure": true,
          "reference": [Function],
          "returns": "number",
          "testCases": Array [],
        },
        "START_WITH": Object {
          "acceptError": false,
          "args": Array [
            Object {
              "name": "string",
              "type": "string",
            },
            Object {
              "name": "prefix",
              "type": "string",
            },
          ],
          "async": false,
          "chain": true,
          "description": "Returns true if the sequence of elements of searchString converted to a String",
          "effect": false,
          "examples": Array [
            Object {
              "codeFragments": Array [
                Object {
                  "attrs": undefined,
                  "code": "Equal",
                  "display": "=",
                  "errors": Array [],
                  "hide": false,
                  "type": "any",
                },
                Object {
                  "attrs": undefined,
                  "code": "Function",
                  "display": "START_WITH",
                  "errors": Array [],
                  "hide": false,
                  "type": "any",
                },
                Object {
                  "attrs": undefined,
                  "code": "LParen",
                  "display": "(",
                  "errors": Array [],
                  "hide": false,
                  "type": "any",
                },
                Object {
                  "attrs": undefined,
                  "code": "StringLiteral",
                  "display": "\\"foo\\"",
                  "errors": Array [],
                  "hide": false,
                  "type": "string",
                },
                Object {
                  "attrs": undefined,
                  "code": "Comma",
                  "display": ",",
                  "errors": Array [],
                  "hide": false,
                  "type": "any",
                },
                Object {
                  "attrs": undefined,
                  "code": "StringLiteral",
                  "display": "\\"bar\\"",
                  "errors": Array [],
                  "hide": false,
                  "type": "string",
                },
                Object {
                  "attrs": undefined,
                  "code": "RParen",
                  "display": ")",
                  "errors": Array [],
                  "hide": false,
                  "type": "boolean",
                },
              ],
              "input": "=START_WITH(\\"foo\\", \\"bar\\")",
              "output": Object {
                "result": false,
                "type": "boolean",
              },
            },
            Object {
              "codeFragments": Array [
                Object {
                  "attrs": undefined,
                  "code": "Equal",
                  "display": "=",
                  "errors": Array [],
                  "hide": false,
                  "type": "any",
                },
                Object {
                  "attrs": undefined,
                  "code": "Function",
                  "display": "START_WITH",
                  "errors": Array [],
                  "hide": false,
                  "type": "any",
                },
                Object {
                  "attrs": undefined,
                  "code": "LParen",
                  "display": "(",
                  "errors": Array [],
                  "hide": false,
                  "type": "any",
                },
                Object {
                  "attrs": undefined,
                  "code": "StringLiteral",
                  "display": "\\"foobar\\"",
                  "errors": Array [],
                  "hide": false,
                  "type": "string",
                },
                Object {
                  "attrs": undefined,
                  "code": "Comma",
                  "display": ",",
                  "errors": Array [],
                  "hide": false,
                  "type": "any",
                },
                Object {
                  "attrs": undefined,
                  "code": "StringLiteral",
                  "display": "\\"foo\\"",
                  "errors": Array [],
                  "hide": false,
                  "type": "string",
                },
                Object {
                  "attrs": undefined,
                  "code": "RParen",
                  "display": ")",
                  "errors": Array [],
                  "hide": false,
                  "type": "boolean",
                },
              ],
              "input": "=START_WITH(\\"foobar\\", \\"foo\\")",
              "output": Object {
                "result": true,
                "type": "boolean",
              },
            },
          ],
          "group": "core",
          "key": "START_WITH",
          "lazy": false,
          "name": "START_WITH",
          "persist": false,
          "pure": true,
          "reference": [Function],
          "returns": "boolean",
          "testCases": Array [
            Object {
              "input": Array [
                Object {
                  "result": "foobar",
                  "type": "string",
                },
                Object {
                  "result": "foo",
                  "type": "string",
                },
              ],
              "output": true,
            },
            Object {
              "input": Array [
                Object {
                  "result": "",
                  "type": "string",
                },
                Object {
                  "result": "",
                  "type": "string",
                },
              ],
              "output": true,
            },
          ],
        },
        "SUM": Object {
          "acceptError": false,
          "args": Array [
            Object {
              "name": "column",
              "type": "Column",
            },
          ],
          "async": false,
          "chain": true,
          "description": "Returns the sum of the column in the spreadsheet.",
          "effect": false,
          "examples": Array [
            Object {
              "codeFragments": Array [
                Object {
                  "attrs": undefined,
                  "code": "Equal",
                  "display": "=",
                  "errors": Array [],
                  "hide": false,
                  "type": "any",
                },
                Object {
                  "attrs": undefined,
                  "code": "NumberLiteral",
                  "display": "123",
                  "errors": Array [],
                  "hide": false,
                  "type": "number",
                },
              ],
              "input": "=123",
              "output": Object {
                "result": 123,
                "type": "number",
              },
            },
          ],
          "group": "core",
          "key": "SUM",
          "lazy": false,
          "name": "SUM",
          "persist": false,
          "pure": false,
          "reference": [Function],
          "returns": "number",
          "testCases": Array [],
        },
        "SUM1": Object {
          "acceptError": false,
          "args": Array [
            Object {
              "name": "numbers",
              "spread": true,
              "type": "number",
            },
          ],
          "async": false,
          "chain": false,
          "description": "Returns the sum of the numbers in the list.",
          "effect": false,
          "examples": Array [
            Object {
              "codeFragments": Array [
                Object {
                  "attrs": undefined,
                  "code": "Equal",
                  "display": "=",
                  "errors": Array [],
                  "hide": false,
                  "type": "any",
                },
                Object {
                  "attrs": undefined,
                  "code": "Function",
                  "display": "SUM",
                  "errors": Array [],
                  "hide": false,
                  "type": "any",
                },
                Object {
                  "attrs": undefined,
                  "code": "LParen",
                  "display": "(",
                  "errors": Array [],
                  "hide": false,
                  "type": "any",
                },
                Object {
                  "attrs": undefined,
                  "code": "NumberLiteral",
                  "display": "-1",
                  "errors": Array [
                    Object {
                      "message": "Argument count mismatch",
                      "type": "deps",
                    },
                    Object {
                      "message": "Expected Column but got number",
                      "type": "type",
                    },
                  ],
                  "hide": false,
                  "type": "number",
                },
                Object {
                  "attrs": undefined,
                  "code": "Comma",
                  "display": ",",
                  "errors": Array [
                    Object {
                      "message": "Argument count mismatch",
                      "type": "deps",
                    },
                  ],
                  "hide": false,
                  "type": "any",
                },
                Object {
                  "attrs": undefined,
                  "code": "NumberLiteral",
                  "display": "0",
                  "errors": Array [
                    Object {
                      "message": "Argument count mismatch",
                      "type": "deps",
                    },
                  ],
                  "hide": false,
                  "type": "number",
                },
                Object {
                  "attrs": undefined,
                  "code": "Comma",
                  "display": ",",
                  "errors": Array [
                    Object {
                      "message": "Argument count mismatch",
                      "type": "deps",
                    },
                  ],
                  "hide": false,
                  "type": "any",
                },
                Object {
                  "attrs": undefined,
                  "code": "NumberLiteral",
                  "display": "4",
                  "errors": Array [
                    Object {
                      "message": "Argument count mismatch",
                      "type": "deps",
                    },
                  ],
                  "hide": false,
                  "type": "number",
                },
                Object {
                  "attrs": undefined,
                  "code": "RParen",
                  "display": ")",
                  "errors": Array [],
                  "hide": false,
                  "type": "number",
                },
              ],
              "input": "=SUM(-1, 0, 4)",
              "output": Object {
                "result": 3,
                "type": "number",
              },
            },
          ],
          "group": "core",
          "key": "SUM1",
          "lazy": false,
          "name": "SUM1",
          "persist": false,
          "pure": true,
          "reference": [Function],
          "returns": "number",
          "testCases": Array [],
        },
        "SUMIFS": Object {
          "acceptError": false,
          "args": Array [
            Object {
              "name": "column1",
              "type": "Column",
            },
            Object {
              "name": "column2",
              "type": "Column",
            },
            Object {
              "name": "condition",
              "type": "Predicate",
            },
          ],
          "async": false,
          "chain": false,
          "description": "Returns the sum of the column in the spreadsheet.",
          "effect": false,
          "examples": Array [
            Object {
              "codeFragments": Array [
                Object {
                  "attrs": undefined,
                  "code": "Equal",
                  "display": "=",
                  "errors": Array [],
                  "hide": false,
                  "type": "any",
                },
                Object {
                  "attrs": undefined,
                  "code": "NumberLiteral",
                  "display": "123",
                  "errors": Array [],
                  "hide": false,
                  "type": "number",
                },
              ],
              "input": "=123",
              "output": Object {
                "result": 123,
                "type": "number",
              },
            },
          ],
          "group": "core",
          "key": "SUMIFS",
          "lazy": false,
          "name": "SUMIFS",
          "persist": false,
          "pure": false,
          "reference": [Function],
          "returns": "number",
          "testCases": Array [],
        },
        "SUMPRODUCT": Object {
          "acceptError": false,
          "args": Array [
            Object {
              "name": "column1",
              "type": "Column",
            },
            Object {
              "name": "column2",
              "type": "Column",
            },
          ],
          "async": false,
          "chain": false,
          "description": "Returns the sum of the column in the spreadsheet.",
          "effect": false,
          "examples": Array [
            Object {
              "codeFragments": Array [
                Object {
                  "attrs": undefined,
                  "code": "Equal",
                  "display": "=",
                  "errors": Array [],
                  "hide": false,
                  "type": "any",
                },
                Object {
                  "attrs": undefined,
                  "code": "NumberLiteral",
                  "display": "123",
                  "errors": Array [],
                  "hide": false,
                  "type": "number",
                },
              ],
              "input": "=123",
              "output": Object {
                "result": 123,
                "type": "number",
              },
            },
          ],
          "group": "core",
          "key": "SUMPRODUCT",
          "lazy": false,
          "name": "SUMPRODUCT",
          "persist": false,
          "pure": false,
          "reference": [Function],
          "returns": "number",
          "testCases": Array [],
        },
        "SWITCH": Object {
          "acceptError": false,
          "args": Array [
            Object {
              "name": "name",
              "type": "boolean",
            },
            Object {
              "name": "onChange",
              "type": "Function",
            },
          ],
          "async": false,
          "chain": false,
          "description": "Build switch",
          "effect": false,
          "examples": Array [
            Object {
              "codeFragments": Array [
                Object {
                  "attrs": undefined,
                  "code": "Equal",
                  "display": "=",
                  "errors": Array [],
                  "hide": false,
                  "type": "any",
                },
                Object {
                  "attrs": undefined,
                  "code": "Function",
                  "display": "Switch",
                  "errors": Array [],
                  "hide": false,
                  "type": "any",
                },
                Object {
                  "attrs": undefined,
                  "code": "LParen",
                  "display": "(",
                  "errors": Array [],
                  "hide": false,
                  "type": "any",
                },
                Object {
                  "attrs": undefined,
                  "code": "StringLiteral",
                  "display": "\\"name\\"",
                  "errors": Array [
                    Object {
                      "message": "Argument count mismatch",
                      "type": "deps",
                    },
                    Object {
                      "message": "Expected boolean but got string",
                      "type": "type",
                    },
                  ],
                  "hide": false,
                  "type": "string",
                },
                Object {
                  "attrs": undefined,
                  "code": "RParen",
                  "display": ")",
                  "errors": Array [],
                  "hide": false,
                  "type": "Switch",
                },
              ],
              "input": "=Switch(\\"name\\")",
              "output": null,
            },
          ],
          "feature": "formula-controls",
          "group": "core",
          "key": "SWITCH",
          "lazy": false,
          "name": "Switch",
          "persist": false,
          "pure": true,
          "reference": [Function],
          "returns": "Switch",
          "testCases": Array [],
        },
        "T": Object {
          "acceptError": true,
          "args": Array [
            Object {
              "name": "obj",
              "type": "any",
            },
          ],
          "async": false,
          "chain": true,
          "description": "Returns current object",
          "effect": false,
          "examples": Array [
            Object {
              "codeFragments": Array [
                Object {
                  "attrs": undefined,
                  "code": "Equal",
                  "display": "=",
                  "errors": Array [],
                  "hide": false,
                  "type": "any",
                },
                Object {
                  "attrs": undefined,
                  "code": "Function",
                  "display": "T",
                  "errors": Array [],
                  "hide": false,
                  "type": "any",
                },
                Object {
                  "attrs": undefined,
                  "code": "LParen",
                  "display": "(",
                  "errors": Array [],
                  "hide": false,
                  "type": "any",
                },
                Object {
                  "attrs": undefined,
                  "code": "NumberLiteral",
                  "display": "100",
                  "errors": Array [],
                  "hide": false,
                  "type": "number",
                },
                Object {
                  "attrs": undefined,
                  "code": "RParen",
                  "display": ")",
                  "errors": Array [],
                  "hide": false,
                  "type": "any",
                },
              ],
              "input": "=T(100)",
              "output": Object {
                "result": 100,
                "type": "number",
              },
            },
            Object {
              "codeFragments": Array [
                Object {
                  "attrs": undefined,
                  "code": "Equal",
                  "display": "=",
                  "errors": Array [],
                  "hide": false,
                  "type": "any",
                },
                Object {
                  "attrs": undefined,
                  "code": "Function",
                  "display": "T",
                  "errors": Array [],
                  "hide": false,
                  "type": "any",
                },
                Object {
                  "attrs": undefined,
                  "code": "LParen",
                  "display": "(",
                  "errors": Array [],
                  "hide": false,
                  "type": "any",
                },
                Object {
                  "attrs": undefined,
                  "code": "StringLiteral",
                  "display": "\\"foo\\"",
                  "errors": Array [],
                  "hide": false,
                  "type": "string",
                },
                Object {
                  "attrs": undefined,
                  "code": "RParen",
                  "display": ")",
                  "errors": Array [],
                  "hide": false,
                  "type": "any",
                },
              ],
              "input": "=T(\\"foo\\")",
              "output": Object {
                "result": "foo",
                "type": "string",
              },
            },
          ],
          "group": "core",
          "key": "T",
          "lazy": false,
          "name": "T",
          "persist": false,
          "pure": true,
          "reference": [Function],
          "returns": "any",
          "testCases": Array [],
        },
        "TOARRAY": Object {
          "acceptError": false,
          "args": Array [
            Object {
              "name": "input",
              "type": "any",
            },
          ],
          "async": false,
          "chain": true,
          "description": "Converts the value to an array.",
          "effect": false,
          "examples": Array [
            Object {
              "codeFragments": Array [
                Object {
                  "attrs": undefined,
                  "code": "Equal",
                  "display": "=",
                  "errors": Array [],
                  "hide": false,
                  "type": "any",
                },
                Object {
                  "attrs": undefined,
                  "code": "NumberLiteral",
                  "display": "123",
                  "errors": Array [],
                  "hide": false,
                  "type": "number",
                },
              ],
              "input": "=123",
              "output": Object {
                "result": Array [],
                "subType": "void",
                "type": "Array",
              },
            },
          ],
          "group": "core",
          "key": "TOARRAY",
          "lazy": false,
          "name": "toArray",
          "persist": false,
          "pure": true,
          "reference": [Function],
          "returns": "Array",
          "testCases": Array [],
        },
        "TOBAR": Object {
          "acceptError": false,
          "args": Array [
            Object {
              "name": "record",
              "type": "Record",
            },
          ],
          "async": false,
          "chain": true,
          "description": "Converts a record to a bar",
          "effect": false,
          "examples": Array [
            Object {
              "codeFragments": Array [
                Object {
                  "attrs": undefined,
                  "code": "Equal",
                  "display": "=",
                  "errors": Array [],
                  "hide": false,
                  "type": "any",
                },
                Object {
                  "attrs": undefined,
                  "code": "Function",
                  "display": "toBar",
                  "errors": Array [],
                  "hide": false,
                  "type": "any",
                },
                Object {
                  "attrs": undefined,
                  "code": "LParen",
                  "display": "(",
                  "errors": Array [],
                  "hide": false,
                  "type": "any",
                },
                Object {
                  "attrs": undefined,
                  "code": "LBrace",
                  "display": "{",
                  "errors": Array [],
                  "hide": false,
                  "type": "any",
                },
                Object {
                  "attrs": undefined,
                  "code": "RBrace",
                  "display": "}",
                  "errors": Array [],
                  "hide": false,
                  "type": "any",
                },
                Object {
                  "attrs": undefined,
                  "code": "RParen",
                  "display": ")",
                  "errors": Array [],
                  "hide": false,
                  "type": "Record",
                },
              ],
              "input": "=toBar({})",
              "output": Object {
                "result": Object {},
                "subType": "string",
                "type": "Record",
                "view": Object {
                  "attrs": Object {},
                  "type": "bar",
                },
              },
            },
          ],
          "group": "core",
          "key": "TOBAR",
          "lazy": false,
          "name": "toBar",
          "persist": false,
          "pure": true,
          "reference": [Function],
          "returns": "Record",
          "testCases": Array [],
        },
        "TONUMBER": Object {
          "acceptError": false,
          "args": Array [
            Object {
              "name": "string",
              "type": "string",
            },
          ],
          "async": false,
          "chain": true,
          "description": "Converts a string to a number",
          "effect": false,
          "examples": Array [
            Object {
              "codeFragments": Array [
                Object {
                  "attrs": undefined,
                  "code": "Equal",
                  "display": "=",
                  "errors": Array [],
                  "hide": false,
                  "type": "any",
                },
                Object {
                  "attrs": undefined,
                  "code": "Function",
                  "display": "toNumber",
                  "errors": Array [],
                  "hide": false,
                  "type": "any",
                },
                Object {
                  "attrs": undefined,
                  "code": "LParen",
                  "display": "(",
                  "errors": Array [],
                  "hide": false,
                  "type": "any",
                },
                Object {
                  "attrs": undefined,
                  "code": "StringLiteral",
                  "display": "\\"123\\"",
                  "errors": Array [],
                  "hide": false,
                  "type": "string",
                },
                Object {
                  "attrs": undefined,
                  "code": "RParen",
                  "display": ")",
                  "errors": Array [],
                  "hide": false,
                  "type": "number",
                },
              ],
              "input": "=toNumber(\\"123\\")",
              "output": Object {
                "result": 123,
                "type": "number",
              },
            },
            Object {
              "codeFragments": Array [
                Object {
                  "attrs": undefined,
                  "code": "Equal",
                  "display": "=",
                  "errors": Array [],
                  "hide": false,
                  "type": "any",
                },
                Object {
                  "attrs": undefined,
                  "code": "Function",
                  "display": "toNumber",
                  "errors": Array [],
                  "hide": false,
                  "type": "any",
                },
                Object {
                  "attrs": undefined,
                  "code": "LParen",
                  "display": "(",
                  "errors": Array [],
                  "hide": false,
                  "type": "any",
                },
                Object {
                  "attrs": undefined,
                  "code": "StringLiteral",
                  "display": "\\"foo\\"",
                  "errors": Array [],
                  "hide": false,
                  "type": "string",
                },
                Object {
                  "attrs": undefined,
                  "code": "RParen",
                  "display": ")",
                  "errors": Array [],
                  "hide": false,
                  "type": "number",
                },
              ],
              "input": "=toNumber(\\"foo\\")",
              "output": Object {
                "errorKind": "runtime",
                "result": "Not a number",
                "type": "Error",
              },
            },
          ],
          "group": "core",
          "key": "TONUMBER",
          "lazy": false,
          "name": "toNumber",
          "persist": false,
          "pure": true,
          "reference": [Function],
          "returns": "number",
          "testCases": Array [],
        },
        "TOQRCODE": Object {
          "acceptError": false,
          "args": Array [
            Object {
              "name": "string",
              "type": "string",
            },
          ],
          "async": false,
          "chain": true,
          "description": "Converts a string to a qrcode",
          "effect": false,
          "examples": Array [
            Object {
              "codeFragments": Array [
                Object {
                  "attrs": undefined,
                  "code": "Equal",
                  "display": "=",
                  "errors": Array [],
                  "hide": false,
                  "type": "any",
                },
                Object {
                  "attrs": undefined,
                  "code": "Function",
                  "display": "toQrcode",
                  "errors": Array [],
                  "hide": false,
                  "type": "any",
                },
                Object {
                  "attrs": undefined,
                  "code": "LParen",
                  "display": "(",
                  "errors": Array [],
                  "hide": false,
                  "type": "any",
                },
                Object {
                  "attrs": undefined,
                  "code": "StringLiteral",
                  "display": "\\"123\\"",
                  "errors": Array [],
                  "hide": false,
                  "type": "string",
                },
                Object {
                  "attrs": undefined,
                  "code": "RParen",
                  "display": ")",
                  "errors": Array [],
                  "hide": false,
                  "type": "string",
                },
              ],
              "input": "=toQrcode(\\"123\\")",
              "output": Object {
                "result": "123",
                "type": "string",
                "view": Object {
                  "attrs": Object {},
                  "type": "qrcode",
                },
              },
            },
          ],
          "group": "core",
          "key": "TOQRCODE",
          "lazy": false,
          "name": "toQrcode",
          "persist": false,
          "pure": true,
          "reference": [Function],
          "returns": "string",
          "testCases": Array [],
        },
        "TORECORD": Object {
          "acceptError": false,
          "args": Array [
            Object {
              "name": "input",
              "type": "any",
            },
          ],
          "async": false,
          "chain": true,
          "description": "Converts the value to a record.",
          "effect": false,
          "examples": Array [
            Object {
              "codeFragments": Array [
                Object {
                  "attrs": undefined,
                  "code": "Equal",
                  "display": "=",
                  "errors": Array [],
                  "hide": false,
                  "type": "any",
                },
                Object {
                  "attrs": undefined,
                  "code": "Function",
                  "display": "toRecord",
                  "errors": Array [],
                  "hide": false,
                  "type": "any",
                },
                Object {
                  "attrs": undefined,
                  "code": "LParen",
                  "display": "(",
                  "errors": Array [
                    Object {
                      "message": "Missing closing parenthesis",
                      "type": "syntax",
                    },
                  ],
                  "hide": false,
                  "type": "any",
                },
                Object {
                  "attrs": undefined,
                  "code": "Function",
                  "display": "new",
                  "errors": Array [
                    Object {
                      "message": "Function new not found",
                      "type": "deps",
                    },
                  ],
                  "hide": false,
                  "type": "any",
                },
                Object {
                  "attrs": undefined,
                  "code": "LParen",
                  "display": "",
                  "errors": Array [],
                  "hide": false,
                  "type": "any",
                },
                Object {
                  "attrs": undefined,
                  "code": "Function",
                  "display": "Date",
                  "errors": Array [
                    Object {
                      "message": "Miss argument",
                      "type": "deps",
                    },
                  ],
                  "hide": false,
                  "type": "any",
                },
                Object {
                  "attrs": undefined,
                  "code": "LParen",
                  "display": "(",
                  "errors": Array [],
                  "hide": false,
                  "type": "any",
                },
                Object {
                  "attrs": undefined,
                  "code": "RParen",
                  "display": ")",
                  "errors": Array [],
                  "hide": false,
                  "type": "Date",
                },
                Object {
                  "attrs": undefined,
                  "code": "RParen",
                  "display": ")",
                  "errors": Array [],
                  "hide": false,
                  "type": "any",
                },
              ],
              "input": "=toRecord(new Date())",
              "output": Object {
                "result": Object {
                  "day": Object {
                    "result": 1,
                    "type": "number",
                  },
                  "hour": Object {
                    "result": 0,
                    "type": "number",
                  },
                  "minutes": Object {
                    "result": 0,
                    "type": "number",
                  },
                  "month": Object {
                    "result": 0,
                    "type": "number",
                  },
                  "seconds": Object {
                    "result": 0,
                    "type": "number",
                  },
                  "year": Object {
                    "result": 1970,
                    "type": "number",
                  },
                },
                "subType": "number",
                "type": "Record",
              },
            },
            Object {
              "codeFragments": Array [
                Object {
                  "attrs": undefined,
                  "code": "Equal",
                  "display": "=",
                  "errors": Array [],
                  "hide": false,
                  "type": "any",
                },
                Object {
                  "attrs": undefined,
                  "code": "Function",
                  "display": "toRecord",
                  "errors": Array [],
                  "hide": false,
                  "type": "any",
                },
                Object {
                  "attrs": undefined,
                  "code": "LParen",
                  "display": "(",
                  "errors": Array [],
                  "hide": false,
                  "type": "any",
                },
                Object {
                  "attrs": undefined,
                  "code": "NumberLiteral",
                  "display": "123",
                  "errors": Array [],
                  "hide": false,
                  "type": "number",
                },
                Object {
                  "attrs": undefined,
                  "code": "RParen",
                  "display": ")",
                  "errors": Array [],
                  "hide": false,
                  "type": "Record",
                },
              ],
              "input": "=toRecord(123)",
              "output": Object {
                "errorKind": "runtime",
                "result": "Not support",
                "type": "Error",
              },
            },
          ],
          "group": "core",
          "key": "TORECORD",
          "lazy": false,
          "name": "toRecord",
          "persist": false,
          "pure": true,
          "reference": [Function],
          "returns": "Record",
          "testCases": Array [],
        },
        "TORECORDARRAY": Object {
          "acceptError": false,
          "args": Array [
            Object {
              "name": "spreadsheet",
              "type": "Spreadsheet",
            },
          ],
          "async": false,
          "chain": true,
          "description": "Converts the value to a record.",
          "effect": false,
          "examples": Array [
            Object {
              "codeFragments": Array [
                Object {
                  "attrs": undefined,
                  "code": "Equal",
                  "display": "=",
                  "errors": Array [],
                  "hide": false,
                  "type": "any",
                },
                Object {
                  "attrs": undefined,
                  "code": "NumberLiteral",
                  "display": "123",
                  "errors": Array [],
                  "hide": false,
                  "type": "number",
                },
              ],
              "input": "=123",
              "output": Object {
                "result": Array [],
                "subType": "void",
                "type": "Array",
              },
            },
          ],
          "group": "core",
          "key": "TORECORDARRAY",
          "lazy": false,
          "name": "toRecordArray",
          "persist": false,
          "pure": true,
          "reference": [Function],
          "returns": "Array",
          "testCases": Array [],
        },
        "TOSTRING": Object {
          "acceptError": true,
          "args": Array [
            Object {
              "name": "obj",
              "type": "any",
            },
          ],
          "async": false,
          "chain": true,
          "description": "Returns string representation of current object",
          "effect": false,
          "examples": Array [
            Object {
              "codeFragments": Array [
                Object {
                  "attrs": undefined,
                  "code": "Equal",
                  "display": "=",
                  "errors": Array [],
                  "hide": false,
                  "type": "any",
                },
                Object {
                  "attrs": undefined,
                  "code": "Function",
                  "display": "toString",
                  "errors": Array [],
                  "hide": false,
                  "type": "any",
                },
                Object {
                  "attrs": undefined,
                  "code": "LParen",
                  "display": "(",
                  "errors": Array [],
                  "hide": false,
                  "type": "any",
                },
                Object {
                  "attrs": undefined,
                  "code": "NumberLiteral",
                  "display": "100",
                  "errors": Array [],
                  "hide": false,
                  "type": "number",
                },
                Object {
                  "attrs": undefined,
                  "code": "RParen",
                  "display": ")",
                  "errors": Array [],
                  "hide": false,
                  "type": "string",
                },
              ],
              "input": "=toString(100)",
              "output": Object {
                "result": "100",
                "type": "string",
              },
            },
            Object {
              "codeFragments": Array [
                Object {
                  "attrs": undefined,
                  "code": "Equal",
                  "display": "=",
                  "errors": Array [],
                  "hide": false,
                  "type": "any",
                },
                Object {
                  "attrs": undefined,
                  "code": "Function",
                  "display": "toString",
                  "errors": Array [],
                  "hide": false,
                  "type": "any",
                },
                Object {
                  "attrs": undefined,
                  "code": "LParen",
                  "display": "(",
                  "errors": Array [],
                  "hide": false,
                  "type": "any",
                },
                Object {
                  "attrs": undefined,
                  "code": "StringLiteral",
                  "display": "\\"foo\\"",
                  "errors": Array [],
                  "hide": false,
                  "type": "string",
                },
                Object {
                  "attrs": undefined,
                  "code": "RParen",
                  "display": ")",
                  "errors": Array [],
                  "hide": false,
                  "type": "string",
                },
              ],
              "input": "=toString(\\"foo\\")",
              "output": Object {
                "result": "foo",
                "type": "string",
              },
            },
          ],
          "group": "core",
          "key": "TOSTRING",
          "lazy": false,
          "name": "toString",
          "persist": false,
          "pure": true,
          "reference": [Function],
          "returns": "string",
          "testCases": Array [],
        },
        "TRIM": Object {
          "acceptError": false,
          "args": Array [
            Object {
              "name": "str",
              "type": "string",
            },
          ],
          "async": false,
          "chain": true,
          "description": "Returns the string with leading and trailing whitespace removed.",
          "effect": false,
          "examples": Array [
            Object {
              "codeFragments": Array [
                Object {
                  "attrs": undefined,
                  "code": "Equal",
                  "display": "=",
                  "errors": Array [],
                  "hide": false,
                  "type": "any",
                },
                Object {
                  "attrs": undefined,
                  "code": "Function",
                  "display": "TRIM",
                  "errors": Array [],
                  "hide": false,
                  "type": "any",
                },
                Object {
                  "attrs": undefined,
                  "code": "LParen",
                  "display": "(",
                  "errors": Array [],
                  "hide": false,
                  "type": "any",
                },
                Object {
                  "attrs": undefined,
                  "code": "StringLiteral",
                  "display": "\\"  foo  \\"",
                  "errors": Array [],
                  "hide": false,
                  "type": "string",
                },
                Object {
                  "attrs": undefined,
                  "code": "RParen",
                  "display": ")",
                  "errors": Array [],
                  "hide": false,
                  "type": "string",
                },
              ],
              "input": "=TRIM(\\"  foo  \\")",
              "output": Object {
                "result": "foo",
                "type": "string",
              },
            },
          ],
          "group": "core",
          "key": "TRIM",
          "lazy": false,
          "name": "TRIM",
          "persist": false,
          "pure": true,
          "reference": [Function],
          "returns": "string",
          "testCases": Array [
            Object {
              "input": Array [
                Object {
                  "result": " abc ",
                  "type": "string",
                },
              ],
              "output": "abc",
            },
          ],
        },
        "TRUNC": Object {
          "acceptError": false,
          "args": Array [
            Object {
              "name": "number",
              "type": "number",
            },
          ],
          "async": false,
          "chain": false,
          "description": "Returns the integer part of a number.",
          "effect": false,
          "examples": Array [
            Object {
              "codeFragments": Array [
                Object {
                  "attrs": undefined,
                  "code": "Equal",
                  "display": "=",
                  "errors": Array [],
                  "hide": false,
                  "type": "any",
                },
                Object {
                  "attrs": undefined,
                  "code": "Function",
                  "display": "TRUNC",
                  "errors": Array [],
                  "hide": false,
                  "type": "any",
                },
                Object {
                  "attrs": undefined,
                  "code": "LParen",
                  "display": "(",
                  "errors": Array [],
                  "hide": false,
                  "type": "any",
                },
                Object {
                  "attrs": undefined,
                  "code": "NumberLiteral",
                  "display": "1.5",
                  "errors": Array [],
                  "hide": false,
                  "type": "number",
                },
                Object {
                  "attrs": undefined,
                  "code": "RParen",
                  "display": ")",
                  "errors": Array [],
                  "hide": false,
                  "type": "number",
                },
              ],
              "input": "=TRUNC(1.5)",
              "output": Object {
                "result": 1,
                "type": "number",
              },
            },
          ],
          "group": "core",
          "key": "TRUNC",
          "lazy": false,
          "name": "TRUNC",
          "persist": false,
          "pure": true,
          "reference": [Function],
          "returns": "number",
          "testCases": Array [],
        },
        "TYPE": Object {
          "acceptError": true,
          "args": Array [
            Object {
              "name": "obj",
              "type": "any",
            },
          ],
          "async": false,
          "chain": true,
          "description": "Returns type of current object",
          "effect": false,
          "examples": Array [
            Object {
              "codeFragments": Array [
                Object {
                  "attrs": undefined,
                  "code": "Equal",
                  "display": "=",
                  "errors": Array [],
                  "hide": false,
                  "type": "any",
                },
                Object {
                  "attrs": undefined,
                  "code": "Function",
                  "display": "TYPE",
                  "errors": Array [],
                  "hide": false,
                  "type": "any",
                },
                Object {
                  "attrs": undefined,
                  "code": "LParen",
                  "display": "(",
                  "errors": Array [],
                  "hide": false,
                  "type": "any",
                },
                Object {
                  "attrs": undefined,
                  "code": "NumberLiteral",
                  "display": "100",
                  "errors": Array [],
                  "hide": false,
                  "type": "number",
                },
                Object {
                  "attrs": undefined,
                  "code": "RParen",
                  "display": ")",
                  "errors": Array [],
                  "hide": false,
                  "type": "string",
                },
              ],
              "input": "=TYPE(100)",
              "output": Object {
                "result": "number",
                "type": "string",
              },
            },
            Object {
              "codeFragments": Array [
                Object {
                  "attrs": undefined,
                  "code": "Equal",
                  "display": "=",
                  "errors": Array [],
                  "hide": false,
                  "type": "any",
                },
                Object {
                  "attrs": undefined,
                  "code": "Function",
                  "display": "TYPE",
                  "errors": Array [],
                  "hide": false,
                  "type": "any",
                },
                Object {
                  "attrs": undefined,
                  "code": "LParen",
                  "display": "(",
                  "errors": Array [],
                  "hide": false,
                  "type": "any",
                },
                Object {
                  "attrs": undefined,
                  "code": "StringLiteral",
                  "display": "\\"foo\\"",
                  "errors": Array [],
                  "hide": false,
                  "type": "string",
                },
                Object {
                  "attrs": undefined,
                  "code": "RParen",
                  "display": ")",
                  "errors": Array [],
                  "hide": false,
                  "type": "string",
                },
              ],
              "input": "=TYPE(\\"foo\\")",
              "output": Object {
                "result": "string",
                "type": "string",
              },
            },
          ],
          "group": "core",
          "key": "TYPE",
          "lazy": false,
          "name": "TYPE",
          "persist": false,
          "pure": true,
          "reference": [Function],
          "returns": "string",
          "testCases": Array [],
        },
        "VLOOKUP": Object {
          "acceptError": false,
          "args": Array [
            Object {
              "name": "match",
              "type": "any",
            },
            Object {
              "name": "spreadsheet",
              "type": "Spreadsheet",
            },
            Object {
              "name": "column",
              "type": "Column",
            },
            Object {
              "default": Object {
                "result": true,
                "type": "boolean",
              },
              "name": "range",
              "type": "boolean",
            },
          ],
          "async": false,
          "chain": true,
          "description": "Returns the value of the column in the spreadsheet that matches the match value.",
          "effect": false,
          "examples": Array [
            Object {
              "codeFragments": Array [
                Object {
                  "attrs": undefined,
                  "code": "Equal",
                  "display": "=",
                  "errors": Array [],
                  "hide": false,
                  "type": "any",
                },
                Object {
                  "attrs": undefined,
                  "code": "NumberLiteral",
                  "display": "123",
                  "errors": Array [],
                  "hide": false,
                  "type": "number",
                },
              ],
              "input": "=123",
              "output": Object {
                "result": "foo",
                "type": "string",
              },
            },
          ],
          "group": "core",
          "key": "VLOOKUP",
          "lazy": false,
          "name": "VLOOKUP",
          "persist": false,
          "pure": false,
          "reference": [Function],
          "returns": "string",
          "testCases": Array [],
        },
        "XLOOKUP": Object {
          "acceptError": false,
          "args": Array [
            Object {
              "name": "lookupValue",
              "type": "any",
            },
            Object {
              "name": "lookupColumn",
              "type": "Column",
            },
            Object {
              "name": "returnColumn",
              "type": "Column",
            },
            Object {
              "default": Object {
                "result": "",
                "type": "string",
              },
              "name": "notFoundValue",
              "type": "string",
            },
            Object {
              "default": Object {
                "result": 0,
                "type": "number",
              },
              "name": "matchMode",
              "type": "number",
            },
          ],
          "async": false,
          "chain": true,
          "description": "Returns the value of the column in the spreadsheet that matches the match value.",
          "effect": false,
          "examples": Array [
            Object {
              "codeFragments": Array [
                Object {
                  "attrs": undefined,
                  "code": "Equal",
                  "display": "=",
                  "errors": Array [],
                  "hide": false,
                  "type": "any",
                },
                Object {
                  "attrs": undefined,
                  "code": "NumberLiteral",
                  "display": "123",
                  "errors": Array [],
                  "hide": false,
                  "type": "number",
                },
              ],
              "input": "=123",
              "output": Object {
                "result": "foo",
                "type": "string",
              },
            },
          ],
          "group": "core",
          "key": "XLOOKUP",
          "lazy": false,
          "name": "XLOOKUP",
          "persist": false,
          "pure": false,
          "reference": [Function],
          "returns": "string",
          "testCases": Array [],
        },
        "custom::ADD": Object {
          "acceptError": false,
          "args": Array [
            Object {
              "name": "left",
              "type": "number",
            },
            Object {
              "name": "right",
              "type": "number",
            },
          ],
          "async": false,
          "chain": true,
          "description": "Returns the sum of two numbers",
          "effect": false,
          "examples": Array [
            Object {
              "codeFragments": Array [
                Object {
                  "attrs": undefined,
                  "code": "Equal",
                  "display": "=",
                  "errors": Array [],
                  "hide": false,
                  "type": "any",
                },
                Object {
                  "attrs": undefined,
                  "code": "Function",
                  "display": "ADD",
                  "errors": Array [
                    Object {
                      "message": "Function ADD not found",
                      "type": "deps",
                    },
                  ],
                  "hide": false,
                  "type": "any",
                },
                Object {
                  "attrs": undefined,
                  "code": "LParen",
                  "display": "(",
                  "errors": Array [],
                  "hide": false,
                  "type": "any",
                },
                Object {
                  "attrs": undefined,
                  "code": "NumberLiteral",
                  "display": "1",
                  "errors": Array [],
                  "hide": false,
                  "type": "number",
                },
                Object {
                  "attrs": undefined,
                  "code": "Comma",
                  "display": ",",
                  "errors": Array [],
                  "hide": false,
                  "type": "any",
                },
                Object {
                  "attrs": undefined,
                  "code": "NumberLiteral",
                  "display": "2",
                  "errors": Array [],
                  "hide": false,
                  "type": "number",
                },
                Object {
                  "attrs": undefined,
                  "code": "RParen",
                  "display": ")",
                  "errors": Array [],
                  "hide": false,
                  "type": "any",
                },
              ],
              "input": "=ADD(1, 2)",
              "output": Object {
                "result": 3,
                "type": "number",
              },
            },
          ],
          "group": "custom",
          "key": "custom::ADD",
          "lazy": false,
          "name": "ADD",
          "persist": false,
          "pure": true,
          "reference": [Function],
          "returns": "number",
          "testCases": Array [],
        },
      },
      "functionWeights": Object {},
      "names": Object {
        "28e28190-63bd-4f70-aeca-26e72574c01a": Object {
          "id": "28e28190-63bd-4f70-aeca-26e72574c01a",
          "kind": "Spreadsheet",
          "name": "MySpreadsheet",
          "namespaceId": "57622108-1337-4edd-833a-2557835bcfe0",
          "renderTokens": [Function],
        },
        "57622108-1337-4edd-833a-2557835bcfe0": Object {
          "id": "57622108-1337-4edd-833a-2557835bcfe0",
          "kind": "Block",
          "name": "Page1",
          "namespaceId": "57622108-1337-4edd-833a-2557835bcfe0",
          "renderTokens": [Function],
        },
      },
      "reservedNames": Array [
        "CURRENT_POSITION",
        "REQUEST_GET",
        "SLEEP",
        "EXCHANGE",
        "LEN",
        "TRIM",
        "VLOOKUP",
        "XLOOKUP",
        "SUM",
        "COLUMN_COUNT",
        "ROW_COUNT",
        "SUMIFS",
        "AVERAGEIFS",
        "COUNTIFS",
        "SUMPRODUCT",
        "MAX",
        "COUNTA",
        "START_WITH",
        "SPLIT",
        "IF",
        "ABS",
        "INT",
        "LOG10",
        "PI",
        "POWER",
        "RAND",
        "RANDBETWEEN",
        "SQRT",
        "SQRTPI",
        "TRUNC",
        "LN",
        "ROUND",
        "AVERAGE",
        "SUM1",
        "NOW",
        "DATE",
        "T",
        "TYPE",
        "TOSTRING",
        "ERROR",
        "IFERROR",
        "COUNTIF",
        "SPREADSHEET",
        "BUTTON",
        "CINPUT",
        "SWITCH",
        "SELECT",
        "SET",
        "TONUMBER",
        "TOQRCODE",
        "TOBAR",
        "TORECORDARRAY",
        "TOARRAY",
        "TORECORD",
        "JOIN",
        "ADD",
      ],
      "reverseFunctionDependencies": Object {},
      "reverseVariableDependencies": Object {},
      "spreadsheets": Object {
        "28e28190-63bd-4f70-aeca-26e72574c01a": [Circular],
      },
      "tickKey": "FormulaContext#test",
      "tickTimeout": 1000,
      "variableNameCounter": Object {
        "Array": Object {},
        "Blank": Object {},
        "Block": Object {},
        "Button": Object {},
        "Cell": Object {},
        "Column": Object {},
        "Cst": Object {},
        "Date": Object {},
        "Error": Object {},
        "Function": Object {},
        "Input": Object {},
        "NoPersist": Object {},
        "Pending": Object {},
        "Predicate": Object {},
        "Radio": Object {},
        "Range": Object {},
        "Rate": Object {},
        "Record": Object {},
        "Reference": Object {},
        "Row": Object {},
        "Select": Object {},
        "Slider": Object {},
        "Spreadsheet": Object {},
        "Switch": Object {},
        "Waiting": Object {},
        "any": Object {},
        "boolean": Object {},
        "null": Object {},
        "number": Object {},
        "string": Object {},
        "void": Object {},
      },
      "variableWeights": Object {},
      "variables": Object {},
      "viewRenders": Object {
        "bar": [Function],
        "qrcode": [Function],
      },
    },
    "_name": "MySpreadsheet",
    "_rows": Array [
      Object {
        "rowId": "ec4fdfe8-4a12-4a76-aeae-2dea0229e734",
        "rowIndex": 0,
        "spreadsheetId": "28e28190-63bd-4f70-aeca-26e72574c01a",
      },
      Object {
        "rowId": "5d1e4a83-383a-4991-a33c-52a9b3169549",
        "rowIndex": 1,
        "spreadsheetId": "28e28190-63bd-4f70-aeca-26e72574c01a",
      },
      Object {
        "rowId": "05f5ae67-b982-406e-a92f-e559c10a7ba6",
        "rowIndex": 2,
        "spreadsheetId": "28e28190-63bd-4f70-aeca-26e72574c01a",
      },
    ],
    "dynamic": false,
    "eventListeners": Array [
      Object {
        "unsubscribe": [Function],
      },
      Object {
        "unsubscribe": [Function],
      },
      Object {
        "unsubscribe": [Function],
      },
    ],
    "getCell": [Function],
    "name": [Function],
    "namespaceId": "57622108-1337-4edd-833a-2557835bcfe0",
    "spreadsheetId": "28e28190-63bd-4f70-aeca-26e72574c01a",
  },
  "replacements": Array [
    "#CurrentBlock.MySpreadshee",
    "#CurrentBlock.MySpreadshe",
    "#CurrentBlock.MySpreadsh",
    "#CurrentBlock.MySpreads",
    "#CurrentBlock.MySpread",
    "#CurrentBlock.MySprea",
    "#CurrentBlock.MySpre",
    "#CurrentBlock.MySpr",
    "#CurrentBlock.MySp",
    "#CurrentBlock.MyS",
    "#CurrentBlock.My",
    "#CurrentBlock.M",
    "#CurrentBlock.",
    "#CurrentBlock",
    "MySpreadshee",
    "MySpreadshe",
    "MySpreadsh",
    "MySpreads",
    "MySpread",
    "MySprea",
    "MySpre",
    "MySpr",
    "MySp",
    "MyS",
    "My",
    "M",
  ],
  "value": "#CurrentBlock.MySpreadsheet",
  "weight": 10,
}
`;

exports[`Spreadsheet Functions completion TODO 2`] = `
Object {
  "codeFragments": Array [
    Object {
      "attrs": Object {
        "id": "28e28190-63bd-4f70-aeca-26e72574c01a",
        "kind": "Spreadsheet",
        "name": "MySpreadsheet",
        "namespaceId": "57622108-1337-4edd-833a-2557835bcfe0",
      },
      "code": "Spreadsheet",
      "display": "MySpreadsheet",
      "errors": Array [],
      "hide": false,
      "type": "Spreadsheet",
      "valuePrefix": "#57622108-1337-4edd-833a-2557835bcfe0.",
    },
  ],
  "kind": "spreadsheet",
  "name": "MySpreadsheet",
  "namespace": "28e28190-63bd-4f70-aeca-26e72574c01a",
  "positionChange": 51,
  "preview": SpreadsheetClass {
    "_columns": Array [
      Object {
        "columnId": "62d9a9ee-88a1-46c7-a929-4a0d9dc0a4d6",
        "displayIndex": "A",
        "index": 0,
        "name": "first",
        "sort": 0,
        "spreadsheetId": "28e28190-63bd-4f70-aeca-26e72574c01a",
        "title": "first",
      },
      Object {
        "columnId": "4e6f9adb-6f33-454e-9f9e-635dc98e3f28",
        "displayIndex": "B",
        "index": 1,
        "name": "second",
        "sort": 1,
        "spreadsheetId": "28e28190-63bd-4f70-aeca-26e72574c01a",
        "title": "second",
      },
      Object {
        "columnId": "2723b7d9-22ce-4d93-b2ef-7cce1b122d64",
        "displayIndex": "C",
        "index": 2,
        "name": "third",
        "sort": 2,
        "spreadsheetId": "28e28190-63bd-4f70-aeca-26e72574c01a",
        "title": "third",
      },
    ],
    "_formulaContext": FormulaContext {
      "blocks": Object {
        "57622108-1337-4edd-833a-2557835bcfe0": BlockClass {
          "_formulaContext": [Circular],
          "_name": "Page1",
          "eventListeners": Array [
            Object {
              "unsubscribe": [Function],
            },
          ],
          "id": "57622108-1337-4edd-833a-2557835bcfe0",
          "name": [Function],
        },
      },
      "dirtyFormulas": Object {},
      "domain": "test",
      "eventListeners": Array [
        Object {
          "unsubscribe": [Function],
        },
        Object {
          "unsubscribe": [Function],
        },
      ],
      "features": Array [
        "formula-controls",
      ],
      "functionClausesMap": Object {
        "ABS": Object {
          "acceptError": false,
          "args": Array [
            Object {
              "name": "number",
              "type": "number",
            },
          ],
          "async": false,
          "chain": false,
          "description": "Returns the absolute value of a number.",
          "effect": false,
          "examples": Array [
            Object {
              "codeFragments": Array [
                Object {
                  "attrs": undefined,
                  "code": "Equal",
                  "display": "=",
                  "errors": Array [],
                  "hide": false,
                  "type": "any",
                },
                Object {
                  "attrs": undefined,
                  "code": "Function",
                  "display": "ABS",
                  "errors": Array [],
                  "hide": false,
                  "type": "any",
                },
                Object {
                  "attrs": undefined,
                  "code": "LParen",
                  "display": "(",
                  "errors": Array [],
                  "hide": false,
                  "type": "any",
                },
                Object {
                  "attrs": undefined,
                  "code": "NumberLiteral",
                  "display": "-1",
                  "errors": Array [],
                  "hide": false,
                  "type": "number",
                },
                Object {
                  "attrs": undefined,
                  "code": "RParen",
                  "display": ")",
                  "errors": Array [],
                  "hide": false,
                  "type": "number",
                },
              ],
              "input": "=ABS(-1)",
              "output": Object {
                "result": 1,
                "type": "number",
              },
            },
          ],
          "group": "core",
          "key": "ABS",
          "lazy": false,
          "name": "ABS",
          "persist": false,
          "pure": true,
          "reference": [Function],
          "returns": "number",
          "testCases": Array [
            Object {
              "input": Array [
                -1,
              ],
              "output": 1,
            },
          ],
        },
        "AVERAGE": Object {
          "acceptError": false,
          "args": Array [
            Object {
              "name": "numbers",
              "spread": true,
              "type": "number",
            },
          ],
          "async": false,
          "chain": false,
          "description": "Returns the average of the numbers in the list.",
          "effect": false,
          "examples": Array [
            Object {
              "codeFragments": Array [
                Object {
                  "attrs": undefined,
                  "code": "Equal",
                  "display": "=",
                  "errors": Array [],
                  "hide": false,
                  "type": "any",
                },
                Object {
                  "attrs": undefined,
                  "code": "Function",
                  "display": "AVERAGE",
                  "errors": Array [],
                  "hide": false,
                  "type": "any",
                },
                Object {
                  "attrs": undefined,
                  "code": "LParen",
                  "display": "(",
                  "errors": Array [],
                  "hide": false,
                  "type": "any",
                },
                Object {
                  "attrs": undefined,
                  "code": "NumberLiteral",
                  "display": "-1",
                  "errors": Array [],
                  "hide": false,
                  "type": "number",
                },
                Object {
                  "attrs": undefined,
                  "code": "Comma",
                  "display": ",",
                  "errors": Array [],
                  "hide": false,
                  "type": "any",
                },
                Object {
                  "attrs": undefined,
                  "code": "NumberLiteral",
                  "display": "0",
                  "errors": Array [],
                  "hide": false,
                  "type": "number",
                },
                Object {
                  "attrs": undefined,
                  "code": "Comma",
                  "display": ",",
                  "errors": Array [],
                  "hide": false,
                  "type": "any",
                },
                Object {
                  "attrs": undefined,
                  "code": "NumberLiteral",
                  "display": "4",
                  "errors": Array [],
                  "hide": false,
                  "type": "number",
                },
                Object {
                  "attrs": undefined,
                  "code": "RParen",
                  "display": ")",
                  "errors": Array [],
                  "hide": false,
                  "type": "number",
                },
              ],
              "input": "=AVERAGE(-1, 0, 4)",
              "output": Object {
                "result": 1,
                "type": "number",
              },
            },
          ],
          "group": "core",
          "key": "AVERAGE",
          "lazy": false,
          "name": "AVERAGE",
          "persist": false,
          "pure": true,
          "reference": [Function],
          "returns": "number",
          "testCases": Array [
            Object {
              "input": Array [
                Object {
                  "result": -1,
                  "type": "number",
                },
                Object {
                  "result": 0,
                  "type": "number",
                },
                Object {
                  "result": 4,
                  "type": "number",
                },
              ],
              "output": 1,
            },
            Object {
              "input": Array [],
              "output": NaN,
            },
          ],
        },
        "AVERAGEIFS": Object {
          "acceptError": false,
          "args": Array [
            Object {
              "name": "column1",
              "type": "Column",
            },
            Object {
              "name": "column2",
              "type": "Column",
            },
            Object {
              "name": "condition",
              "type": "Predicate",
            },
          ],
          "async": false,
          "chain": false,
          "description": "Returns the average of the column in the spreadsheet.",
          "effect": false,
          "examples": Array [
            Object {
              "codeFragments": Array [
                Object {
                  "attrs": undefined,
                  "code": "Equal",
                  "display": "=",
                  "errors": Array [],
                  "hide": false,
                  "type": "any",
                },
                Object {
                  "attrs": undefined,
                  "code": "NumberLiteral",
                  "display": "123",
                  "errors": Array [],
                  "hide": false,
                  "type": "number",
                },
              ],
              "input": "=123",
              "output": Object {
                "result": 123,
                "type": "number",
              },
            },
          ],
          "group": "core",
          "key": "AVERAGEIFS",
          "lazy": false,
          "name": "AVERAGEIFS",
          "persist": false,
          "pure": false,
          "reference": [Function],
          "returns": "number",
          "testCases": Array [],
        },
        "BUTTON": Object {
          "acceptError": false,
          "args": Array [
            Object {
              "name": "name",
              "type": "string",
            },
            Object {
              "name": "onClick",
              "type": "Function",
            },
          ],
          "async": false,
          "chain": false,
          "description": "Build button",
          "effect": false,
          "examples": Array [
            Object {
              "codeFragments": Array [
                Object {
                  "attrs": undefined,
                  "code": "Equal",
                  "display": "=",
                  "errors": Array [],
                  "hide": false,
                  "type": "any",
                },
                Object {
                  "attrs": undefined,
                  "code": "Function",
                  "display": "Button",
                  "errors": Array [],
                  "hide": false,
                  "type": "any",
                },
                Object {
                  "attrs": undefined,
                  "code": "LParen",
                  "display": "(",
                  "errors": Array [],
                  "hide": false,
                  "type": "any",
                },
                Object {
                  "attrs": undefined,
                  "code": "StringLiteral",
                  "display": "\\"name\\"",
                  "errors": Array [
                    Object {
                      "message": "Argument count mismatch",
                      "type": "deps",
                    },
                  ],
                  "hide": false,
                  "type": "string",
                },
                Object {
                  "attrs": undefined,
                  "code": "RParen",
                  "display": ")",
                  "errors": Array [],
                  "hide": false,
                  "type": "Button",
                },
              ],
              "input": "=Button(\\"name\\")",
              "output": null,
            },
          ],
          "feature": "formula-controls",
          "group": "core",
          "key": "BUTTON",
          "lazy": false,
          "name": "Button",
          "persist": false,
          "pure": true,
          "reference": [Function],
          "returns": "Button",
          "testCases": Array [],
        },
        "CINPUT": Object {
          "acceptError": false,
          "args": Array [
            Object {
              "name": "onChange",
              "type": "Function",
            },
          ],
          "async": false,
          "chain": false,
          "description": "Build input",
          "effect": false,
          "examples": Array [
            Object {
              "codeFragments": Array [
                Object {
                  "attrs": undefined,
                  "code": "Equal",
                  "display": "=",
                  "errors": Array [],
                  "hide": false,
                  "type": "any",
                },
                Object {
                  "attrs": undefined,
                  "code": "Input",
                  "display": "Input",
                  "errors": Array [],
                  "hide": false,
                  "type": "Record",
                },
              ],
              "input": "=Input()",
              "output": null,
            },
          ],
          "feature": "formula-controls",
          "group": "core",
          "key": "CINPUT",
          "lazy": false,
          "name": "CInput",
          "persist": false,
          "pure": true,
          "reference": [Function],
          "returns": "Input",
          "testCases": Array [],
        },
        "COLUMN_COUNT": Object {
          "acceptError": false,
          "args": Array [
            Object {
              "name": "spreadsheet",
              "type": "Spreadsheet",
            },
          ],
          "async": false,
          "chain": true,
          "description": "Returns the column size of the spreadsheet.",
          "effect": false,
          "examples": Array [
            Object {
              "codeFragments": Array [
                Object {
                  "attrs": undefined,
                  "code": "Equal",
                  "display": "=",
                  "errors": Array [],
                  "hide": false,
                  "type": "any",
                },
                Object {
                  "attrs": undefined,
                  "code": "NumberLiteral",
                  "display": "123",
                  "errors": Array [],
                  "hide": false,
                  "type": "number",
                },
              ],
              "input": "=123",
              "output": Object {
                "result": 123,
                "type": "number",
              },
            },
          ],
          "group": "core",
          "key": "COLUMN_COUNT",
          "lazy": false,
          "name": "COLUMN_COUNT",
          "persist": false,
          "pure": false,
          "reference": [Function],
          "returns": "number",
          "testCases": Array [],
        },
        "COUNTA": Object {
          "acceptError": false,
          "args": Array [
            Object {
              "name": "column",
              "type": "Column",
            },
          ],
          "async": false,
          "chain": true,
          "description": "Returns the count of the column in the spreadsheet.",
          "effect": false,
          "examples": Array [
            Object {
              "codeFragments": Array [
                Object {
                  "attrs": undefined,
                  "code": "Equal",
                  "display": "=",
                  "errors": Array [],
                  "hide": false,
                  "type": "any",
                },
                Object {
                  "attrs": undefined,
                  "code": "NumberLiteral",
                  "display": "123",
                  "errors": Array [],
                  "hide": false,
                  "type": "number",
                },
              ],
              "input": "=123",
              "output": Object {
                "result": 123,
                "type": "number",
              },
            },
          ],
          "group": "core",
          "key": "COUNTA",
          "lazy": false,
          "name": "COUNTA",
          "persist": false,
          "pure": false,
          "reference": [Function],
          "returns": "number",
          "testCases": Array [],
        },
        "COUNTIF": Object {
          "acceptError": false,
          "args": Array [
            Object {
              "name": "spreadsheet",
              "type": "Spreadsheet",
            },
            Object {
              "name": "predicate",
              "type": "Predicate",
            },
          ],
          "async": false,
          "chain": false,
          "description": "Returns the sum of the column in the spreadsheet.",
          "effect": false,
          "examples": Array [
            Object {
              "codeFragments": Array [
                Object {
                  "attrs": undefined,
                  "code": "Equal",
                  "display": "=",
                  "errors": Array [],
                  "hide": false,
                  "type": "any",
                },
                Object {
                  "attrs": undefined,
                  "code": "Function",
                  "display": "CountIf",
                  "errors": Array [
                    Object {
                      "message": "Miss argument",
                      "type": "deps",
                    },
                  ],
                  "hide": false,
                  "type": "any",
                },
                Object {
                  "attrs": undefined,
                  "code": "LParen",
                  "display": "(",
                  "errors": Array [],
                  "hide": false,
                  "type": "any",
                },
                Object {
                  "attrs": undefined,
                  "code": "RParen",
                  "display": ")",
                  "errors": Array [],
                  "hide": false,
                  "type": "number",
                },
              ],
              "input": "=CountIf()",
              "output": Object {
                "result": 123,
                "type": "number",
              },
            },
          ],
          "group": "core",
          "key": "COUNTIF",
          "lazy": false,
          "name": "CountIf",
          "persist": false,
          "pure": false,
          "reference": [Function],
          "returns": "number",
          "testCases": Array [],
        },
        "COUNTIFS": Object {
          "acceptError": false,
          "args": Array [
            Object {
              "name": "column",
              "type": "Column",
            },
            Object {
              "name": "condition",
              "type": "Predicate",
            },
          ],
          "async": false,
          "chain": true,
          "description": "Returns the sum of the column in the spreadsheet.",
          "effect": false,
          "examples": Array [
            Object {
              "codeFragments": Array [
                Object {
                  "attrs": undefined,
                  "code": "Equal",
                  "display": "=",
                  "errors": Array [],
                  "hide": false,
                  "type": "any",
                },
                Object {
                  "attrs": undefined,
                  "code": "NumberLiteral",
                  "display": "123",
                  "errors": Array [],
                  "hide": false,
                  "type": "number",
                },
              ],
              "input": "=123",
              "output": Object {
                "result": 123,
                "type": "number",
              },
            },
          ],
          "group": "core",
          "key": "COUNTIFS",
          "lazy": false,
          "name": "COUNTIFS",
          "persist": false,
          "pure": false,
          "reference": [Function],
          "returns": "number",
          "testCases": Array [],
        },
        "CURRENT_POSITION": Object {
          "acceptError": false,
          "args": Array [],
          "async": true,
          "chain": false,
          "description": "Returns current position",
          "effect": false,
          "examples": Array [
            Object {
              "codeFragments": Array [
                Object {
                  "attrs": undefined,
                  "code": "Equal",
                  "display": "=",
                  "errors": Array [],
                  "hide": false,
                  "type": "any",
                },
                Object {
                  "attrs": undefined,
                  "code": "Function",
                  "display": "CURRENT_POSITION",
                  "errors": Array [],
                  "hide": false,
                  "type": "any",
                },
                Object {
                  "attrs": undefined,
                  "code": "LParen",
                  "display": "(",
                  "errors": Array [],
                  "hide": false,
                  "type": "any",
                },
                Object {
                  "attrs": undefined,
                  "code": "RParen",
                  "display": ")",
                  "errors": Array [],
                  "hide": false,
                  "type": "Record",
                },
              ],
              "input": "=CURRENT_POSITION()",
              "output": Object {
                "result": Object {
                  "lat": Object {
                    "result": 0,
                    "type": "number",
                  },
                  "long": Object {
                    "result": 0,
                    "type": "number",
                  },
                },
                "subType": "number",
                "type": "Record",
              },
            },
          ],
          "group": "core",
          "key": "CURRENT_POSITION",
          "lazy": false,
          "name": "CURRENT_POSITION",
          "persist": false,
          "pure": false,
          "reference": [Function],
          "returns": "Record",
          "testCases": Array [],
        },
        "DATE": Object {
          "acceptError": false,
          "args": Array [
            Object {
              "name": "date",
              "type": "string",
            },
          ],
          "async": false,
          "chain": false,
          "description": "Returns the date specified by the input",
          "effect": false,
          "examples": Array [
            Object {
              "codeFragments": Array [
                Object {
                  "attrs": undefined,
                  "code": "Equal",
                  "display": "=",
                  "errors": Array [],
                  "hide": false,
                  "type": "any",
                },
                Object {
                  "attrs": undefined,
                  "code": "Function",
                  "display": "DATE",
                  "errors": Array [],
                  "hide": false,
                  "type": "any",
                },
                Object {
                  "attrs": undefined,
                  "code": "LParen",
                  "display": "(",
                  "errors": Array [],
                  "hide": false,
                  "type": "any",
                },
                Object {
                  "attrs": undefined,
                  "code": "StringLiteral",
                  "display": "\\"1926-08-17\\"",
                  "errors": Array [],
                  "hide": false,
                  "type": "string",
                },
                Object {
                  "attrs": undefined,
                  "code": "RParen",
                  "display": ")",
                  "errors": Array [],
                  "hide": false,
                  "type": "Date",
                },
              ],
              "input": "=DATE(\\"1926-08-17\\")",
              "output": Object {
                "result": 1926-08-17T00:00:00.000Z,
                "type": "Date",
              },
            },
          ],
          "group": "core",
          "key": "DATE",
          "lazy": false,
          "name": "DATE",
          "persist": false,
          "pure": true,
          "reference": [Function],
          "returns": "Date",
          "testCases": Array [],
        },
        "ERROR": Object {
          "acceptError": false,
          "args": Array [
            Object {
              "name": "reason",
              "type": "string",
            },
          ],
          "async": false,
          "chain": true,
          "description": "Returns an error with the given message.",
          "effect": false,
          "examples": Array [
            Object {
              "codeFragments": Array [
                Object {
                  "attrs": undefined,
                  "code": "Equal",
                  "display": "=",
                  "errors": Array [],
                  "hide": false,
                  "type": "any",
                },
                Object {
                  "attrs": undefined,
                  "code": "Function",
                  "display": "ERROR",
                  "errors": Array [],
                  "hide": false,
                  "type": "any",
                },
                Object {
                  "attrs": undefined,
                  "code": "LParen",
                  "display": "(",
                  "errors": Array [],
                  "hide": false,
                  "type": "any",
                },
                Object {
                  "attrs": undefined,
                  "code": "StringLiteral",
                  "display": "\\"foo bar\\"",
                  "errors": Array [],
                  "hide": false,
                  "type": "string",
                },
                Object {
                  "attrs": undefined,
                  "code": "RParen",
                  "display": ")",
                  "errors": Array [],
                  "hide": false,
                  "type": "Error",
                },
              ],
              "input": "=ERROR(\\"foo bar\\")",
              "output": Object {
                "errorKind": "custom",
                "result": "foo bar",
                "type": "Error",
              },
            },
          ],
          "group": "core",
          "key": "ERROR",
          "lazy": false,
          "name": "ERROR",
          "persist": false,
          "pure": true,
          "reference": [Function],
          "returns": "Error",
          "testCases": Array [],
        },
        "EXCHANGE": Object {
          "acceptError": false,
          "args": Array [
            Object {
              "name": "url",
              "type": "string",
            },
          ],
          "async": true,
          "chain": false,
          "description": "EXCHANGE",
          "effect": true,
          "examples": Array [
            Object {
              "codeFragments": Array [
                Object {
                  "attrs": undefined,
                  "code": "Equal",
                  "display": "=",
                  "errors": Array [],
                  "hide": false,
                  "type": "any",
                },
                Object {
                  "attrs": undefined,
                  "code": "Function",
                  "display": "EXCHANGE",
                  "errors": Array [],
                  "hide": false,
                  "type": "any",
                },
                Object {
                  "attrs": undefined,
                  "code": "LParen",
                  "display": "(",
                  "errors": Array [],
                  "hide": false,
                  "type": "any",
                },
                Object {
                  "attrs": undefined,
                  "code": "NumberLiteral",
                  "display": "10",
                  "errors": Array [
                    Object {
                      "message": "Expected string but got number",
                      "type": "type",
                    },
                  ],
                  "hide": false,
                  "type": "number",
                },
                Object {
                  "attrs": undefined,
                  "code": "RParen",
                  "display": ")",
                  "errors": Array [],
                  "hide": false,
                  "type": "Record",
                },
              ],
              "input": "=EXCHANGE(10)",
              "output": Object {
                "result": Object {},
                "subType": "any",
                "type": "Record",
              },
            },
          ],
          "group": "core",
          "key": "EXCHANGE",
          "lazy": false,
          "name": "EXCHANGE",
          "persist": false,
          "pure": false,
          "reference": [Function],
          "returns": "Record",
          "testCases": Array [],
        },
        "IF": Object {
          "acceptError": false,
          "args": Array [
            Object {
              "name": "condition",
              "type": "boolean",
            },
            Object {
              "name": "ifTrue",
              "type": "any",
            },
            Object {
              "name": "ifFalse",
              "type": "any",
            },
          ],
          "async": false,
          "chain": false,
          "description": "Returns the first argument if the condition is true, otherwise the second argument.",
          "effect": false,
          "examples": Array [
            Object {
              "codeFragments": Array [
                Object {
                  "attrs": undefined,
                  "code": "Equal",
                  "display": "=",
                  "errors": Array [],
                  "hide": false,
                  "type": "any",
                },
                Object {
                  "attrs": undefined,
                  "code": "Function",
                  "display": "IF",
                  "errors": Array [],
                  "hide": false,
                  "type": "any",
                },
                Object {
                  "attrs": undefined,
                  "code": "LParen",
                  "display": "(",
                  "errors": Array [],
                  "hide": false,
                  "type": "any",
                },
                Object {
                  "attrs": undefined,
                  "code": "BooleanLiteral",
                  "display": "true",
                  "errors": Array [],
                  "hide": false,
                  "type": "boolean",
                },
                Object {
                  "attrs": undefined,
                  "code": "Comma",
                  "display": ",",
                  "errors": Array [],
                  "hide": false,
                  "type": "any",
                },
                Object {
                  "attrs": undefined,
                  "code": "NumberLiteral",
                  "display": "1",
                  "errors": Array [],
                  "hide": false,
                  "type": "number",
                },
                Object {
                  "attrs": undefined,
                  "code": "Comma",
                  "display": ",",
                  "errors": Array [],
                  "hide": false,
                  "type": "any",
                },
                Object {
                  "attrs": undefined,
                  "code": "NumberLiteral",
                  "display": "2",
                  "errors": Array [],
                  "hide": false,
                  "type": "number",
                },
                Object {
                  "attrs": undefined,
                  "code": "RParen",
                  "display": ")",
                  "errors": Array [],
                  "hide": false,
                  "type": "any",
                },
              ],
              "input": "=IF(true, 1, 2)",
              "output": Object {
                "result": 2,
                "type": "number",
              },
            },
          ],
          "group": "core",
          "key": "IF",
          "lazy": false,
          "name": "IF",
          "persist": false,
          "pure": true,
          "reference": [Function],
          "returns": "any",
          "testCases": Array [],
        },
        "IFERROR": Object {
          "acceptError": true,
          "args": Array [
            Object {
              "name": "expr1",
              "type": "any",
            },
            Object {
              "name": "expr2",
              "type": "any",
            },
          ],
          "async": false,
          "chain": true,
          "description": "Returns the first argument if it is not an error, otherwise returns the second argument.",
          "effect": false,
          "examples": Array [
            Object {
              "codeFragments": Array [
                Object {
                  "attrs": undefined,
                  "code": "Equal",
                  "display": "=",
                  "errors": Array [],
                  "hide": false,
                  "type": "any",
                },
                Object {
                  "attrs": undefined,
                  "code": "Function",
                  "display": "IFERROR",
                  "errors": Array [],
                  "hide": false,
                  "type": "any",
                },
                Object {
                  "attrs": undefined,
                  "code": "LParen",
                  "display": "(",
                  "errors": Array [],
                  "hide": false,
                  "type": "any",
                },
                Object {
                  "attrs": undefined,
                  "code": "NumberLiteral",
                  "display": "1",
                  "errors": Array [],
                  "hide": false,
                  "type": "number",
                },
                Object {
                  "attrs": undefined,
                  "code": "Comma",
                  "display": ",",
                  "errors": Array [],
                  "hide": false,
                  "type": "any",
                },
                Object {
                  "attrs": undefined,
                  "code": "StringLiteral",
                  "display": "\\"foo bar\\"",
                  "errors": Array [],
                  "hide": false,
                  "type": "string",
                },
                Object {
                  "attrs": undefined,
                  "code": "RParen",
                  "display": ")",
                  "errors": Array [],
                  "hide": false,
                  "type": "any",
                },
              ],
              "input": "=IFERROR(1, \\"foo bar\\")",
              "output": Object {
                "result": 1,
                "type": "number",
              },
            },
            Object {
              "codeFragments": Array [
                Object {
                  "attrs": undefined,
                  "code": "Equal",
                  "display": "=",
                  "errors": Array [],
                  "hide": false,
                  "type": "any",
                },
                Object {
                  "attrs": undefined,
                  "code": "Function",
                  "display": "IFERROR",
                  "errors": Array [],
                  "hide": false,
                  "type": "any",
                },
                Object {
                  "attrs": undefined,
                  "code": "LParen",
                  "display": "(",
                  "errors": Array [],
                  "hide": false,
                  "type": "any",
                },
                Object {
                  "attrs": undefined,
                  "code": "Function",
                  "display": "ERROR",
                  "errors": Array [],
                  "hide": false,
                  "type": "any",
                },
                Object {
                  "attrs": undefined,
                  "code": "LParen",
                  "display": "(",
                  "errors": Array [],
                  "hide": false,
                  "type": "any",
                },
                Object {
                  "attrs": undefined,
                  "code": "StringLiteral",
                  "display": "\\"foo bar\\"",
                  "errors": Array [],
                  "hide": false,
                  "type": "string",
                },
                Object {
                  "attrs": undefined,
                  "code": "RParen",
                  "display": ")",
                  "errors": Array [],
                  "hide": false,
                  "type": "Error",
                },
                Object {
                  "attrs": undefined,
                  "code": "Comma",
                  "display": ",",
                  "errors": Array [],
                  "hide": false,
                  "type": "any",
                },
                Object {
                  "attrs": undefined,
                  "code": "NumberLiteral",
                  "display": "123",
                  "errors": Array [],
                  "hide": false,
                  "type": "number",
                },
                Object {
                  "attrs": undefined,
                  "code": "RParen",
                  "display": ")",
                  "errors": Array [],
                  "hide": false,
                  "type": "any",
                },
              ],
              "input": "=IFERROR(ERROR(\\"foo bar\\"), 123)",
              "output": Object {
                "result": 123,
                "type": "number",
              },
            },
          ],
          "group": "core",
          "key": "IFERROR",
          "lazy": false,
          "name": "IFERROR",
          "persist": false,
          "pure": true,
          "reference": [Function],
          "returns": "any",
          "testCases": Array [],
        },
        "INT": Object {
          "acceptError": false,
          "args": Array [
            Object {
              "name": "number",
              "type": "number",
            },
          ],
          "async": false,
          "chain": false,
          "description": "Returns the integer part of a number.",
          "effect": false,
          "examples": Array [
            Object {
              "codeFragments": Array [
                Object {
                  "attrs": undefined,
                  "code": "Equal",
                  "display": "=",
                  "errors": Array [],
                  "hide": false,
                  "type": "any",
                },
                Object {
                  "attrs": undefined,
                  "code": "In",
                  "display": "IN",
                  "errors": Array [],
                  "hide": false,
                  "type": "boolean",
                },
                Object {
                  "attrs": undefined,
                  "code": "Function",
                  "display": "T",
                  "errors": Array [],
                  "hide": false,
                  "type": "any",
                },
                Object {
                  "attrs": undefined,
                  "code": "LParen",
                  "display": "(",
                  "errors": Array [],
                  "hide": false,
                  "type": "any",
                },
                Object {
                  "attrs": undefined,
                  "code": "NumberLiteral",
                  "display": "-1.5",
                  "errors": Array [],
                  "hide": false,
                  "type": "number",
                },
                Object {
                  "attrs": undefined,
                  "code": "RParen",
                  "display": ")",
                  "errors": Array [],
                  "hide": false,
                  "type": "any",
                },
              ],
              "input": "=INT(-1.5)",
              "output": Object {
                "result": -1,
                "type": "number",
              },
            },
          ],
          "group": "core",
          "key": "INT",
          "lazy": false,
          "name": "INT",
          "persist": false,
          "pure": true,
          "reference": [Function],
          "returns": "number",
          "testCases": Array [
            Object {
              "input": Array [
                1.5,
              ],
              "output": 1,
            },
          ],
        },
        "JOIN": Object {
          "acceptError": false,
          "args": Array [
            Object {
              "name": "array",
              "type": "Array",
            },
            Object {
              "default": Object {
                "result": ",",
                "type": "string",
              },
              "name": "separator",
              "type": "string",
            },
          ],
          "async": false,
          "chain": true,
          "description": "Joins an array of strings",
          "effect": false,
          "examples": Array [
            Object {
              "codeFragments": Array [
                Object {
                  "attrs": undefined,
                  "code": "Equal",
                  "display": "=",
                  "errors": Array [],
                  "hide": false,
                  "type": "any",
                },
                Object {
                  "attrs": undefined,
                  "code": "Function",
                  "display": "Join",
                  "errors": Array [],
                  "hide": false,
                  "type": "any",
                },
                Object {
                  "attrs": undefined,
                  "code": "LParen",
                  "display": "(",
                  "errors": Array [],
                  "hide": false,
                  "type": "any",
                },
                Object {
                  "attrs": undefined,
                  "code": "LBracket",
                  "display": "[",
                  "errors": Array [],
                  "hide": false,
                  "type": "any",
                },
                Object {
                  "attrs": undefined,
                  "code": "NumberLiteral",
                  "display": "1",
                  "errors": Array [],
                  "hide": false,
                  "type": "number",
                },
                Object {
                  "attrs": undefined,
                  "code": "Comma",
                  "display": ",",
                  "errors": Array [],
                  "hide": false,
                  "type": "any",
                },
                Object {
                  "attrs": undefined,
                  "code": "NumberLiteral",
                  "display": "2",
                  "errors": Array [],
                  "hide": false,
                  "type": "number",
                },
                Object {
                  "attrs": undefined,
                  "code": "Comma",
                  "display": ",",
                  "errors": Array [],
                  "hide": false,
                  "type": "any",
                },
                Object {
                  "attrs": undefined,
                  "code": "NumberLiteral",
                  "display": "3",
                  "errors": Array [],
                  "hide": false,
                  "type": "number",
                },
                Object {
                  "attrs": undefined,
                  "code": "RBracket",
                  "display": "]",
                  "errors": Array [],
                  "hide": false,
                  "type": "any",
                },
                Object {
                  "attrs": undefined,
                  "code": "RParen",
                  "display": ")",
                  "errors": Array [],
                  "hide": false,
                  "type": "string",
                },
              ],
              "input": "=Join([1,2,3])",
              "output": Object {
                "result": "1,2,3",
                "type": "string",
              },
            },
          ],
          "group": "core",
          "key": "JOIN",
          "lazy": false,
          "name": "Join",
          "persist": false,
          "pure": true,
          "reference": [Function],
          "returns": "string",
          "testCases": Array [],
        },
        "LEN": Object {
          "acceptError": false,
          "args": Array [
            Object {
              "name": "str",
              "type": "string",
            },
          ],
          "async": false,
          "chain": false,
          "description": "Returns the length of the string.",
          "effect": false,
          "examples": Array [
            Object {
              "codeFragments": Array [
                Object {
                  "attrs": undefined,
                  "code": "Equal",
                  "display": "=",
                  "errors": Array [],
                  "hide": false,
                  "type": "any",
                },
                Object {
                  "attrs": undefined,
                  "code": "Function",
                  "display": "LEN",
                  "errors": Array [],
                  "hide": false,
                  "type": "any",
                },
                Object {
                  "attrs": undefined,
                  "code": "LParen",
                  "display": "(",
                  "errors": Array [],
                  "hide": false,
                  "type": "any",
                },
                Object {
                  "attrs": undefined,
                  "code": "StringLiteral",
                  "display": "\\"foo\\"",
                  "errors": Array [],
                  "hide": false,
                  "type": "string",
                },
                Object {
                  "attrs": undefined,
                  "code": "RParen",
                  "display": ")",
                  "errors": Array [],
                  "hide": false,
                  "type": "number",
                },
              ],
              "input": "=LEN(\\"foo\\")",
              "output": Object {
                "result": 3,
                "type": "number",
              },
            },
          ],
          "group": "core",
          "key": "LEN",
          "lazy": false,
          "name": "LEN",
          "persist": false,
          "pure": true,
          "reference": [Function],
          "returns": "number",
          "testCases": Array [
            Object {
              "input": Array [
                Object {
                  "result": "abc",
                  "type": "string",
                },
              ],
              "output": 3,
            },
          ],
        },
        "LN": Object {
          "acceptError": false,
          "args": Array [
            Object {
              "name": "number",
              "type": "number",
            },
          ],
          "async": false,
          "chain": false,
          "description": "Returns the natural logarithm of a number.",
          "effect": false,
          "examples": Array [
            Object {
              "codeFragments": Array [
                Object {
                  "attrs": undefined,
                  "code": "Equal",
                  "display": "=",
                  "errors": Array [],
                  "hide": false,
                  "type": "any",
                },
                Object {
                  "attrs": undefined,
                  "code": "Function",
                  "display": "LN",
                  "errors": Array [],
                  "hide": false,
                  "type": "any",
                },
                Object {
                  "attrs": undefined,
                  "code": "LParen",
                  "display": "(",
                  "errors": Array [],
                  "hide": false,
                  "type": "any",
                },
                Object {
                  "attrs": undefined,
                  "code": "NumberLiteral",
                  "display": "100",
                  "errors": Array [],
                  "hide": false,
                  "type": "number",
                },
                Object {
                  "attrs": undefined,
                  "code": "RParen",
                  "display": ")",
                  "errors": Array [],
                  "hide": false,
                  "type": "number",
                },
              ],
              "input": "=LN(100)",
              "output": Object {
                "result": 4.605170185988092,
                "type": "number",
              },
            },
          ],
          "group": "core",
          "key": "LN",
          "lazy": false,
          "name": "LN",
          "persist": false,
          "pure": true,
          "reference": [Function],
          "returns": "number",
          "testCases": Array [],
        },
        "LOG10": Object {
          "acceptError": false,
          "args": Array [
            Object {
              "name": "number",
              "type": "number",
            },
          ],
          "async": false,
          "chain": false,
          "description": "Returns the base-10 logarithm of a number.",
          "effect": false,
          "examples": Array [
            Object {
              "codeFragments": Array [
                Object {
                  "attrs": undefined,
                  "code": "Equal",
                  "display": "=",
                  "errors": Array [],
                  "hide": false,
                  "type": "any",
                },
                Object {
                  "attrs": undefined,
                  "code": "Function",
                  "display": "LOG10",
                  "errors": Array [],
                  "hide": false,
                  "type": "any",
                },
                Object {
                  "attrs": undefined,
                  "code": "LParen",
                  "display": "(",
                  "errors": Array [],
                  "hide": false,
                  "type": "any",
                },
                Object {
                  "attrs": undefined,
                  "code": "NumberLiteral",
                  "display": "100",
                  "errors": Array [],
                  "hide": false,
                  "type": "number",
                },
                Object {
                  "attrs": undefined,
                  "code": "RParen",
                  "display": ")",
                  "errors": Array [],
                  "hide": false,
                  "type": "number",
                },
              ],
              "input": "=LOG10(100)",
              "output": Object {
                "result": 2,
                "type": "number",
              },
            },
          ],
          "group": "core",
          "key": "LOG10",
          "lazy": false,
          "name": "LOG10",
          "persist": false,
          "pure": true,
          "reference": [Function],
          "returns": "number",
          "testCases": Array [
            Object {
              "input": Array [
                100,
              ],
              "output": 2,
            },
          ],
        },
        "MAX": Object {
          "acceptError": false,
          "args": Array [
            Object {
              "name": "column",
              "type": "Column",
            },
          ],
          "async": false,
          "chain": true,
          "description": "Returns the max of the column in the spreadsheet.",
          "effect": false,
          "examples": Array [
            Object {
              "codeFragments": Array [
                Object {
                  "attrs": undefined,
                  "code": "Equal",
                  "display": "=",
                  "errors": Array [],
                  "hide": false,
                  "type": "any",
                },
                Object {
                  "attrs": undefined,
                  "code": "NumberLiteral",
                  "display": "123",
                  "errors": Array [],
                  "hide": false,
                  "type": "number",
                },
              ],
              "input": "=123",
              "output": Object {
                "result": 123,
                "type": "number",
              },
            },
          ],
          "group": "core",
          "key": "MAX",
          "lazy": false,
          "name": "MAX",
          "persist": false,
          "pure": false,
          "reference": [Function],
          "returns": "number",
          "testCases": Array [],
        },
        "NOW": Object {
          "acceptError": false,
          "args": Array [],
          "async": false,
          "chain": false,
          "description": "Returns the current date",
          "effect": false,
          "examples": Array [
            Object {
              "codeFragments": Array [
                Object {
                  "attrs": undefined,
                  "code": "Equal",
                  "display": "=",
                  "errors": Array [],
                  "hide": false,
                  "type": "any",
                },
                Object {
                  "attrs": undefined,
                  "code": "Function",
                  "display": "NOW",
                  "errors": Array [],
                  "hide": false,
                  "type": "any",
                },
                Object {
                  "attrs": undefined,
                  "code": "LParen",
                  "display": "(",
                  "errors": Array [],
                  "hide": false,
                  "type": "any",
                },
                Object {
                  "attrs": undefined,
                  "code": "RParen",
                  "display": ")",
                  "errors": Array [],
                  "hide": false,
                  "type": "Date",
                },
              ],
              "input": "=NOW()",
              "output": Object {
                "result": 1926-08-17T00:00:00.000Z,
                "type": "Date",
              },
            },
          ],
          "group": "core",
          "key": "NOW",
          "lazy": false,
          "name": "NOW",
          "persist": false,
          "pure": false,
          "reference": [Function],
          "returns": "Date",
          "testCases": Array [],
        },
        "PI": Object {
          "acceptError": false,
          "args": Array [],
          "async": false,
          "chain": false,
          "description": "Returns the value of pi.",
          "effect": false,
          "examples": Array [
            Object {
              "codeFragments": Array [
                Object {
                  "attrs": undefined,
                  "code": "Equal",
                  "display": "=",
                  "errors": Array [],
                  "hide": false,
                  "type": "any",
                },
                Object {
                  "attrs": undefined,
                  "code": "Function",
                  "display": "PI",
                  "errors": Array [],
                  "hide": false,
                  "type": "any",
                },
                Object {
                  "attrs": undefined,
                  "code": "LParen",
                  "display": "(",
                  "errors": Array [],
                  "hide": false,
                  "type": "any",
                },
                Object {
                  "attrs": undefined,
                  "code": "RParen",
                  "display": ")",
                  "errors": Array [],
                  "hide": false,
                  "type": "number",
                },
              ],
              "input": "=PI()",
              "output": Object {
                "result": 3.141592653589793,
                "type": "number",
              },
            },
          ],
          "group": "core",
          "key": "PI",
          "lazy": false,
          "name": "PI",
          "persist": false,
          "pure": true,
          "reference": [Function],
          "returns": "number",
          "testCases": Array [
            Object {
              "input": Array [],
              "output": 3.141592653589793,
            },
          ],
        },
        "POWER": Object {
          "acceptError": false,
          "args": Array [
            Object {
              "name": "number",
              "type": "number",
            },
            Object {
              "name": "power",
              "type": "number",
            },
          ],
          "async": false,
          "chain": false,
          "description": "Returns the value of a number raised to a power.",
          "effect": false,
          "examples": Array [
            Object {
              "codeFragments": Array [
                Object {
                  "attrs": undefined,
                  "code": "Equal",
                  "display": "=",
                  "errors": Array [],
                  "hide": false,
                  "type": "any",
                },
                Object {
                  "attrs": undefined,
                  "code": "Function",
                  "display": "POWER",
                  "errors": Array [],
                  "hide": false,
                  "type": "any",
                },
                Object {
                  "attrs": undefined,
                  "code": "LParen",
                  "display": "(",
                  "errors": Array [],
                  "hide": false,
                  "type": "any",
                },
                Object {
                  "attrs": undefined,
                  "code": "NumberLiteral",
                  "display": "2",
                  "errors": Array [],
                  "hide": false,
                  "type": "number",
                },
                Object {
                  "attrs": undefined,
                  "code": "Comma",
                  "display": ",",
                  "errors": Array [],
                  "hide": false,
                  "type": "any",
                },
                Object {
                  "attrs": undefined,
                  "code": "NumberLiteral",
                  "display": "3",
                  "errors": Array [],
                  "hide": false,
                  "type": "number",
                },
                Object {
                  "attrs": undefined,
                  "code": "RParen",
                  "display": ")",
                  "errors": Array [],
                  "hide": false,
                  "type": "number",
                },
              ],
              "input": "=POWER(2,3)",
              "output": Object {
                "result": 8,
                "type": "number",
              },
            },
          ],
          "group": "core",
          "key": "POWER",
          "lazy": false,
          "name": "POWER",
          "persist": false,
          "pure": true,
          "reference": [Function],
          "returns": "number",
          "testCases": Array [
            Object {
              "input": Array [
                2,
                3,
              ],
              "output": 8,
            },
          ],
        },
        "RAND": Object {
          "acceptError": false,
          "args": Array [],
          "async": false,
          "chain": false,
          "description": "Returns a random number between 0 and 1.",
          "effect": false,
          "examples": Array [
            Object {
              "codeFragments": Array [
                Object {
                  "attrs": undefined,
                  "code": "Equal",
                  "display": "=",
                  "errors": Array [],
                  "hide": false,
                  "type": "any",
                },
                Object {
                  "attrs": undefined,
                  "code": "Function",
                  "display": "RAND",
                  "errors": Array [],
                  "hide": false,
                  "type": "any",
                },
                Object {
                  "attrs": undefined,
                  "code": "LParen",
                  "display": "(",
                  "errors": Array [],
                  "hide": false,
                  "type": "any",
                },
                Object {
                  "attrs": undefined,
                  "code": "RParen",
                  "display": ")",
                  "errors": Array [],
                  "hide": false,
                  "type": "number",
                },
              ],
              "input": "=RAND()",
              "output": Object {
                "result": 0.513,
                "type": "number",
              },
            },
          ],
          "group": "core",
          "key": "RAND",
          "lazy": false,
          "name": "RAND",
          "persist": false,
          "pure": false,
          "reference": [Function],
          "returns": "number",
          "testCases": Array [],
        },
        "RANDBETWEEN": Object {
          "acceptError": false,
          "args": Array [
            Object {
              "name": "min",
              "type": "number",
            },
            Object {
              "name": "max",
              "type": "number",
            },
          ],
          "async": false,
          "chain": false,
          "description": "Returns a random number between two numbers.",
          "effect": false,
          "examples": Array [
            Object {
              "codeFragments": Array [
                Object {
                  "attrs": undefined,
                  "code": "Equal",
                  "display": "=",
                  "errors": Array [],
                  "hide": false,
                  "type": "any",
                },
                Object {
                  "attrs": undefined,
                  "code": "Function",
                  "display": "RANDBETWEEN",
                  "errors": Array [],
                  "hide": false,
                  "type": "any",
                },
                Object {
                  "attrs": undefined,
                  "code": "LParen",
                  "display": "(",
                  "errors": Array [],
                  "hide": false,
                  "type": "any",
                },
                Object {
                  "attrs": undefined,
                  "code": "NumberLiteral",
                  "display": "1",
                  "errors": Array [],
                  "hide": false,
                  "type": "number",
                },
                Object {
                  "attrs": undefined,
                  "code": "Comma",
                  "display": ",",
                  "errors": Array [],
                  "hide": false,
                  "type": "any",
                },
                Object {
                  "attrs": undefined,
                  "code": "NumberLiteral",
                  "display": "10",
                  "errors": Array [],
                  "hide": false,
                  "type": "number",
                },
                Object {
                  "attrs": undefined,
                  "code": "RParen",
                  "display": ")",
                  "errors": Array [],
                  "hide": false,
                  "type": "number",
                },
              ],
              "input": "=RANDBETWEEN(1, 10)",
              "output": Object {
                "result": 5.13,
                "type": "number",
              },
            },
          ],
          "group": "core",
          "key": "RANDBETWEEN",
          "lazy": false,
          "name": "RANDBETWEEN",
          "persist": false,
          "pure": false,
          "reference": [Function],
          "returns": "number",
          "testCases": Array [],
        },
        "REQUEST_GET": Object {
          "acceptError": false,
          "args": Array [
            Object {
              "name": "url",
              "type": "string",
            },
          ],
          "async": true,
          "chain": false,
          "description": "request get",
          "effect": true,
          "examples": Array [
            Object {
              "codeFragments": Array [
                Object {
                  "attrs": undefined,
                  "code": "Equal",
                  "display": "=",
                  "errors": Array [],
                  "hide": false,
                  "type": "any",
                },
                Object {
                  "attrs": undefined,
                  "code": "Function",
                  "display": "REQUEST_GET",
                  "errors": Array [],
                  "hide": false,
                  "type": "any",
                },
                Object {
                  "attrs": undefined,
                  "code": "LParen",
                  "display": "(",
                  "errors": Array [],
                  "hide": false,
                  "type": "any",
                },
                Object {
                  "attrs": undefined,
                  "code": "NumberLiteral",
                  "display": "10",
                  "errors": Array [
                    Object {
                      "message": "Expected string but got number",
                      "type": "type",
                    },
                  ],
                  "hide": false,
                  "type": "number",
                },
                Object {
                  "attrs": undefined,
                  "code": "RParen",
                  "display": ")",
                  "errors": Array [],
                  "hide": false,
                  "type": "Record",
                },
              ],
              "input": "=REQUEST_GET(10)",
              "output": Object {
                "result": Object {},
                "subType": "any",
                "type": "Record",
              },
            },
          ],
          "group": "core",
          "key": "REQUEST_GET",
          "lazy": false,
          "name": "REQUEST_GET",
          "persist": false,
          "pure": false,
          "reference": [Function],
          "returns": "Record",
          "testCases": Array [],
        },
        "ROUND": Object {
          "acceptError": false,
          "args": Array [
            Object {
              "name": "number",
              "type": "number",
            },
          ],
          "async": false,
          "chain": false,
          "description": "Returns the number rounded to the specified number of decimal places.",
          "effect": false,
          "examples": Array [
            Object {
              "codeFragments": Array [
                Object {
                  "attrs": undefined,
                  "code": "Equal",
                  "display": "=",
                  "errors": Array [],
                  "hide": false,
                  "type": "any",
                },
                Object {
                  "attrs": undefined,
                  "code": "Function",
                  "display": "ROUND",
                  "errors": Array [],
                  "hide": false,
                  "type": "any",
                },
                Object {
                  "attrs": undefined,
                  "code": "LParen",
                  "display": "(",
                  "errors": Array [],
                  "hide": false,
                  "type": "any",
                },
                Object {
                  "attrs": undefined,
                  "code": "NumberLiteral",
                  "display": "1.5",
                  "errors": Array [],
                  "hide": false,
                  "type": "number",
                },
                Object {
                  "attrs": undefined,
                  "code": "RParen",
                  "display": ")",
                  "errors": Array [],
                  "hide": false,
                  "type": "number",
                },
              ],
              "input": "=ROUND(1.5)",
              "output": Object {
                "result": 2,
                "type": "number",
              },
            },
          ],
          "group": "core",
          "key": "ROUND",
          "lazy": false,
          "name": "ROUND",
          "persist": false,
          "pure": true,
          "reference": [Function],
          "returns": "number",
          "testCases": Array [],
        },
        "ROW_COUNT": Object {
          "acceptError": false,
          "args": Array [
            Object {
              "name": "spreadsheet",
              "type": "Spreadsheet",
            },
          ],
          "async": false,
          "chain": true,
          "description": "Returns the row size of the spreadsheet.",
          "effect": false,
          "examples": Array [
            Object {
              "codeFragments": Array [
                Object {
                  "attrs": undefined,
                  "code": "Equal",
                  "display": "=",
                  "errors": Array [],
                  "hide": false,
                  "type": "any",
                },
                Object {
                  "attrs": undefined,
                  "code": "NumberLiteral",
                  "display": "123",
                  "errors": Array [],
                  "hide": false,
                  "type": "number",
                },
              ],
              "input": "=123",
              "output": Object {
                "result": 123,
                "type": "number",
              },
            },
          ],
          "group": "core",
          "key": "ROW_COUNT",
          "lazy": false,
          "name": "ROW_COUNT",
          "persist": false,
          "pure": false,
          "reference": [Function],
          "returns": "number",
          "testCases": Array [],
        },
        "SELECT": Object {
          "acceptError": false,
          "args": Array [
            Object {
              "name": "options",
              "type": "Array",
            },
            Object {
              "name": "onChange",
              "type": "Function",
            },
          ],
          "async": false,
          "chain": false,
          "description": "Build select",
          "effect": false,
          "examples": Array [
            Object {
              "codeFragments": Array [
                Object {
                  "attrs": undefined,
                  "code": "Equal",
                  "display": "=",
                  "errors": Array [],
                  "hide": false,
                  "type": "any",
                },
                Object {
                  "attrs": undefined,
                  "code": "Function",
                  "display": "Select",
                  "errors": Array [],
                  "hide": false,
                  "type": "any",
                },
                Object {
                  "attrs": undefined,
                  "code": "LParen",
                  "display": "(",
                  "errors": Array [],
                  "hide": false,
                  "type": "any",
                },
                Object {
                  "attrs": undefined,
                  "code": "StringLiteral",
                  "display": "\\"name\\"",
                  "errors": Array [
                    Object {
                      "message": "Argument count mismatch",
                      "type": "deps",
                    },
                    Object {
                      "message": "Expected Array but got string",
                      "type": "type",
                    },
                  ],
                  "hide": false,
                  "type": "string",
                },
                Object {
                  "attrs": undefined,
                  "code": "RParen",
                  "display": ")",
                  "errors": Array [],
                  "hide": false,
                  "type": "Select",
                },
              ],
              "input": "=Select(\\"name\\")",
              "output": null,
            },
          ],
          "feature": "formula-controls",
          "group": "core",
          "key": "SELECT",
          "lazy": false,
          "name": "Select",
          "persist": false,
          "pure": true,
          "reference": [Function],
          "returns": "Select",
          "testCases": Array [],
        },
        "SET": Object {
          "acceptError": false,
          "args": Array [
            Object {
              "name": "name",
              "type": "Reference",
            },
            Object {
              "name": "body",
              "type": "Cst",
            },
          ],
          "async": false,
          "chain": false,
          "description": "Set variable",
          "effect": false,
          "examples": Array [
            Object {
              "codeFragments": Array [
                Object {
                  "attrs": undefined,
                  "code": "Equal",
                  "display": "=",
                  "errors": Array [],
                  "hide": false,
                  "type": "any",
                },
                Object {
                  "attrs": undefined,
                  "code": "Function",
                  "display": "Set",
                  "errors": Array [],
                  "hide": false,
                  "type": "any",
                },
                Object {
                  "attrs": undefined,
                  "code": "LParen",
                  "display": "(",
                  "errors": Array [],
                  "hide": false,
                  "type": "any",
                },
                Object {
                  "attrs": undefined,
                  "code": "Function",
                  "display": "A",
                  "errors": Array [
                    Object {
                      "message": "Unknown function A",
                      "type": "syntax",
                    },
                  ],
                  "hide": false,
                  "type": "any",
                },
                Object {
                  "attrs": undefined,
                  "code": "Comma",
                  "display": ",",
                  "errors": Array [],
                  "hide": false,
                  "type": "any",
                },
                Object {
                  "attrs": undefined,
                  "code": "Function",
                  "display": "A",
                  "errors": Array [
                    Object {
                      "message": "Unknown function A",
                      "type": "syntax",
                    },
                  ],
                  "hide": false,
                  "type": "any",
                },
                Object {
                  "attrs": undefined,
                  "code": "Plus",
                  "display": "+",
                  "errors": Array [],
                  "hide": false,
                  "type": "number",
                },
                Object {
                  "attrs": undefined,
                  "code": "NumberLiteral",
                  "display": "1",
                  "errors": Array [],
                  "hide": false,
                  "type": "number",
                },
                Object {
                  "attrs": undefined,
                  "code": "RParen",
                  "display": ")",
                  "errors": Array [],
                  "hide": false,
                  "type": "Function",
                },
              ],
              "input": "=Set(A, A+1)",
              "output": null,
            },
          ],
          "group": "core",
          "key": "SET",
          "lazy": true,
          "name": "Set",
          "persist": false,
          "pure": false,
          "reference": [Function],
          "returns": "Function",
          "testCases": Array [],
        },
        "SLEEP": Object {
          "acceptError": false,
          "args": Array [
            Object {
              "name": "number",
              "type": "number",
            },
          ],
          "async": true,
          "chain": false,
          "description": "Sleep for a given number of milliseconds",
          "effect": false,
          "examples": Array [
            Object {
              "codeFragments": Array [
                Object {
                  "attrs": undefined,
                  "code": "Equal",
                  "display": "=",
                  "errors": Array [],
                  "hide": false,
                  "type": "any",
                },
                Object {
                  "attrs": undefined,
                  "code": "Function",
                  "display": "SLEEP",
                  "errors": Array [],
                  "hide": false,
                  "type": "any",
                },
                Object {
                  "attrs": undefined,
                  "code": "LParen",
                  "display": "(",
                  "errors": Array [],
                  "hide": false,
                  "type": "any",
                },
                Object {
                  "attrs": undefined,
                  "code": "NumberLiteral",
                  "display": "10",
                  "errors": Array [],
                  "hide": false,
                  "type": "number",
                },
                Object {
                  "attrs": undefined,
                  "code": "RParen",
                  "display": ")",
                  "errors": Array [],
                  "hide": false,
                  "type": "number",
                },
              ],
              "input": "=SLEEP(10)",
              "output": Object {
                "result": 10,
                "type": "number",
              },
            },
          ],
          "group": "core",
          "key": "SLEEP",
          "lazy": false,
          "name": "SLEEP",
          "persist": false,
          "pure": false,
          "reference": [Function],
          "returns": "number",
          "testCases": Array [],
        },
        "SPLIT": Object {
          "acceptError": false,
          "args": Array [
            Object {
              "name": "string",
              "type": "string",
            },
            Object {
              "default": Object {
                "result": "",
                "type": "string",
              },
              "name": "separator",
              "type": "string",
            },
          ],
          "async": false,
          "chain": true,
          "description": "Returns an array of strings that result from splitting the string at the given separator.",
          "effect": false,
          "examples": Array [
            Object {
              "codeFragments": Array [
                Object {
                  "attrs": undefined,
                  "code": "Equal",
                  "display": "=",
                  "errors": Array [],
                  "hide": false,
                  "type": "any",
                },
                Object {
                  "attrs": undefined,
                  "code": "Function",
                  "display": "Split",
                  "errors": Array [],
                  "hide": false,
                  "type": "any",
                },
                Object {
                  "attrs": undefined,
                  "code": "LParen",
                  "display": "(",
                  "errors": Array [],
                  "hide": false,
                  "type": "any",
                },
                Object {
                  "attrs": undefined,
                  "code": "StringLiteral",
                  "display": "\\"foo\\"",
                  "errors": Array [],
                  "hide": false,
                  "type": "string",
                },
                Object {
                  "attrs": undefined,
                  "code": "Comma",
                  "display": ",",
                  "errors": Array [],
                  "hide": false,
                  "type": "any",
                },
                Object {
                  "attrs": undefined,
                  "code": "StringLiteral",
                  "display": "\\",\\"",
                  "errors": Array [],
                  "hide": false,
                  "type": "string",
                },
                Object {
                  "attrs": undefined,
                  "code": "RParen",
                  "display": ")",
                  "errors": Array [],
                  "hide": false,
                  "type": "Array",
                },
              ],
              "input": "=Split(\\"foo\\", \\",\\")",
              "output": Object {
                "result": Array [
                  Object {
                    "result": "foo",
                    "type": "string",
                  },
                ],
                "subType": "string",
                "type": "Array",
              },
            },
          ],
          "group": "core",
          "key": "SPLIT",
          "lazy": false,
          "name": "Split",
          "persist": false,
          "pure": true,
          "reference": [Function],
          "returns": "Array",
          "testCases": Array [],
        },
        "SPREADSHEET": Object {
          "acceptError": false,
          "args": Array [
            Object {
              "name": "array",
              "type": "Array",
            },
          ],
          "async": false,
          "chain": true,
          "description": "Returns the spreadsheet.",
          "effect": false,
          "examples": Array [
            Object {
              "codeFragments": Array [
                Object {
                  "attrs": undefined,
                  "code": "Equal",
                  "display": "=",
                  "errors": Array [],
                  "hide": false,
                  "type": "any",
                },
                Object {
                  "attrs": undefined,
                  "code": "NumberLiteral",
                  "display": "123",
                  "errors": Array [],
                  "hide": false,
                  "type": "number",
                },
              ],
              "input": "=123",
              "output": null,
            },
          ],
          "group": "core",
          "key": "SPREADSHEET",
          "lazy": false,
          "name": "Spreadsheet",
          "persist": false,
          "pure": true,
          "reference": [Function],
          "returns": "Spreadsheet",
          "testCases": Array [],
        },
        "SQRT": Object {
          "acceptError": false,
          "args": Array [
            Object {
              "name": "number",
              "type": "number",
            },
          ],
          "async": false,
          "chain": false,
          "description": "Returns the square root of a number.",
          "effect": false,
          "examples": Array [
            Object {
              "codeFragments": Array [
                Object {
                  "attrs": undefined,
                  "code": "Equal",
                  "display": "=",
                  "errors": Array [],
                  "hide": false,
                  "type": "any",
                },
                Object {
                  "attrs": undefined,
                  "code": "Function",
                  "display": "SQRT",
                  "errors": Array [],
                  "hide": false,
                  "type": "any",
                },
                Object {
                  "attrs": undefined,
                  "code": "LParen",
                  "display": "(",
                  "errors": Array [],
                  "hide": false,
                  "type": "any",
                },
                Object {
                  "attrs": undefined,
                  "code": "NumberLiteral",
                  "display": "4",
                  "errors": Array [],
                  "hide": false,
                  "type": "number",
                },
                Object {
                  "attrs": undefined,
                  "code": "RParen",
                  "display": ")",
                  "errors": Array [],
                  "hide": false,
                  "type": "number",
                },
              ],
              "input": "=SQRT(4)",
              "output": Object {
                "result": 2,
                "type": "number",
              },
            },
          ],
          "group": "core",
          "key": "SQRT",
          "lazy": false,
          "name": "SQRT",
          "persist": false,
          "pure": true,
          "reference": [Function],
          "returns": "number",
          "testCases": Array [],
        },
        "SQRTPI": Object {
          "acceptError": false,
          "args": Array [
            Object {
              "name": "number",
              "type": "number",
            },
          ],
          "async": false,
          "chain": false,
          "description": "Returns the square root of a number multiplied by pi.",
          "effect": false,
          "examples": Array [
            Object {
              "codeFragments": Array [
                Object {
                  "attrs": undefined,
                  "code": "Equal",
                  "display": "=",
                  "errors": Array [],
                  "hide": false,
                  "type": "any",
                },
                Object {
                  "attrs": undefined,
                  "code": "Function",
                  "display": "SQRTPI",
                  "errors": Array [],
                  "hide": false,
                  "type": "any",
                },
                Object {
                  "attrs": undefined,
                  "code": "LParen",
                  "display": "(",
                  "errors": Array [],
                  "hide": false,
                  "type": "any",
                },
                Object {
                  "attrs": undefined,
                  "code": "NumberLiteral",
                  "display": "4",
                  "errors": Array [],
                  "hide": false,
                  "type": "number",
                },
                Object {
                  "attrs": undefined,
                  "code": "RParen",
                  "display": ")",
                  "errors": Array [],
                  "hide": false,
                  "type": "number",
                },
              ],
              "input": "=SQRTPI(4)",
              "output": Object {
                "result": 3.5449077018110318,
                "type": "number",
              },
            },
          ],
          "group": "core",
          "key": "SQRTPI",
          "lazy": false,
          "name": "SQRTPI",
          "persist": false,
          "pure": true,
          "reference": [Function],
          "returns": "number",
          "testCases": Array [],
        },
        "START_WITH": Object {
          "acceptError": false,
          "args": Array [
            Object {
              "name": "string",
              "type": "string",
            },
            Object {
              "name": "prefix",
              "type": "string",
            },
          ],
          "async": false,
          "chain": true,
          "description": "Returns true if the sequence of elements of searchString converted to a String",
          "effect": false,
          "examples": Array [
            Object {
              "codeFragments": Array [
                Object {
                  "attrs": undefined,
                  "code": "Equal",
                  "display": "=",
                  "errors": Array [],
                  "hide": false,
                  "type": "any",
                },
                Object {
                  "attrs": undefined,
                  "code": "Function",
                  "display": "START_WITH",
                  "errors": Array [],
                  "hide": false,
                  "type": "any",
                },
                Object {
                  "attrs": undefined,
                  "code": "LParen",
                  "display": "(",
                  "errors": Array [],
                  "hide": false,
                  "type": "any",
                },
                Object {
                  "attrs": undefined,
                  "code": "StringLiteral",
                  "display": "\\"foo\\"",
                  "errors": Array [],
                  "hide": false,
                  "type": "string",
                },
                Object {
                  "attrs": undefined,
                  "code": "Comma",
                  "display": ",",
                  "errors": Array [],
                  "hide": false,
                  "type": "any",
                },
                Object {
                  "attrs": undefined,
                  "code": "StringLiteral",
                  "display": "\\"bar\\"",
                  "errors": Array [],
                  "hide": false,
                  "type": "string",
                },
                Object {
                  "attrs": undefined,
                  "code": "RParen",
                  "display": ")",
                  "errors": Array [],
                  "hide": false,
                  "type": "boolean",
                },
              ],
              "input": "=START_WITH(\\"foo\\", \\"bar\\")",
              "output": Object {
                "result": false,
                "type": "boolean",
              },
            },
            Object {
              "codeFragments": Array [
                Object {
                  "attrs": undefined,
                  "code": "Equal",
                  "display": "=",
                  "errors": Array [],
                  "hide": false,
                  "type": "any",
                },
                Object {
                  "attrs": undefined,
                  "code": "Function",
                  "display": "START_WITH",
                  "errors": Array [],
                  "hide": false,
                  "type": "any",
                },
                Object {
                  "attrs": undefined,
                  "code": "LParen",
                  "display": "(",
                  "errors": Array [],
                  "hide": false,
                  "type": "any",
                },
                Object {
                  "attrs": undefined,
                  "code": "StringLiteral",
                  "display": "\\"foobar\\"",
                  "errors": Array [],
                  "hide": false,
                  "type": "string",
                },
                Object {
                  "attrs": undefined,
                  "code": "Comma",
                  "display": ",",
                  "errors": Array [],
                  "hide": false,
                  "type": "any",
                },
                Object {
                  "attrs": undefined,
                  "code": "StringLiteral",
                  "display": "\\"foo\\"",
                  "errors": Array [],
                  "hide": false,
                  "type": "string",
                },
                Object {
                  "attrs": undefined,
                  "code": "RParen",
                  "display": ")",
                  "errors": Array [],
                  "hide": false,
                  "type": "boolean",
                },
              ],
              "input": "=START_WITH(\\"foobar\\", \\"foo\\")",
              "output": Object {
                "result": true,
                "type": "boolean",
              },
            },
          ],
          "group": "core",
          "key": "START_WITH",
          "lazy": false,
          "name": "START_WITH",
          "persist": false,
          "pure": true,
          "reference": [Function],
          "returns": "boolean",
          "testCases": Array [
            Object {
              "input": Array [
                Object {
                  "result": "foobar",
                  "type": "string",
                },
                Object {
                  "result": "foo",
                  "type": "string",
                },
              ],
              "output": true,
            },
            Object {
              "input": Array [
                Object {
                  "result": "",
                  "type": "string",
                },
                Object {
                  "result": "",
                  "type": "string",
                },
              ],
              "output": true,
            },
          ],
        },
        "SUM": Object {
          "acceptError": false,
          "args": Array [
            Object {
              "name": "column",
              "type": "Column",
            },
          ],
          "async": false,
          "chain": true,
          "description": "Returns the sum of the column in the spreadsheet.",
          "effect": false,
          "examples": Array [
            Object {
              "codeFragments": Array [
                Object {
                  "attrs": undefined,
                  "code": "Equal",
                  "display": "=",
                  "errors": Array [],
                  "hide": false,
                  "type": "any",
                },
                Object {
                  "attrs": undefined,
                  "code": "NumberLiteral",
                  "display": "123",
                  "errors": Array [],
                  "hide": false,
                  "type": "number",
                },
              ],
              "input": "=123",
              "output": Object {
                "result": 123,
                "type": "number",
              },
            },
          ],
          "group": "core",
          "key": "SUM",
          "lazy": false,
          "name": "SUM",
          "persist": false,
          "pure": false,
          "reference": [Function],
          "returns": "number",
          "testCases": Array [],
        },
        "SUM1": Object {
          "acceptError": false,
          "args": Array [
            Object {
              "name": "numbers",
              "spread": true,
              "type": "number",
            },
          ],
          "async": false,
          "chain": false,
          "description": "Returns the sum of the numbers in the list.",
          "effect": false,
          "examples": Array [
            Object {
              "codeFragments": Array [
                Object {
                  "attrs": undefined,
                  "code": "Equal",
                  "display": "=",
                  "errors": Array [],
                  "hide": false,
                  "type": "any",
                },
                Object {
                  "attrs": undefined,
                  "code": "Function",
                  "display": "SUM",
                  "errors": Array [],
                  "hide": false,
                  "type": "any",
                },
                Object {
                  "attrs": undefined,
                  "code": "LParen",
                  "display": "(",
                  "errors": Array [],
                  "hide": false,
                  "type": "any",
                },
                Object {
                  "attrs": undefined,
                  "code": "NumberLiteral",
                  "display": "-1",
                  "errors": Array [
                    Object {
                      "message": "Argument count mismatch",
                      "type": "deps",
                    },
                    Object {
                      "message": "Expected Column but got number",
                      "type": "type",
                    },
                  ],
                  "hide": false,
                  "type": "number",
                },
                Object {
                  "attrs": undefined,
                  "code": "Comma",
                  "display": ",",
                  "errors": Array [
                    Object {
                      "message": "Argument count mismatch",
                      "type": "deps",
                    },
                  ],
                  "hide": false,
                  "type": "any",
                },
                Object {
                  "attrs": undefined,
                  "code": "NumberLiteral",
                  "display": "0",
                  "errors": Array [
                    Object {
                      "message": "Argument count mismatch",
                      "type": "deps",
                    },
                  ],
                  "hide": false,
                  "type": "number",
                },
                Object {
                  "attrs": undefined,
                  "code": "Comma",
                  "display": ",",
                  "errors": Array [
                    Object {
                      "message": "Argument count mismatch",
                      "type": "deps",
                    },
                  ],
                  "hide": false,
                  "type": "any",
                },
                Object {
                  "attrs": undefined,
                  "code": "NumberLiteral",
                  "display": "4",
                  "errors": Array [
                    Object {
                      "message": "Argument count mismatch",
                      "type": "deps",
                    },
                  ],
                  "hide": false,
                  "type": "number",
                },
                Object {
                  "attrs": undefined,
                  "code": "RParen",
                  "display": ")",
                  "errors": Array [],
                  "hide": false,
                  "type": "number",
                },
              ],
              "input": "=SUM(-1, 0, 4)",
              "output": Object {
                "result": 3,
                "type": "number",
              },
            },
          ],
          "group": "core",
          "key": "SUM1",
          "lazy": false,
          "name": "SUM1",
          "persist": false,
          "pure": true,
          "reference": [Function],
          "returns": "number",
          "testCases": Array [],
        },
        "SUMIFS": Object {
          "acceptError": false,
          "args": Array [
            Object {
              "name": "column1",
              "type": "Column",
            },
            Object {
              "name": "column2",
              "type": "Column",
            },
            Object {
              "name": "condition",
              "type": "Predicate",
            },
          ],
          "async": false,
          "chain": false,
          "description": "Returns the sum of the column in the spreadsheet.",
          "effect": false,
          "examples": Array [
            Object {
              "codeFragments": Array [
                Object {
                  "attrs": undefined,
                  "code": "Equal",
                  "display": "=",
                  "errors": Array [],
                  "hide": false,
                  "type": "any",
                },
                Object {
                  "attrs": undefined,
                  "code": "NumberLiteral",
                  "display": "123",
                  "errors": Array [],
                  "hide": false,
                  "type": "number",
                },
              ],
              "input": "=123",
              "output": Object {
                "result": 123,
                "type": "number",
              },
            },
          ],
          "group": "core",
          "key": "SUMIFS",
          "lazy": false,
          "name": "SUMIFS",
          "persist": false,
          "pure": false,
          "reference": [Function],
          "returns": "number",
          "testCases": Array [],
        },
        "SUMPRODUCT": Object {
          "acceptError": false,
          "args": Array [
            Object {
              "name": "column1",
              "type": "Column",
            },
            Object {
              "name": "column2",
              "type": "Column",
            },
          ],
          "async": false,
          "chain": false,
          "description": "Returns the sum of the column in the spreadsheet.",
          "effect": false,
          "examples": Array [
            Object {
              "codeFragments": Array [
                Object {
                  "attrs": undefined,
                  "code": "Equal",
                  "display": "=",
                  "errors": Array [],
                  "hide": false,
                  "type": "any",
                },
                Object {
                  "attrs": undefined,
                  "code": "NumberLiteral",
                  "display": "123",
                  "errors": Array [],
                  "hide": false,
                  "type": "number",
                },
              ],
              "input": "=123",
              "output": Object {
                "result": 123,
                "type": "number",
              },
            },
          ],
          "group": "core",
          "key": "SUMPRODUCT",
          "lazy": false,
          "name": "SUMPRODUCT",
          "persist": false,
          "pure": false,
          "reference": [Function],
          "returns": "number",
          "testCases": Array [],
        },
        "SWITCH": Object {
          "acceptError": false,
          "args": Array [
            Object {
              "name": "name",
              "type": "boolean",
            },
            Object {
              "name": "onChange",
              "type": "Function",
            },
          ],
          "async": false,
          "chain": false,
          "description": "Build switch",
          "effect": false,
          "examples": Array [
            Object {
              "codeFragments": Array [
                Object {
                  "attrs": undefined,
                  "code": "Equal",
                  "display": "=",
                  "errors": Array [],
                  "hide": false,
                  "type": "any",
                },
                Object {
                  "attrs": undefined,
                  "code": "Function",
                  "display": "Switch",
                  "errors": Array [],
                  "hide": false,
                  "type": "any",
                },
                Object {
                  "attrs": undefined,
                  "code": "LParen",
                  "display": "(",
                  "errors": Array [],
                  "hide": false,
                  "type": "any",
                },
                Object {
                  "attrs": undefined,
                  "code": "StringLiteral",
                  "display": "\\"name\\"",
                  "errors": Array [
                    Object {
                      "message": "Argument count mismatch",
                      "type": "deps",
                    },
                    Object {
                      "message": "Expected boolean but got string",
                      "type": "type",
                    },
                  ],
                  "hide": false,
                  "type": "string",
                },
                Object {
                  "attrs": undefined,
                  "code": "RParen",
                  "display": ")",
                  "errors": Array [],
                  "hide": false,
                  "type": "Switch",
                },
              ],
              "input": "=Switch(\\"name\\")",
              "output": null,
            },
          ],
          "feature": "formula-controls",
          "group": "core",
          "key": "SWITCH",
          "lazy": false,
          "name": "Switch",
          "persist": false,
          "pure": true,
          "reference": [Function],
          "returns": "Switch",
          "testCases": Array [],
        },
        "T": Object {
          "acceptError": true,
          "args": Array [
            Object {
              "name": "obj",
              "type": "any",
            },
          ],
          "async": false,
          "chain": true,
          "description": "Returns current object",
          "effect": false,
          "examples": Array [
            Object {
              "codeFragments": Array [
                Object {
                  "attrs": undefined,
                  "code": "Equal",
                  "display": "=",
                  "errors": Array [],
                  "hide": false,
                  "type": "any",
                },
                Object {
                  "attrs": undefined,
                  "code": "Function",
                  "display": "T",
                  "errors": Array [],
                  "hide": false,
                  "type": "any",
                },
                Object {
                  "attrs": undefined,
                  "code": "LParen",
                  "display": "(",
                  "errors": Array [],
                  "hide": false,
                  "type": "any",
                },
                Object {
                  "attrs": undefined,
                  "code": "NumberLiteral",
                  "display": "100",
                  "errors": Array [],
                  "hide": false,
                  "type": "number",
                },
                Object {
                  "attrs": undefined,
                  "code": "RParen",
                  "display": ")",
                  "errors": Array [],
                  "hide": false,
                  "type": "any",
                },
              ],
              "input": "=T(100)",
              "output": Object {
                "result": 100,
                "type": "number",
              },
            },
            Object {
              "codeFragments": Array [
                Object {
                  "attrs": undefined,
                  "code": "Equal",
                  "display": "=",
                  "errors": Array [],
                  "hide": false,
                  "type": "any",
                },
                Object {
                  "attrs": undefined,
                  "code": "Function",
                  "display": "T",
                  "errors": Array [],
                  "hide": false,
                  "type": "any",
                },
                Object {
                  "attrs": undefined,
                  "code": "LParen",
                  "display": "(",
                  "errors": Array [],
                  "hide": false,
                  "type": "any",
                },
                Object {
                  "attrs": undefined,
                  "code": "StringLiteral",
                  "display": "\\"foo\\"",
                  "errors": Array [],
                  "hide": false,
                  "type": "string",
                },
                Object {
                  "attrs": undefined,
                  "code": "RParen",
                  "display": ")",
                  "errors": Array [],
                  "hide": false,
                  "type": "any",
                },
              ],
              "input": "=T(\\"foo\\")",
              "output": Object {
                "result": "foo",
                "type": "string",
              },
            },
          ],
          "group": "core",
          "key": "T",
          "lazy": false,
          "name": "T",
          "persist": false,
          "pure": true,
          "reference": [Function],
          "returns": "any",
          "testCases": Array [],
        },
        "TOARRAY": Object {
          "acceptError": false,
          "args": Array [
            Object {
              "name": "input",
              "type": "any",
            },
          ],
          "async": false,
          "chain": true,
          "description": "Converts the value to an array.",
          "effect": false,
          "examples": Array [
            Object {
              "codeFragments": Array [
                Object {
                  "attrs": undefined,
                  "code": "Equal",
                  "display": "=",
                  "errors": Array [],
                  "hide": false,
                  "type": "any",
                },
                Object {
                  "attrs": undefined,
                  "code": "NumberLiteral",
                  "display": "123",
                  "errors": Array [],
                  "hide": false,
                  "type": "number",
                },
              ],
              "input": "=123",
              "output": Object {
                "result": Array [],
                "subType": "void",
                "type": "Array",
              },
            },
          ],
          "group": "core",
          "key": "TOARRAY",
          "lazy": false,
          "name": "toArray",
          "persist": false,
          "pure": true,
          "reference": [Function],
          "returns": "Array",
          "testCases": Array [],
        },
        "TOBAR": Object {
          "acceptError": false,
          "args": Array [
            Object {
              "name": "record",
              "type": "Record",
            },
          ],
          "async": false,
          "chain": true,
          "description": "Converts a record to a bar",
          "effect": false,
          "examples": Array [
            Object {
              "codeFragments": Array [
                Object {
                  "attrs": undefined,
                  "code": "Equal",
                  "display": "=",
                  "errors": Array [],
                  "hide": false,
                  "type": "any",
                },
                Object {
                  "attrs": undefined,
                  "code": "Function",
                  "display": "toBar",
                  "errors": Array [],
                  "hide": false,
                  "type": "any",
                },
                Object {
                  "attrs": undefined,
                  "code": "LParen",
                  "display": "(",
                  "errors": Array [],
                  "hide": false,
                  "type": "any",
                },
                Object {
                  "attrs": undefined,
                  "code": "LBrace",
                  "display": "{",
                  "errors": Array [],
                  "hide": false,
                  "type": "any",
                },
                Object {
                  "attrs": undefined,
                  "code": "RBrace",
                  "display": "}",
                  "errors": Array [],
                  "hide": false,
                  "type": "any",
                },
                Object {
                  "attrs": undefined,
                  "code": "RParen",
                  "display": ")",
                  "errors": Array [],
                  "hide": false,
                  "type": "Record",
                },
              ],
              "input": "=toBar({})",
              "output": Object {
                "result": Object {},
                "subType": "string",
                "type": "Record",
                "view": Object {
                  "attrs": Object {},
                  "type": "bar",
                },
              },
            },
          ],
          "group": "core",
          "key": "TOBAR",
          "lazy": false,
          "name": "toBar",
          "persist": false,
          "pure": true,
          "reference": [Function],
          "returns": "Record",
          "testCases": Array [],
        },
        "TONUMBER": Object {
          "acceptError": false,
          "args": Array [
            Object {
              "name": "string",
              "type": "string",
            },
          ],
          "async": false,
          "chain": true,
          "description": "Converts a string to a number",
          "effect": false,
          "examples": Array [
            Object {
              "codeFragments": Array [
                Object {
                  "attrs": undefined,
                  "code": "Equal",
                  "display": "=",
                  "errors": Array [],
                  "hide": false,
                  "type": "any",
                },
                Object {
                  "attrs": undefined,
                  "code": "Function",
                  "display": "toNumber",
                  "errors": Array [],
                  "hide": false,
                  "type": "any",
                },
                Object {
                  "attrs": undefined,
                  "code": "LParen",
                  "display": "(",
                  "errors": Array [],
                  "hide": false,
                  "type": "any",
                },
                Object {
                  "attrs": undefined,
                  "code": "StringLiteral",
                  "display": "\\"123\\"",
                  "errors": Array [],
                  "hide": false,
                  "type": "string",
                },
                Object {
                  "attrs": undefined,
                  "code": "RParen",
                  "display": ")",
                  "errors": Array [],
                  "hide": false,
                  "type": "number",
                },
              ],
              "input": "=toNumber(\\"123\\")",
              "output": Object {
                "result": 123,
                "type": "number",
              },
            },
            Object {
              "codeFragments": Array [
                Object {
                  "attrs": undefined,
                  "code": "Equal",
                  "display": "=",
                  "errors": Array [],
                  "hide": false,
                  "type": "any",
                },
                Object {
                  "attrs": undefined,
                  "code": "Function",
                  "display": "toNumber",
                  "errors": Array [],
                  "hide": false,
                  "type": "any",
                },
                Object {
                  "attrs": undefined,
                  "code": "LParen",
                  "display": "(",
                  "errors": Array [],
                  "hide": false,
                  "type": "any",
                },
                Object {
                  "attrs": undefined,
                  "code": "StringLiteral",
                  "display": "\\"foo\\"",
                  "errors": Array [],
                  "hide": false,
                  "type": "string",
                },
                Object {
                  "attrs": undefined,
                  "code": "RParen",
                  "display": ")",
                  "errors": Array [],
                  "hide": false,
                  "type": "number",
                },
              ],
              "input": "=toNumber(\\"foo\\")",
              "output": Object {
                "errorKind": "runtime",
                "result": "Not a number",
                "type": "Error",
              },
            },
          ],
          "group": "core",
          "key": "TONUMBER",
          "lazy": false,
          "name": "toNumber",
          "persist": false,
          "pure": true,
          "reference": [Function],
          "returns": "number",
          "testCases": Array [],
        },
        "TOQRCODE": Object {
          "acceptError": false,
          "args": Array [
            Object {
              "name": "string",
              "type": "string",
            },
          ],
          "async": false,
          "chain": true,
          "description": "Converts a string to a qrcode",
          "effect": false,
          "examples": Array [
            Object {
              "codeFragments": Array [
                Object {
                  "attrs": undefined,
                  "code": "Equal",
                  "display": "=",
                  "errors": Array [],
                  "hide": false,
                  "type": "any",
                },
                Object {
                  "attrs": undefined,
                  "code": "Function",
                  "display": "toQrcode",
                  "errors": Array [],
                  "hide": false,
                  "type": "any",
                },
                Object {
                  "attrs": undefined,
                  "code": "LParen",
                  "display": "(",
                  "errors": Array [],
                  "hide": false,
                  "type": "any",
                },
                Object {
                  "attrs": undefined,
                  "code": "StringLiteral",
                  "display": "\\"123\\"",
                  "errors": Array [],
                  "hide": false,
                  "type": "string",
                },
                Object {
                  "attrs": undefined,
                  "code": "RParen",
                  "display": ")",
                  "errors": Array [],
                  "hide": false,
                  "type": "string",
                },
              ],
              "input": "=toQrcode(\\"123\\")",
              "output": Object {
                "result": "123",
                "type": "string",
                "view": Object {
                  "attrs": Object {},
                  "type": "qrcode",
                },
              },
            },
          ],
          "group": "core",
          "key": "TOQRCODE",
          "lazy": false,
          "name": "toQrcode",
          "persist": false,
          "pure": true,
          "reference": [Function],
          "returns": "string",
          "testCases": Array [],
        },
        "TORECORD": Object {
          "acceptError": false,
          "args": Array [
            Object {
              "name": "input",
              "type": "any",
            },
          ],
          "async": false,
          "chain": true,
          "description": "Converts the value to a record.",
          "effect": false,
          "examples": Array [
            Object {
              "codeFragments": Array [
                Object {
                  "attrs": undefined,
                  "code": "Equal",
                  "display": "=",
                  "errors": Array [],
                  "hide": false,
                  "type": "any",
                },
                Object {
                  "attrs": undefined,
                  "code": "Function",
                  "display": "toRecord",
                  "errors": Array [],
                  "hide": false,
                  "type": "any",
                },
                Object {
                  "attrs": undefined,
                  "code": "LParen",
                  "display": "(",
                  "errors": Array [
                    Object {
                      "message": "Missing closing parenthesis",
                      "type": "syntax",
                    },
                  ],
                  "hide": false,
                  "type": "any",
                },
                Object {
                  "attrs": undefined,
                  "code": "Function",
                  "display": "new",
                  "errors": Array [
                    Object {
                      "message": "Function new not found",
                      "type": "deps",
                    },
                  ],
                  "hide": false,
                  "type": "any",
                },
                Object {
                  "attrs": undefined,
                  "code": "LParen",
                  "display": "",
                  "errors": Array [],
                  "hide": false,
                  "type": "any",
                },
                Object {
                  "attrs": undefined,
                  "code": "Function",
                  "display": "Date",
                  "errors": Array [
                    Object {
                      "message": "Miss argument",
                      "type": "deps",
                    },
                  ],
                  "hide": false,
                  "type": "any",
                },
                Object {
                  "attrs": undefined,
                  "code": "LParen",
                  "display": "(",
                  "errors": Array [],
                  "hide": false,
                  "type": "any",
                },
                Object {
                  "attrs": undefined,
                  "code": "RParen",
                  "display": ")",
                  "errors": Array [],
                  "hide": false,
                  "type": "Date",
                },
                Object {
                  "attrs": undefined,
                  "code": "RParen",
                  "display": ")",
                  "errors": Array [],
                  "hide": false,
                  "type": "any",
                },
              ],
              "input": "=toRecord(new Date())",
              "output": Object {
                "result": Object {
                  "day": Object {
                    "result": 1,
                    "type": "number",
                  },
                  "hour": Object {
                    "result": 0,
                    "type": "number",
                  },
                  "minutes": Object {
                    "result": 0,
                    "type": "number",
                  },
                  "month": Object {
                    "result": 0,
                    "type": "number",
                  },
                  "seconds": Object {
                    "result": 0,
                    "type": "number",
                  },
                  "year": Object {
                    "result": 1970,
                    "type": "number",
                  },
                },
                "subType": "number",
                "type": "Record",
              },
            },
            Object {
              "codeFragments": Array [
                Object {
                  "attrs": undefined,
                  "code": "Equal",
                  "display": "=",
                  "errors": Array [],
                  "hide": false,
                  "type": "any",
                },
                Object {
                  "attrs": undefined,
                  "code": "Function",
                  "display": "toRecord",
                  "errors": Array [],
                  "hide": false,
                  "type": "any",
                },
                Object {
                  "attrs": undefined,
                  "code": "LParen",
                  "display": "(",
                  "errors": Array [],
                  "hide": false,
                  "type": "any",
                },
                Object {
                  "attrs": undefined,
                  "code": "NumberLiteral",
                  "display": "123",
                  "errors": Array [],
                  "hide": false,
                  "type": "number",
                },
                Object {
                  "attrs": undefined,
                  "code": "RParen",
                  "display": ")",
                  "errors": Array [],
                  "hide": false,
                  "type": "Record",
                },
              ],
              "input": "=toRecord(123)",
              "output": Object {
                "errorKind": "runtime",
                "result": "Not support",
                "type": "Error",
              },
            },
          ],
          "group": "core",
          "key": "TORECORD",
          "lazy": false,
          "name": "toRecord",
          "persist": false,
          "pure": true,
          "reference": [Function],
          "returns": "Record",
          "testCases": Array [],
        },
        "TORECORDARRAY": Object {
          "acceptError": false,
          "args": Array [
            Object {
              "name": "spreadsheet",
              "type": "Spreadsheet",
            },
          ],
          "async": false,
          "chain": true,
          "description": "Converts the value to a record.",
          "effect": false,
          "examples": Array [
            Object {
              "codeFragments": Array [
                Object {
                  "attrs": undefined,
                  "code": "Equal",
                  "display": "=",
                  "errors": Array [],
                  "hide": false,
                  "type": "any",
                },
                Object {
                  "attrs": undefined,
                  "code": "NumberLiteral",
                  "display": "123",
                  "errors": Array [],
                  "hide": false,
                  "type": "number",
                },
              ],
              "input": "=123",
              "output": Object {
                "result": Array [],
                "subType": "void",
                "type": "Array",
              },
            },
          ],
          "group": "core",
          "key": "TORECORDARRAY",
          "lazy": false,
          "name": "toRecordArray",
          "persist": false,
          "pure": true,
          "reference": [Function],
          "returns": "Array",
          "testCases": Array [],
        },
        "TOSTRING": Object {
          "acceptError": true,
          "args": Array [
            Object {
              "name": "obj",
              "type": "any",
            },
          ],
          "async": false,
          "chain": true,
          "description": "Returns string representation of current object",
          "effect": false,
          "examples": Array [
            Object {
              "codeFragments": Array [
                Object {
                  "attrs": undefined,
                  "code": "Equal",
                  "display": "=",
                  "errors": Array [],
                  "hide": false,
                  "type": "any",
                },
                Object {
                  "attrs": undefined,
                  "code": "Function",
                  "display": "toString",
                  "errors": Array [],
                  "hide": false,
                  "type": "any",
                },
                Object {
                  "attrs": undefined,
                  "code": "LParen",
                  "display": "(",
                  "errors": Array [],
                  "hide": false,
                  "type": "any",
                },
                Object {
                  "attrs": undefined,
                  "code": "NumberLiteral",
                  "display": "100",
                  "errors": Array [],
                  "hide": false,
                  "type": "number",
                },
                Object {
                  "attrs": undefined,
                  "code": "RParen",
                  "display": ")",
                  "errors": Array [],
                  "hide": false,
                  "type": "string",
                },
              ],
              "input": "=toString(100)",
              "output": Object {
                "result": "100",
                "type": "string",
              },
            },
            Object {
              "codeFragments": Array [
                Object {
                  "attrs": undefined,
                  "code": "Equal",
                  "display": "=",
                  "errors": Array [],
                  "hide": false,
                  "type": "any",
                },
                Object {
                  "attrs": undefined,
                  "code": "Function",
                  "display": "toString",
                  "errors": Array [],
                  "hide": false,
                  "type": "any",
                },
                Object {
                  "attrs": undefined,
                  "code": "LParen",
                  "display": "(",
                  "errors": Array [],
                  "hide": false,
                  "type": "any",
                },
                Object {
                  "attrs": undefined,
                  "code": "StringLiteral",
                  "display": "\\"foo\\"",
                  "errors": Array [],
                  "hide": false,
                  "type": "string",
                },
                Object {
                  "attrs": undefined,
                  "code": "RParen",
                  "display": ")",
                  "errors": Array [],
                  "hide": false,
                  "type": "string",
                },
              ],
              "input": "=toString(\\"foo\\")",
              "output": Object {
                "result": "foo",
                "type": "string",
              },
            },
          ],
          "group": "core",
          "key": "TOSTRING",
          "lazy": false,
          "name": "toString",
          "persist": false,
          "pure": true,
          "reference": [Function],
          "returns": "string",
          "testCases": Array [],
        },
        "TRIM": Object {
          "acceptError": false,
          "args": Array [
            Object {
              "name": "str",
              "type": "string",
            },
          ],
          "async": false,
          "chain": true,
          "description": "Returns the string with leading and trailing whitespace removed.",
          "effect": false,
          "examples": Array [
            Object {
              "codeFragments": Array [
                Object {
                  "attrs": undefined,
                  "code": "Equal",
                  "display": "=",
                  "errors": Array [],
                  "hide": false,
                  "type": "any",
                },
                Object {
                  "attrs": undefined,
                  "code": "Function",
                  "display": "TRIM",
                  "errors": Array [],
                  "hide": false,
                  "type": "any",
                },
                Object {
                  "attrs": undefined,
                  "code": "LParen",
                  "display": "(",
                  "errors": Array [],
                  "hide": false,
                  "type": "any",
                },
                Object {
                  "attrs": undefined,
                  "code": "StringLiteral",
                  "display": "\\"  foo  \\"",
                  "errors": Array [],
                  "hide": false,
                  "type": "string",
                },
                Object {
                  "attrs": undefined,
                  "code": "RParen",
                  "display": ")",
                  "errors": Array [],
                  "hide": false,
                  "type": "string",
                },
              ],
              "input": "=TRIM(\\"  foo  \\")",
              "output": Object {
                "result": "foo",
                "type": "string",
              },
            },
          ],
          "group": "core",
          "key": "TRIM",
          "lazy": false,
          "name": "TRIM",
          "persist": false,
          "pure": true,
          "reference": [Function],
          "returns": "string",
          "testCases": Array [
            Object {
              "input": Array [
                Object {
                  "result": " abc ",
                  "type": "string",
                },
              ],
              "output": "abc",
            },
          ],
        },
        "TRUNC": Object {
          "acceptError": false,
          "args": Array [
            Object {
              "name": "number",
              "type": "number",
            },
          ],
          "async": false,
          "chain": false,
          "description": "Returns the integer part of a number.",
          "effect": false,
          "examples": Array [
            Object {
              "codeFragments": Array [
                Object {
                  "attrs": undefined,
                  "code": "Equal",
                  "display": "=",
                  "errors": Array [],
                  "hide": false,
                  "type": "any",
                },
                Object {
                  "attrs": undefined,
                  "code": "Function",
                  "display": "TRUNC",
                  "errors": Array [],
                  "hide": false,
                  "type": "any",
                },
                Object {
                  "attrs": undefined,
                  "code": "LParen",
                  "display": "(",
                  "errors": Array [],
                  "hide": false,
                  "type": "any",
                },
                Object {
                  "attrs": undefined,
                  "code": "NumberLiteral",
                  "display": "1.5",
                  "errors": Array [],
                  "hide": false,
                  "type": "number",
                },
                Object {
                  "attrs": undefined,
                  "code": "RParen",
                  "display": ")",
                  "errors": Array [],
                  "hide": false,
                  "type": "number",
                },
              ],
              "input": "=TRUNC(1.5)",
              "output": Object {
                "result": 1,
                "type": "number",
              },
            },
          ],
          "group": "core",
          "key": "TRUNC",
          "lazy": false,
          "name": "TRUNC",
          "persist": false,
          "pure": true,
          "reference": [Function],
          "returns": "number",
          "testCases": Array [],
        },
        "TYPE": Object {
          "acceptError": true,
          "args": Array [
            Object {
              "name": "obj",
              "type": "any",
            },
          ],
          "async": false,
          "chain": true,
          "description": "Returns type of current object",
          "effect": false,
          "examples": Array [
            Object {
              "codeFragments": Array [
                Object {
                  "attrs": undefined,
                  "code": "Equal",
                  "display": "=",
                  "errors": Array [],
                  "hide": false,
                  "type": "any",
                },
                Object {
                  "attrs": undefined,
                  "code": "Function",
                  "display": "TYPE",
                  "errors": Array [],
                  "hide": false,
                  "type": "any",
                },
                Object {
                  "attrs": undefined,
                  "code": "LParen",
                  "display": "(",
                  "errors": Array [],
                  "hide": false,
                  "type": "any",
                },
                Object {
                  "attrs": undefined,
                  "code": "NumberLiteral",
                  "display": "100",
                  "errors": Array [],
                  "hide": false,
                  "type": "number",
                },
                Object {
                  "attrs": undefined,
                  "code": "RParen",
                  "display": ")",
                  "errors": Array [],
                  "hide": false,
                  "type": "string",
                },
              ],
              "input": "=TYPE(100)",
              "output": Object {
                "result": "number",
                "type": "string",
              },
            },
            Object {
              "codeFragments": Array [
                Object {
                  "attrs": undefined,
                  "code": "Equal",
                  "display": "=",
                  "errors": Array [],
                  "hide": false,
                  "type": "any",
                },
                Object {
                  "attrs": undefined,
                  "code": "Function",
                  "display": "TYPE",
                  "errors": Array [],
                  "hide": false,
                  "type": "any",
                },
                Object {
                  "attrs": undefined,
                  "code": "LParen",
                  "display": "(",
                  "errors": Array [],
                  "hide": false,
                  "type": "any",
                },
                Object {
                  "attrs": undefined,
                  "code": "StringLiteral",
                  "display": "\\"foo\\"",
                  "errors": Array [],
                  "hide": false,
                  "type": "string",
                },
                Object {
                  "attrs": undefined,
                  "code": "RParen",
                  "display": ")",
                  "errors": Array [],
                  "hide": false,
                  "type": "string",
                },
              ],
              "input": "=TYPE(\\"foo\\")",
              "output": Object {
                "result": "string",
                "type": "string",
              },
            },
          ],
          "group": "core",
          "key": "TYPE",
          "lazy": false,
          "name": "TYPE",
          "persist": false,
          "pure": true,
          "reference": [Function],
          "returns": "string",
          "testCases": Array [],
        },
        "VLOOKUP": Object {
          "acceptError": false,
          "args": Array [
            Object {
              "name": "match",
              "type": "any",
            },
            Object {
              "name": "spreadsheet",
              "type": "Spreadsheet",
            },
            Object {
              "name": "column",
              "type": "Column",
            },
            Object {
              "default": Object {
                "result": true,
                "type": "boolean",
              },
              "name": "range",
              "type": "boolean",
            },
          ],
          "async": false,
          "chain": true,
          "description": "Returns the value of the column in the spreadsheet that matches the match value.",
          "effect": false,
          "examples": Array [
            Object {
              "codeFragments": Array [
                Object {
                  "attrs": undefined,
                  "code": "Equal",
                  "display": "=",
                  "errors": Array [],
                  "hide": false,
                  "type": "any",
                },
                Object {
                  "attrs": undefined,
                  "code": "NumberLiteral",
                  "display": "123",
                  "errors": Array [],
                  "hide": false,
                  "type": "number",
                },
              ],
              "input": "=123",
              "output": Object {
                "result": "foo",
                "type": "string",
              },
            },
          ],
          "group": "core",
          "key": "VLOOKUP",
          "lazy": false,
          "name": "VLOOKUP",
          "persist": false,
          "pure": false,
          "reference": [Function],
          "returns": "string",
          "testCases": Array [],
        },
        "XLOOKUP": Object {
          "acceptError": false,
          "args": Array [
            Object {
              "name": "lookupValue",
              "type": "any",
            },
            Object {
              "name": "lookupColumn",
              "type": "Column",
            },
            Object {
              "name": "returnColumn",
              "type": "Column",
            },
            Object {
              "default": Object {
                "result": "",
                "type": "string",
              },
              "name": "notFoundValue",
              "type": "string",
            },
            Object {
              "default": Object {
                "result": 0,
                "type": "number",
              },
              "name": "matchMode",
              "type": "number",
            },
          ],
          "async": false,
          "chain": true,
          "description": "Returns the value of the column in the spreadsheet that matches the match value.",
          "effect": false,
          "examples": Array [
            Object {
              "codeFragments": Array [
                Object {
                  "attrs": undefined,
                  "code": "Equal",
                  "display": "=",
                  "errors": Array [],
                  "hide": false,
                  "type": "any",
                },
                Object {
                  "attrs": undefined,
                  "code": "NumberLiteral",
                  "display": "123",
                  "errors": Array [],
                  "hide": false,
                  "type": "number",
                },
              ],
              "input": "=123",
              "output": Object {
                "result": "foo",
                "type": "string",
              },
            },
          ],
          "group": "core",
          "key": "XLOOKUP",
          "lazy": false,
          "name": "XLOOKUP",
          "persist": false,
          "pure": false,
          "reference": [Function],
          "returns": "string",
          "testCases": Array [],
        },
        "custom::ADD": Object {
          "acceptError": false,
          "args": Array [
            Object {
              "name": "left",
              "type": "number",
            },
            Object {
              "name": "right",
              "type": "number",
            },
          ],
          "async": false,
          "chain": true,
          "description": "Returns the sum of two numbers",
          "effect": false,
          "examples": Array [
            Object {
              "codeFragments": Array [
                Object {
                  "attrs": undefined,
                  "code": "Equal",
                  "display": "=",
                  "errors": Array [],
                  "hide": false,
                  "type": "any",
                },
                Object {
                  "attrs": undefined,
                  "code": "Function",
                  "display": "ADD",
                  "errors": Array [
                    Object {
                      "message": "Function ADD not found",
                      "type": "deps",
                    },
                  ],
                  "hide": false,
                  "type": "any",
                },
                Object {
                  "attrs": undefined,
                  "code": "LParen",
                  "display": "(",
                  "errors": Array [],
                  "hide": false,
                  "type": "any",
                },
                Object {
                  "attrs": undefined,
                  "code": "NumberLiteral",
                  "display": "1",
                  "errors": Array [],
                  "hide": false,
                  "type": "number",
                },
                Object {
                  "attrs": undefined,
                  "code": "Comma",
                  "display": ",",
                  "errors": Array [],
                  "hide": false,
                  "type": "any",
                },
                Object {
                  "attrs": undefined,
                  "code": "NumberLiteral",
                  "display": "2",
                  "errors": Array [],
                  "hide": false,
                  "type": "number",
                },
                Object {
                  "attrs": undefined,
                  "code": "RParen",
                  "display": ")",
                  "errors": Array [],
                  "hide": false,
                  "type": "any",
                },
              ],
              "input": "=ADD(1, 2)",
              "output": Object {
                "result": 3,
                "type": "number",
              },
            },
          ],
          "group": "custom",
          "key": "custom::ADD",
          "lazy": false,
          "name": "ADD",
          "persist": false,
          "pure": true,
          "reference": [Function],
          "returns": "number",
          "testCases": Array [],
        },
      },
      "functionWeights": Object {},
      "names": Object {
        "28e28190-63bd-4f70-aeca-26e72574c01a": Object {
          "id": "28e28190-63bd-4f70-aeca-26e72574c01a",
          "kind": "Spreadsheet",
          "name": "MySpreadsheet",
          "namespaceId": "57622108-1337-4edd-833a-2557835bcfe0",
          "renderTokens": [Function],
        },
        "57622108-1337-4edd-833a-2557835bcfe0": Object {
          "id": "57622108-1337-4edd-833a-2557835bcfe0",
          "kind": "Block",
          "name": "Page1",
          "namespaceId": "57622108-1337-4edd-833a-2557835bcfe0",
          "renderTokens": [Function],
        },
      },
      "reservedNames": Array [
        "CURRENT_POSITION",
        "REQUEST_GET",
        "SLEEP",
        "EXCHANGE",
        "LEN",
        "TRIM",
        "VLOOKUP",
        "XLOOKUP",
        "SUM",
        "COLUMN_COUNT",
        "ROW_COUNT",
        "SUMIFS",
        "AVERAGEIFS",
        "COUNTIFS",
        "SUMPRODUCT",
        "MAX",
        "COUNTA",
        "START_WITH",
        "SPLIT",
        "IF",
        "ABS",
        "INT",
        "LOG10",
        "PI",
        "POWER",
        "RAND",
        "RANDBETWEEN",
        "SQRT",
        "SQRTPI",
        "TRUNC",
        "LN",
        "ROUND",
        "AVERAGE",
        "SUM1",
        "NOW",
        "DATE",
        "T",
        "TYPE",
        "TOSTRING",
        "ERROR",
        "IFERROR",
        "COUNTIF",
        "SPREADSHEET",
        "BUTTON",
        "CINPUT",
        "SWITCH",
        "SELECT",
        "SET",
        "TONUMBER",
        "TOQRCODE",
        "TOBAR",
        "TORECORDARRAY",
        "TOARRAY",
        "TORECORD",
        "JOIN",
        "ADD",
      ],
      "reverseFunctionDependencies": Object {},
      "reverseVariableDependencies": Object {},
      "spreadsheets": Object {
        "28e28190-63bd-4f70-aeca-26e72574c01a": [Circular],
      },
      "tickKey": "FormulaContext#test",
      "tickTimeout": 1000,
      "variableNameCounter": Object {
        "Array": Object {},
        "Blank": Object {},
        "Block": Object {},
        "Button": Object {},
        "Cell": Object {},
        "Column": Object {},
        "Cst": Object {},
        "Date": Object {},
        "Error": Object {},
        "Function": Object {},
        "Input": Object {},
        "NoPersist": Object {},
        "Pending": Object {},
        "Predicate": Object {},
        "Radio": Object {},
        "Range": Object {},
        "Rate": Object {},
        "Record": Object {},
        "Reference": Object {},
        "Row": Object {},
        "Select": Object {},
        "Slider": Object {},
        "Spreadsheet": Object {},
        "Switch": Object {},
        "Waiting": Object {},
        "any": Object {},
        "boolean": Object {},
        "null": Object {},
        "number": Object {},
        "string": Object {},
        "void": Object {},
      },
      "variableWeights": Object {},
      "variables": Object {},
      "viewRenders": Object {
        "bar": [Function],
        "qrcode": [Function],
      },
    },
    "_name": "MySpreadsheet",
    "_rows": Array [
      Object {
        "rowId": "ec4fdfe8-4a12-4a76-aeae-2dea0229e734",
        "rowIndex": 0,
        "spreadsheetId": "28e28190-63bd-4f70-aeca-26e72574c01a",
      },
      Object {
        "rowId": "5d1e4a83-383a-4991-a33c-52a9b3169549",
        "rowIndex": 1,
        "spreadsheetId": "28e28190-63bd-4f70-aeca-26e72574c01a",
      },
      Object {
        "rowId": "05f5ae67-b982-406e-a92f-e559c10a7ba6",
        "rowIndex": 2,
        "spreadsheetId": "28e28190-63bd-4f70-aeca-26e72574c01a",
      },
    ],
    "dynamic": false,
    "eventListeners": Array [
      Object {
        "unsubscribe": [Function],
      },
      Object {
        "unsubscribe": [Function],
      },
      Object {
        "unsubscribe": [Function],
      },
    ],
    "getCell": [Function],
    "name": [Function],
    "namespaceId": "57622108-1337-4edd-833a-2557835bcfe0",
    "spreadsheetId": "28e28190-63bd-4f70-aeca-26e72574c01a",
  },
  "replacements": Array [
    "#57622108-1337-4edd-833a-2557835bcfe0.MySpreadshee",
    "#57622108-1337-4edd-833a-2557835bcfe0.MySpreadshe",
    "#57622108-1337-4edd-833a-2557835bcfe0.MySpreadsh",
    "#57622108-1337-4edd-833a-2557835bcfe0.MySpreads",
    "#57622108-1337-4edd-833a-2557835bcfe0.MySpread",
    "#57622108-1337-4edd-833a-2557835bcfe0.MySprea",
    "#57622108-1337-4edd-833a-2557835bcfe0.MySpre",
    "#57622108-1337-4edd-833a-2557835bcfe0.MySpr",
    "#57622108-1337-4edd-833a-2557835bcfe0.MySp",
    "#57622108-1337-4edd-833a-2557835bcfe0.MyS",
    "#57622108-1337-4edd-833a-2557835bcfe0.My",
    "#57622108-1337-4edd-833a-2557835bcfe0.M",
    "#57622108-1337-4edd-833a-2557835bcfe0.",
    "#57622108-1337-4edd-833a-2557835bcfe0",
    "MySpreadshee",
    "MySpreadshe",
    "MySpreadsh",
    "MySpreads",
    "MySpread",
    "MySprea",
    "MySpre",
    "MySpr",
    "MySp",
    "MyS",
    "My",
    "M",
  ],
  "value": "#57622108-1337-4edd-833a-2557835bcfe0.MySpreadsheet",
  "weight": 10,
}
`;
