name: Deploy PR Preview Env
concurrency:
  group: monolith-preview-env-${{ github.ref }}
  cancel-in-progress: true
on:
  pull_request:
    types: [opened, synchronize]
    paths-ignore:
      - '.husky/**'
      - 'bin/**'
      - 'packages/less-vars-loader/**'
      - 'packages/eslint-plugin-brickdoc/**'
      - 'gems/rubocop-brickdoc/**'
      - '**/*.md'
      - 'packages/**/Dockerfile'
      - '**/.git*'
      - '**/crowdin.yml'
      - '**/LICENSE'
      - '**/NOTICE'
      - '**/VERSION'
permissions:
  id-token: write
  pull-requests: write
  contents: read
  deployments: write
  packages: write
  statuses: write
  actions: write
env:
  YARN_CHECKSUM_BEHAVIOR: update
  image: ghcr.io/brickdoc/brickdoc:pr.${{github.event.pull_request.number}}
  domain: pr-${{ github.event.pull_request.number }}.brickdoc.dev
  GCP_PROJECT: brickdoc-testnet
  SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
  SENTRY_ORG: brickdoc-inc
  SENTRY_PROJECT: brickdoc-dev
jobs:
  build:
    name: 'Build and Push Docker Image'
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout the codebase
        uses: actions/checkout@v3
      - name: Get the version
        id: get_version
        run: echo ::set-output name=VERSION::pr-${{github.event.pull_request.number}}
      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 3.0.2
          bundler-cache: true # runs 'bundle install' and caches installed gems automatically
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: brickdocCE-pr-${{ secrets.CACHE_VERSION }}-${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            brickdocCE-pr-${{ secrets.CACHE_VERSION }}-${{ runner.os }}-buildx-
      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          build-args: |
            RAILS_ENV=cicd
            VERSION=${{ steps.get_version.outputs.VERSION }}
            SENTRY_AUTH_TOKEN=${{ secrets.SENTRY_AUTH_TOKEN }}
            SENTRY_ORG=${{ env.SENTRY_ORG }}
            SENTRY_PROJECT=${{ env.SENTRY_PROJECT }}
          tags: ${{ env.image }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new
        # Temp fix
        # https://github.com/docker/build-push-action/issues/252
        # https://github.com/moby/buildkit/issues/1896
      - name: Move cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache
  deploy:
    name: 'Deployment to GKE'
    environment:
      name: pr_preview
      url: https://${{ env.domain }}/
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout the codebase
        uses: actions/checkout@v3
      - name: GCP Login
        uses: google-github-actions/auth@v0
        with:
          workload_identity_provider: 'projects/992882677538/locations/global/workloadIdentityPools/cicd/providers/github-action'
          service_account: 'cicd-bot@${{ env.GCP_PROJECT }}.iam.gserviceaccount.com'
      - name: 'Set up Cloud SDK'
        uses: 'google-github-actions/setup-gcloud@v0'
      - run: |-
          gcloud --quiet auth configure-docker
      - name: 'Get the GKE cluster Configuration'
        uses: 'google-github-actions/get-gke-credentials@v0'
        with:
          cluster_name: 'kube-us-dev'
          location: 'us-central1'
      - name: Uninstall History Release
        run: |-
          helm uninstall brickdoc-pr${{ github.event.pull_request.number }} --namespace=cicd || true
      - name: Deployment to GKE
        run: |-
          helm upgrade brickdoc-pr${{ github.event.pull_request.number }} ${{ github.workspace }}/tools/helm-charts/brickdoc \
           --install --atomic --timeout 15m --cleanup-on-fail --wait --namespace=cicd --set previewEnv=true \
            --set-string image.name=${{ env.image }} \
            --set-string ingress.host=${{ env.domain }} \
            --set serviceAccount.create=false \
            --set-string serviceAccount.name=trunk-or-pr-main \
            --set-string envs.SENTRY_DSN=https://4aa5075a3b484af6a251f3677a9f665e@o1150336.ingest.sentry.io/6257651 \
            --set-string envs.HOST=${{ env.domain }} \
            --set-string secrets.SECRET_KEY_SEED=${{ secrets.PR_SECRET_KEY_SEED }} \
            --set-string secrets.UNSPLASH_API_ACCESS_KEY=${{ secrets.UNSPLASH_API_ACCESS_KEY }} \
            --set-string secrets.UNSPLASH_API_SECRET=${{ secrets.UNSPLASH_API_SECRET }} \
            --set-string secrets.IFRAMELY_API_ACCESS_KEY=${{ secrets.IFRAMELY_API_ACCESS_KEY }} \
      - name: Find Comment
        uses: peter-evans/find-comment@v1
        id: fc
        with:
          issue-number: ${{ github.event.pull_request.number }}
          comment-author: 'github-actions[bot]'
          body-includes: This pull request is automatically built and testable in
      - name: Create or update comment
        uses: peter-evans/create-or-update-comment@v1
        with:
          comment-id: ${{ steps.fc.outputs.comment-id }}
          issue-number: ${{ github.event.pull_request.number }}
          body: |
            This pull request is automatically built and testable in [${{ env.domain }}](https://${{ env.domain }}).
            ## Devtools
            * [Mailer Mock](https://${{ env.domain }}/devtools/mailer)
            * [Pod Logs](https://console.cloud.google.com/logs/query?project=brickdoc-testnet)
          edit-mode: replace
