name: Deploy SaaS Prod on BAE
concurrency:
  group: sass-prod-deploy
on:
  push:
    tags:
      - 'v**-saas'
permissions:
  id-token: write
  pull-requests: write
  contents: read
  deployments: write
  packages: write
  statuses: write
env:
  image: ghcr.io/brickdoc/brickdoc-saas
  domain: brickdoc.com
  GCP_PROJECT: golden-union-341912
jobs:
  build:
    name: 'Build and Push Docker Image'
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout the codebase
        uses: actions/checkout@v3
      - name: Get the version
        id: get_version
        run: echo ::set-output name=VERSION::${GITHUB_REF/refs\/tags\//}
      - name: Setup NodeJS
        uses: actions/setup-node@v3
        with:
          node-version: 16
          cache: yarn
      - run: yarn install --immutable
        env:
          CYPRESS_INSTALL_BINARY: '0'
      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 3.0.2
          bundler-cache: true # runs 'bundle install' and caches installed gems automatically
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: brickdocCE-saas-${{ secrets.CACHE_VERSION }}-${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            brickdocCE-saas-${{ secrets.CACHE_VERSION }}-${{ runner.os }}-buildx-
      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          build-args: |
            "RAILS_ENV=production"
          tags: ${{ env.image }}:${{ steps.get_version.outputs.VERSION }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new
        # Temp fix
        # https://github.com/docker/build-push-action/issues/252
        # https://github.com/moby/buildkit/issues/1896
      - name: Move cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache
  deploy:
    name: 'Deployment to GKE'
    environment:
      name: production
      url: https://${{ env.domain }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout the codebase
        uses: actions/checkout@v3
      - name: Get the version
        id: get_version
        run: echo ::set-output name=VERSION::${GITHUB_REF/refs\/tags\//}
      - name: GCP Login
        uses: google-github-actions/auth@v0
        with:
          workload_identity_provider: 'projects/909250635156/locations/global/workloadIdentityPools/cicd/providers/github-action'
          service_account: 'cicd-bot@${{ env.GCP_PROJECT }}.iam.gserviceaccount.com'
      - name: 'Set up Cloud SDK'
        uses: 'google-github-actions/setup-gcloud@v0'
      - run: |-
          gcloud --quiet auth configure-docker
      - name: 'Get the GKE cluster Configuration'
        uses: 'google-github-actions/get-gke-credentials@v0'
        with:
          cluster_name: 'kube-us-central'
          location: 'us-central1'
      - name: 'Deploy to GKE'
        run: |-
          helm upgrade brickdoc-prod ${{ github.workspace }}/tools/helm-charts/brickdoc \
           --install --atomic --timeout 15m --cleanup-on-fail --wait --namespace=saas \
            --set-string image.name=${{ env.image }}:${{ steps.get_version.outputs.VERSION }} \
            --set-string ingress.host=${{ env.domain }} \
            --set serviceAccount.create=false \
            --set-string serviceAccount.name=saas-main-app \
            --set-string envs.SMTP_FROM=saas-no-reply@push-service.brickdoc.com \
            --set-string envs.SENTRY_DSN=https://f44be883f4d7479bb089213767508c1a@o1150336.ingest.sentry.io/6223078 \
            --set-string envs.HOST=${{ env.domain }} \
            --set-string envs.ASSET_HOST=https://s3.brickapis.com/globalcdn/brickdoc-saas-prod \
            --set-string envs.BRICKDOC_BUILD=${{ github.sha }}.saas-prod \
            --set-string envs.GOOGLE_CLOUD_PROJECT=${{ env.GCP_PROJECT }} \
            --set-string envs.GCP_KMS_FRN=projects/${{ env.GCP_PROJECT }}/locations/global/keyRings/global-saas/cryptoKeys/sass-master-key \
            --set-string envs.GCS_PRIVATE_BUCKET=pvt.us-edge.brickdocusercontent.com \
            --set-string envs.GCS_PUBLIC_BUCKET=pub.us-edge.brickdocusercontent.com \
            --set-string secrets.SECRET_KEY_SEED=${{ secrets.SAAS_PROD_SECRET_KEY_SEED }} \
            --set-string secrets.BRICKDOC_DATABASE_URL=${{ secrets.SAAS_PROD_POSTGRE_URL }} \
            --set-string secrets.REDIS_URL=${{ secrets.SAAS_PROD_REDIS_URL }} \
            --set-string secrets.UNSPLASH_API_ACCESS_KEY=${{ secrets.UNSPLASH_API_ACCESS_KEY }} \
            --set-string secrets.UNSPLASH_API_SECRET=${{ secrets.UNSPLASH_API_SECRET }} \
            --set-string secrets.IFRAMELY_API_ACCESS_KEY=${{ secrets.SAAS_PROD_IFRAMELY_API_ACCESS_KEY }} \
            --set-string secrets.SECURITY_REVERSIBLE_INT_INVERSE=${{ secrets.SAAS_PROD_SECURITY_REVERSIBLE_INT_INVERSE }} \
            --set-string secrets.SECURITY_REVERSIBLE_INT_RANDOM=${{ secrets.SAAS_PROD_SECURITY_REVERSIBLE_INT_RANDOM }} \
            --set-string secrets.SECURITY_REVERSIBLE_INT_PRIME=${{ secrets.SAAS_PROD_SECURITY_REVERSIBLE_INT_PRIME }} \
            --set-string secrets.SMTP_URL=${{ secrets.SAAS_PROD_SMTP_URL }} \
            --set-string secrets.GOOGLE_OAUTH2_ID=${{ secrets.SAAS_PROD_GOOGLE_OAUTH2_ID }} \
            --set-string secrets.GOOGLE_OAUTH2_SECRET=${{ secrets.SAAS_PROD_GOOGLE_OAUTH2_SECRET }}
