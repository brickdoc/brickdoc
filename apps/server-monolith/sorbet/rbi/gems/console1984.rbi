# This file is autogenerated. Do not edit it by hand. Regenerate it with:
#   srb rbi gems

# typed: ignore
#
# If you would like to make changes to this file, great! Please create the gem's shim here:
#
#   https://github.com/sorbet/sorbet-typed/new/master?filename=lib/console1984/all/console1984.rbi
#
# console1984-0.1.24

module Console1984
  def class_loader; end
  def class_loader=(val); end
  def config; end
  def self.ask_for_username_if_empty(*, **, &); end
  def self.class_loader; end
  def self.class_loader=(val); end
  def self.command_executor(*, **, &); end
  def self.config; end
  def self.debug(*, **, &); end
  def self.enter_protected_mode_warning(*, **, &); end
  def self.enter_unprotected_encryption_mode_warning(*, **, &); end
  def self.incinerate(*, **, &); end
  def self.incinerate_after(*, **, &); end
  def self.incineration_queue(*, **, &); end
  def self.production_data_warning(*, **, &); end
  def self.protected_environments(*, **, &); end
  def self.protected_urls(*, **, &); end
  def self.protections_config(*, **, &); end
  def self.railtie_helpers_paths; end
  def self.railtie_namespace; end
  def self.railtie_routes_url_helpers(include_path_helpers = nil); end
  def self.running_protected_environment?; end
  def self.session_logger(*, **, &); end
  def self.shield(*, **, &); end
  def self.supervisor; end
  def self.supervisor=(val); end
  def self.table_name_prefix; end
  def self.test_mode(*, **, &); end
  def self.use_relative_model_naming?; end
  def self.username_resolver(*, **, &); end
  def supervisor; end
  def supervisor=(val); end
  include Console1984::Messages
end
class Console1984::Engine < Rails::Engine
end
module Console1984::Messages
end
module Console1984::Freezeable
  def self.class_and_modules_to_freeze; end
  def self.freeze_all; end
  def self.freeze_class_or_module(class_or_module); end
  def self.included(base); end
  def self.to_freeze; end
  def self.with_descendants(classes_and_modules); end
  def to_freeze; end
end
module Console1984::Freezeable::ClassMethods
  def prevent_instance_data_manipulation; end
  def prevent_sensitive_method(method_name); end
end
module Console1984::InputOutput
  def ask_for_session_reason; end
  def ask_for_value(message); end
  def prevent_instance_data_manipulation_after_freezing; end
  def prevent_instance_data_manipulation_after_freezing=(obj); end
  def self.prevent_instance_data_manipulation_after_freezing; end
  def self.prevent_instance_data_manipulation_after_freezing=(obj); end
  def show_commands; end
  def show_production_data_warning; end
  def show_warning(message); end
  def show_welcome_message; end
  extend Console1984::Freezeable::ClassMethods
  include Console1984::Freezeable
end
class Console1984::Supervisor
  def current_username; end
  def exit_irb; end
  def handle_empty_username; end
  def install; end
  def prevent_instance_data_manipulation_after_freezing; end
  def prevent_instance_data_manipulation_after_freezing=(obj); end
  def require_dependencies; end
  def self.prevent_instance_data_manipulation_after_freezing; end
  def self.prevent_instance_data_manipulation_after_freezing=(obj); end
  def session_logger(*, **, &); end
  def shield(*, **, &); end
  def start; end
  def start_session; end
  def stop; end
  def stop_session; end
  def username_resolver(*, **, &); end
  extend Console1984::Freezeable::ClassMethods
  include Console1984::Freezeable
end
class Console1984::Config
  def ask_for_username_if_empty; end
  def ask_for_username_if_empty=(arg0); end
  def command_executor; end
  def command_executor=(arg0); end
  def debug; end
  def debug=(arg0); end
  def enter_protected_mode_warning; end
  def enter_protected_mode_warning=(arg0); end
  def enter_unprotected_encryption_mode_warning; end
  def enter_unprotected_encryption_mode_warning=(arg0); end
  def freeze; end
  def incinerate; end
  def incinerate=(arg0); end
  def incinerate_after; end
  def incinerate_after=(arg0); end
  def incineration_queue; end
  def incineration_queue=(arg0); end
  def initialize; end
  def prevent_instance_data_manipulation_after_freezing; end
  def prevent_instance_data_manipulation_after_freezing=(obj); end
  def production_data_warning; end
  def production_data_warning=(arg0); end
  def protected_environments; end
  def protected_environments=(arg0); end
  def protected_urls; end
  def protected_urls=(arg0); end
  def protections_config; end
  def protections_config=(arg0); end
  def self.prevent_instance_data_manipulation_after_freezing; end
  def self.prevent_instance_data_manipulation_after_freezing=(obj); end
  def session_logger; end
  def session_logger=(arg0); end
  def set_defaults; end
  def set_from(properties); end
  def shield; end
  def shield=(arg0); end
  def test_mode; end
  def test_mode=(arg0); end
  def username_resolver; end
  def username_resolver=(arg0); end
  extend Console1984::Freezeable::ClassMethods
  include Console1984::Freezeable
end
class Console1984::SessionsLogger::Database
  def after_executing(statements); end
  def before_executing(statements); end
  def current_sensitive_access; end
  def current_session; end
  def end_sensitive_access; end
  def finish_session; end
  def prevent_instance_data_manipulation_after_freezing; end
  def prevent_instance_data_manipulation_after_freezing=(obj); end
  def record_statements(statements); end
  def self.prevent_instance_data_manipulation_after_freezing; end
  def self.prevent_instance_data_manipulation_after_freezing=(obj); end
  def silence_logging(&block); end
  def start_sensitive_access(justification); end
  def start_session(username, reason); end
  def suspicious_commands_attempted(statements); end
  extend Console1984::Freezeable::ClassMethods
  include Console1984::Freezeable
end
class Console1984::Username::EnvResolver
  def current; end
  def initialize(key); end
  def prevent_instance_data_manipulation_after_freezing; end
  def prevent_instance_data_manipulation_after_freezing=(obj); end
  def self.prevent_instance_data_manipulation_after_freezing; end
  def self.prevent_instance_data_manipulation_after_freezing=(obj); end
  def username; end
  extend Console1984::Freezeable::ClassMethods
  include Console1984::Freezeable
end
class Console1984::Shield::Modes::Protected
  def currently_protected_urls; end
  def currently_protected_urls=(obj); end
  def execute(&block); end
  def prevent_instance_data_manipulation_after_freezing; end
  def prevent_instance_data_manipulation_after_freezing=(obj); end
  def protected_urls(*, **, &); end
  def protecting(&block); end
  def protecting_connections; end
  def self.currently_protected_urls; end
  def self.currently_protected_urls=(obj); end
  def self.prevent_instance_data_manipulation_after_freezing; end
  def self.prevent_instance_data_manipulation_after_freezing=(obj); end
  extend Console1984::Freezeable::ClassMethods
  include Console1984::Freezeable
end
class Console1984::Shield::Modes::Unprotected
  def execute(&block); end
  def prevent_instance_data_manipulation_after_freezing; end
  def prevent_instance_data_manipulation_after_freezing=(obj); end
  def self.prevent_instance_data_manipulation_after_freezing; end
  def self.prevent_instance_data_manipulation_after_freezing=(obj); end
  extend Console1984::Freezeable::ClassMethods
  include Console1984::Freezeable
end
module Console1984::Shield::Modes
  def current_username; end
  def enable_protected_mode(silent: nil); end
  def enable_unprotected_mode(silent: nil); end
  def prevent_instance_data_manipulation_after_freezing; end
  def prevent_instance_data_manipulation_after_freezing=(obj); end
  def protected_mode?; end
  def self.prevent_instance_data_manipulation_after_freezing; end
  def self.prevent_instance_data_manipulation_after_freezing=(obj); end
  def unprotected_mode?; end
  def with_protected_mode(&block); end
  extend Console1984::Freezeable::ClassMethods
  include Console1984::Freezeable
  include Console1984::Messages
end
class Console1984::Shield
  def command_executor(*, **, &); end
  def extend_active_record; end
  def extend_core_ruby; end
  def extend_irb; end
  def extend_protected_systems; end
  def extend_sockets; end
  def install; end
  def prevent_instance_data_manipulation_after_freezing; end
  def prevent_instance_data_manipulation_after_freezing=(obj); end
  def prevent_invoking_protected_methods; end
  def refrigerator; end
  def self.prevent_instance_data_manipulation_after_freezing; end
  def self.prevent_instance_data_manipulation_after_freezing=(obj); end
  def session_logger(*, **, &); end
  def username_resolver(*, **, &); end
  extend Console1984::Freezeable::ClassMethods
  include Console1984::Freezeable
  include Console1984::Shield::Modes
end
module Console1984::Shield::SSLSocketRemoteAddress
  def remote_address; end
end
class Console1984::CommandExecutor
  def build_command_validator; end
  def command_validator; end
  def execute(commands, &block); end
  def execute_in_protected_mode(&block); end
  def executing_user_command?; end
  def flag_suspicious(commands, error: nil); end
  def from_irb?(backtrace); end
  def last_suspicious_command_error; end
  def prevent_instance_data_manipulation_after_freezing; end
  def prevent_instance_data_manipulation_after_freezing=(obj); end
  def run_as_system(&block); end
  def run_as_user(&block); end
  def run_command(run_by_user, &block); end
  def self.prevent_instance_data_manipulation_after_freezing; end
  def self.prevent_instance_data_manipulation_after_freezing=(obj); end
  def session_logger(*, **, &); end
  def shield(*, **, &); end
  def username_resolver(*, **, &); end
  def validate_command(command); end
  extend Console1984::Freezeable::ClassMethods
  include Console1984::Freezeable
end
module Console1984::SessionsLogger
end
module Console1984::Username
end
class Console1984::IncinerationJob < ActiveJob::Base
end
module Console1984::Base::GeneratedAttributeMethods
end
class Console1984::Base < ApplicationRecord
  include Console1984::Base::GeneratedAssociationMethods
  include Console1984::Base::GeneratedAttributeMethods
end
module Console1984::Base::GeneratedAssociationMethods
end
class Console1984::Base::ActiveRecord_Relation < ActiveRecord::Relation
  extend ActiveRecord::Delegation::ClassSpecificRelation::ClassMethods
  include ActiveRecord::Delegation::ClassSpecificRelation
  include Console1984::Base::GeneratedRelationMethods
end
module Console1984::Base::GeneratedRelationMethods
end
class Console1984::Base::ActiveRecord_Associations_CollectionProxy < ActiveRecord::Associations::CollectionProxy
  extend ActiveRecord::Delegation::ClassSpecificRelation::ClassMethods
  include ActiveRecord::Delegation::ClassSpecificRelation
  include Console1984::Base::GeneratedRelationMethods
end
class Console1984::Base::ActiveRecord_AssociationRelation < ActiveRecord::AssociationRelation
  extend ActiveRecord::Delegation::ClassSpecificRelation::ClassMethods
  include ActiveRecord::Delegation::ClassSpecificRelation
  include Console1984::Base::GeneratedRelationMethods
end
class Console1984::Base::ActiveRecord_DisableJoinsAssociationRelation < ActiveRecord::DisableJoinsAssociationRelation
  extend ActiveRecord::Delegation::ClassSpecificRelation::ClassMethods
  include ActiveRecord::Delegation::ClassSpecificRelation
  include Console1984::Base::GeneratedRelationMethods
end
module Console1984::SensitiveAccess::GeneratedAttributeMethods
end
class Console1984::SensitiveAccess < Console1984::Base
  include Console1984::SensitiveAccess::GeneratedAssociationMethods
  include Console1984::SensitiveAccess::GeneratedAttributeMethods
end
module Console1984::SensitiveAccess::GeneratedAssociationMethods
end
class Console1984::SensitiveAccess::ActiveRecord_Relation < ActiveRecord::Relation
  extend ActiveRecord::Delegation::ClassSpecificRelation::ClassMethods
  include ActiveRecord::Delegation::ClassSpecificRelation
  include Console1984::SensitiveAccess::GeneratedRelationMethods
end
module Console1984::SensitiveAccess::GeneratedRelationMethods
end
class Console1984::SensitiveAccess::ActiveRecord_Associations_CollectionProxy < ActiveRecord::Associations::CollectionProxy
  extend ActiveRecord::Delegation::ClassSpecificRelation::ClassMethods
  include ActiveRecord::Delegation::ClassSpecificRelation
  include Console1984::SensitiveAccess::GeneratedRelationMethods
end
class Console1984::SensitiveAccess::ActiveRecord_AssociationRelation < ActiveRecord::AssociationRelation
  extend ActiveRecord::Delegation::ClassSpecificRelation::ClassMethods
  include ActiveRecord::Delegation::ClassSpecificRelation
  include Console1984::SensitiveAccess::GeneratedRelationMethods
end
class Console1984::SensitiveAccess::ActiveRecord_DisableJoinsAssociationRelation < ActiveRecord::DisableJoinsAssociationRelation
  extend ActiveRecord::Delegation::ClassSpecificRelation::ClassMethods
  include ActiveRecord::Delegation::ClassSpecificRelation
  include Console1984::SensitiveAccess::GeneratedRelationMethods
end
module Console1984::Session::Incineratable
  extend ActiveSupport::Concern
end
module Console1984::Session::GeneratedAttributeMethods
end
class Console1984::Session < Console1984::Base
  include Console1984::Session::GeneratedAssociationMethods
  include Console1984::Session::GeneratedAttributeMethods
  include Console1984::Session::Incineratable
end
module Console1984::Session::GeneratedAssociationMethods
end
class Console1984::Session::ActiveRecord_Relation < ActiveRecord::Relation
  extend ActiveRecord::Delegation::ClassSpecificRelation::ClassMethods
  include ActiveRecord::Delegation::ClassSpecificRelation
  include Console1984::Session::GeneratedRelationMethods
end
module Console1984::Session::GeneratedRelationMethods
end
class Console1984::Session::ActiveRecord_Associations_CollectionProxy < ActiveRecord::Associations::CollectionProxy
  extend ActiveRecord::Delegation::ClassSpecificRelation::ClassMethods
  include ActiveRecord::Delegation::ClassSpecificRelation
  include Console1984::Session::GeneratedRelationMethods
end
class Console1984::Session::ActiveRecord_AssociationRelation < ActiveRecord::AssociationRelation
  extend ActiveRecord::Delegation::ClassSpecificRelation::ClassMethods
  include ActiveRecord::Delegation::ClassSpecificRelation
  include Console1984::Session::GeneratedRelationMethods
end
class Console1984::Session::ActiveRecord_DisableJoinsAssociationRelation < ActiveRecord::DisableJoinsAssociationRelation
  extend ActiveRecord::Delegation::ClassSpecificRelation::ClassMethods
  include ActiveRecord::Delegation::ClassSpecificRelation
  include Console1984::Session::GeneratedRelationMethods
end
module Console1984::Command::GeneratedAttributeMethods
end
class Console1984::Command < Console1984::Base
  include Console1984::Command::GeneratedAssociationMethods
  include Console1984::Command::GeneratedAttributeMethods
end
module Console1984::Command::GeneratedAssociationMethods
end
class Console1984::Command::ActiveRecord_Relation < ActiveRecord::Relation
  extend ActiveRecord::Delegation::ClassSpecificRelation::ClassMethods
  include ActiveRecord::Delegation::ClassSpecificRelation
  include Console1984::Command::GeneratedRelationMethods
end
module Console1984::Command::GeneratedRelationMethods
end
class Console1984::Command::ActiveRecord_Associations_CollectionProxy < ActiveRecord::Associations::CollectionProxy
  extend ActiveRecord::Delegation::ClassSpecificRelation::ClassMethods
  include ActiveRecord::Delegation::ClassSpecificRelation
  include Console1984::Command::GeneratedRelationMethods
end
class Console1984::Command::ActiveRecord_AssociationRelation < ActiveRecord::AssociationRelation
  extend ActiveRecord::Delegation::ClassSpecificRelation::ClassMethods
  include ActiveRecord::Delegation::ClassSpecificRelation
  include Console1984::Command::GeneratedRelationMethods
end
class Console1984::Command::ActiveRecord_DisableJoinsAssociationRelation < ActiveRecord::DisableJoinsAssociationRelation
  extend ActiveRecord::Delegation::ClassSpecificRelation::ClassMethods
  include ActiveRecord::Delegation::ClassSpecificRelation
  include Console1984::Command::GeneratedRelationMethods
end
module Console1984::User::GeneratedAttributeMethods
end
class Console1984::User < Console1984::Base
  include Console1984::User::GeneratedAssociationMethods
  include Console1984::User::GeneratedAttributeMethods
end
module Console1984::User::GeneratedAssociationMethods
end
class Console1984::User::ActiveRecord_Relation < ActiveRecord::Relation
  extend ActiveRecord::Delegation::ClassSpecificRelation::ClassMethods
  include ActiveRecord::Delegation::ClassSpecificRelation
  include Console1984::User::GeneratedRelationMethods
end
module Console1984::User::GeneratedRelationMethods
end
class Console1984::User::ActiveRecord_Associations_CollectionProxy < ActiveRecord::Associations::CollectionProxy
  extend ActiveRecord::Delegation::ClassSpecificRelation::ClassMethods
  include ActiveRecord::Delegation::ClassSpecificRelation
  include Console1984::User::GeneratedRelationMethods
end
class Console1984::User::ActiveRecord_AssociationRelation < ActiveRecord::AssociationRelation
  extend ActiveRecord::Delegation::ClassSpecificRelation::ClassMethods
  include ActiveRecord::Delegation::ClassSpecificRelation
  include Console1984::User::GeneratedRelationMethods
end
class Console1984::User::ActiveRecord_DisableJoinsAssociationRelation < ActiveRecord::DisableJoinsAssociationRelation
  extend ActiveRecord::Delegation::ClassSpecificRelation::ClassMethods
  include ActiveRecord::Delegation::ClassSpecificRelation
  include Console1984::User::GeneratedRelationMethods
end
