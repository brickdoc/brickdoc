#!/usr/bin/env ruby
require 'active_support/all'

VERBOSE = ARGV.first == '-v'
ICONS = Dir.glob("#{__dir__}/../assets/*/*.svg")

# Duplicate icon finder
names = ICONS.map{ |p| File.basename p }
names.select{ |x| names.count(x) > 1}.uniq.each do |name|
  files = ICONS.select{ |p| p.end_with? name }.join(' AND ')
  puts "Duplicate Basename: #{files}"
  exit 1
end

# React Component Generator
FileUtils.rm_f Dir.glob("#{__dir__}/../src/icons/*")
ICONS.each do |icon|
  name = File.basename(icon, '.svg')
  component_name = name.underscore.camelize
  path = File.join(__dir__,'..','src','icons',"#{component_name}.tsx")
  svg = File.read(icon)
  File.open(path, 'w') do |f|
    f.write <<-EOF
// Auto Generated by @brickdoc/design-icons, don't change it manually.
/* eslint-disable max-len, import/no-default-export */
import React from 'react'
import { ISvgIconProps, IconWrapper } from '../icon'
export default IconWrapper(
    '#{name}',
    true,
    (props: ISvgIconProps) => (#{svg})
);
EOF
  end
  puts "Generated: #{path}" if VERBOSE
end

# Entry File generator
entry = File.join(__dir__,'..','src','index.ts')
components = Dir.glob("#{__dir__}/../src/icons/*.tsx").map{ |p| File.basename(p, '.tsx') }
                .map { |c| "export { default as #{c} } from './icons/#{c}'" } 

File.open(entry, 'w') do |f|
   f.write <<-EOF
// Auto Generated by @brickdoc/design-icons, don't change it manually.
export { IconProvider, DEFAULT_ICON_CONFIGS } from './icon'
export type { IIconConfig } from './icon'
#{components.join("\n")}    
   EOF
end
system 'yarn eslint:fix'
puts "succesfully generated."