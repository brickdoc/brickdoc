# This file is autogenerated. Do not edit it by hand. Regenerate it with:
#   srb rbi gems

# typed: strict
#
# If you would like to make changes to this file, great! Please create the gem's shim here:
#
#   https://github.com/sorbet/sorbet-typed/new/master?filename=lib/vite_ruby/all/vite_ruby.rbi
#
# vite_ruby-3.1.4

class ViteRuby
  def builder; end
  def commands; end
  def config; end
  def dev_server_running?; end
  def digest; end
  def env; end
  def initialize(**config_options); end
  def logger; end
  def logger=(arg0); end
  def manifest; end
  def run(argv, **options); end
  def run_proxy?; end
  def self.bootstrap; end
  def self.commands(*args, **, &block); end
  def self.config(*args, **, &block); end
  def self.digest(*args, **, &block); end
  def self.env(*args, **, &block); end
  def self.framework_libraries; end
  def self.install_tasks; end
  def self.instance; end
  def self.mode(*args, **, &block); end
  def self.reload_with(**config_options); end
  def self.run(*args, **, &block); end
  def self.run_proxy?(*args, **, &block); end
end
class ViteRuby::Config
  def additional_entrypoints; end
  def asset_host; end
  def assets_dir; end
  def assets_manifest_path; end
  def auto_build; end
  def base; end
  def build_cache_dir; end
  def build_output_dir; end
  def coerce_booleans(config, *names); end
  def coerce_values(config); end
  def config_path; end
  def dev_server_connect_timeout; end
  def entrypoints_dir; end
  def hide_build_console_output; end
  def host; end
  def host_with_port; end
  def https; end
  def initialize(attrs); end
  def load_ruby_config; end
  def manifest_path; end
  def mode; end
  def port; end
  def protocol; end
  def public_dir; end
  def public_output_dir; end
  def resolved_entrypoints_dir; end
  def root; end
  def self.config_defaults; end
  def self.config_from_env; end
  def self.config_from_file(path, mode:); end
  def self.load_json(path); end
  def self.new(*arg0, **); end
  def self.option_from_env(name); end
  def self.resolve_config(**attrs); end
  def skip_compatibility_check; end
  def source_code_dir; end
  def ssr_build_enabled; end
  def ssr_entrypoint; end
  def ssr_output_dir; end
  def to_env; end
  def vite_bin_path; end
  def vite_cache_dir; end
  def vite_root_dir; end
  def watch_additional_paths; end
  def watched_paths; end
end
module ViteRuby::CompatibilityCheck
end
class ViteRuby::DevServerProxy < Rack::Proxy
  extend Forwardable
end
