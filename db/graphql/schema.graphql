schema {
  query: RootQuery
  mutation: RootMutation
}

"""
Available authentication authentication.
"""
enum AuthMethod {
  """
  Email and Password Authentication
  """
  email_password

  """
  Github Federated Authentication
  """
  github
}

"""
Email Address
"""
scalar Email

"""
Autogenerated input type of EmailPasswordSignIn
"""
input EmailPasswordSignInInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String

  """
  user email
  """
  email: Email!

  """
  user password
  """
  password: String!

  """
  remember password
  """
  remember: Boolean!
}

"""
Autogenerated return type of EmailPasswordSignIn
"""
type EmailPasswordSignInPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String

  """
  Errors encountered during execution of the mutation.
  """
  errors: [String!]!

  """
  redirect url path when sig in successful
  """
  redirectPath: String
  user: accounts_user
}

"""
A valid http/https url or image uri
"""
scalar HttpUrl

type RootMutation {
  emailPasswordSignIn(
    """
    Parameters for EmailPasswordSignIn
    """
    input: EmailPasswordSignInInput!
  ): EmailPasswordSignInPayload
}

type RootQuery {
  """
  Check webid available.
  """
  accountsWebidAvailable(webid: String!): Boolean!

  """
  Return information about current Brickdoc server instance.
  """
  metadata: metadata!
}

"""
A user is an individual's accounts on Brickdoc can make new content.
"""
type accounts_user {
  """
  the user's public profile bio
  """
  bio: String

  """
  User's email address
  """
  email: String
  id: ID!

  """
  User's preferred language
  """
  locale: String!

  """
  Human-readable name of the user
  """
  name: String!

  """
  User's preferred timezone
  """
  timezone: String!

  """
  Like a username, Unique within this instance of Brickdoc.
  """
  webid: String!
}

"""
Brickdoc Global Configuration
"""
type config {
  """
  Enable email and password authentication
  """
  accountsEmailPasswordAuth: Boolean!

  """
  Enabled federated identity providers
  """
  accountsFederatedProviders: [federatedProvider!]!

  """
  Preferred Authentication authentication
  """
  accountsPreferredAuthMethod: AuthMethod!

  """
  User agreement link
  """
  userAgreementLink: HttpUrl!
}

"""
Accounts Federated Identity Provide Configuration
"""
type federatedProvider {
  """
  Provider Logo URI
  """
  logo: HttpUrl!

  """
  Provider Name
  """
  name: String!
}

"""
Represents information about the Brickdoc Server Instance.
"""
type metadata {
  """
  Current available locales.
  """
  availableLocales: [select_option!]!

  """
  Brickdoc Global Config
  """
  config: config!
  id: ID!
}

"""
Option Object for BrickDesign Select Component.
"""
type select_option {
  """
  option label
  """
  label: String!

  """
  option value
  """
  value: String!
}
